{"file_contents":{"drizzle.config.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"replit.md":{"content":"# Replit.md\n\n## Overview\n\nUnalon is a social activity planning mobile web application that helps users connect and organize activities together. The app uses the tagline \"NEVER DO IT ALON\" and focuses on community building through shared experiences. It's built as a full-stack TypeScript application with a React frontend and Express backend, designed with a mobile-first approach.\n\n## User Preferences\n\nPreferred communication style: Simple, everyday language.\n\n## System Architecture\n\nThe application follows a modern full-stack architecture with clear separation between client and server code:\n\n- **Frontend**: React with TypeScript, using Vite as the build tool\n- **Backend**: Express.js server with TypeScript\n- **Database**: PostgreSQL with Drizzle ORM (configured but may need setup)\n- **UI Framework**: Tailwind CSS with shadcn/ui component library\n- **State Management**: TanStack Query for server state management\n- **Routing**: Wouter for client-side routing\n- **Session Management**: Express sessions for authentication\n\n## Key Components\n\n### Frontend Architecture\n- **Mobile-first design** with a maximum width container for mobile devices\n- **Component-based architecture** using React functional components with hooks\n- **Type-safe development** with TypeScript throughout\n- **Modern UI components** from shadcn/ui with Radix UI primitives\n- **Responsive design** using Tailwind CSS utility classes\n\n### Backend Architecture\n- **RESTful API** built with Express.js\n- **Session-based authentication** using express-session\n- **Type-safe database operations** using Drizzle ORM\n- **In-memory storage** for development (MemStorage class)\n- **Modular route handling** with centralized error handling\n\n### Database Schema\nThe application uses four main entities:\n- **Users**: Profile information, scores, interests, and authentication data\n- **Activities**: Event details, participants, and metadata\n- **Messages**: Direct messaging between users\n- **Activity Requests**: Join requests for activities with approval workflow\n\n### Authentication & Authorization\n- **Session-based authentication** with secure cookie configuration\n- **Protected routes** using a ProtectedRoute component wrapper\n- **Demo authentication** for easy testing with predefined users\n- **Authorization middleware** for API endpoint protection\n\n## Data Flow\n\n1. **User Authentication**: Login flow redirects to main app or shows login page\n2. **Activity Discovery**: Homepage displays available activities from API\n3. **Real-time Updates**: TanStack Query manages cache invalidation and refetching\n4. **Social Features**: Messaging system enables user communication\n5. **Activity Management**: Users can create, join, and manage activities\n\n## External Dependencies\n\n### Core Framework Dependencies\n- **React 18** with modern hooks and concurrent features\n- **Express.js** for server-side API handling\n- **Drizzle ORM** for type-safe database operations\n- **TanStack Query** for server state management\n\n### UI and Styling\n- **Tailwind CSS** for utility-first styling\n- **shadcn/ui** component library built on Radix UI\n- **Google Fonts** (Playfair Display, Plus Jakarta Sans, Roboto)\n- **Material Icons** for consistent iconography\n\n### Development Tools\n- **Vite** for fast development and building\n- **TypeScript** for type safety\n- **ESBuild** for production bundling\n\n### Database and Storage\n- **@neondatabase/serverless** for PostgreSQL connection\n- **connect-pg-simple** for session storage\n- **In-memory storage** as fallback for development\n\n## Deployment Strategy\n\n### Development Environment\n- **Vite dev server** for frontend with HMR\n- **tsx** for running TypeScript server code directly\n- **Development-specific features** like replit integration and error overlays\n\n### Production Build Process\n1. **Frontend build**: Vite builds React app to `dist/public`\n2. **Backend build**: ESBuild bundles server code to `dist/index.js`\n3. **Static file serving**: Production server serves built frontend files\n4. **Environment variables**: Database URL and session secrets from environment\n\n### Database Management\n- **Drizzle migrations** for schema changes\n- **Push command** for development schema updates\n- **PostgreSQL dialect** configured for production database\n\nThe application is designed to be easily deployable to cloud platforms with minimal configuration, requiring only database URL and session secret environment variables.","size_bytes":4429},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      colors: {\n        background: \"var(--background)\",\n        foreground: \"var(--foreground)\",\n        card: {\n          DEFAULT: \"var(--card)\",\n          foreground: \"var(--card-foreground)\",\n        },\n        popover: {\n          DEFAULT: \"var(--popover)\",\n          foreground: \"var(--popover-foreground)\",\n        },\n        primary: {\n          DEFAULT: \"var(--primary)\",\n          foreground: \"var(--primary-foreground)\",\n        },\n        secondary: {\n          DEFAULT: \"var(--secondary)\",\n          foreground: \"var(--secondary-foreground)\",\n        },\n        muted: {\n          DEFAULT: \"var(--muted)\",\n          foreground: \"var(--muted-foreground)\",\n        },\n        accent: {\n          DEFAULT: \"var(--accent)\",\n          foreground: \"var(--accent-foreground)\",\n        },\n        destructive: {\n          DEFAULT: \"var(--destructive)\",\n          foreground: \"var(--destructive-foreground)\",\n        },\n        border: \"var(--border)\",\n        input: \"var(--input)\",\n        ring: \"var(--ring)\",\n        chart: {\n          \"1\": \"var(--chart-1)\",\n          \"2\": \"var(--chart-2)\",\n          \"3\": \"var(--chart-3)\",\n          \"4\": \"var(--chart-4)\",\n          \"5\": \"var(--chart-5)\",\n        },\n        sidebar: {\n          DEFAULT: \"var(--sidebar-background)\",\n          foreground: \"var(--sidebar-foreground)\",\n          primary: \"var(--sidebar-primary)\",\n          \"primary-foreground\": \"var(--sidebar-primary-foreground)\",\n          accent: \"var(--sidebar-accent)\",\n          \"accent-foreground\": \"var(--sidebar-accent-foreground)\",\n          border: \"var(--sidebar-border)\",\n          ring: \"var(--sidebar-ring)\",\n        },\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: {\n            height: \"0\",\n          },\n          to: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n        },\n        \"accordion-up\": {\n          from: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n          to: {\n            height: \"0\",\n          },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":2627},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n  server: {\n    fs: {\n      strict: true,\n      deny: [\"**/.*\"],\n    },\n  },\n});\n","size_bytes":971},"server/index.ts":{"content":"import express, { type Request, Response, NextFunction } from \"express\";\nimport { registerRoutes } from \"./routes\";\nimport { setupVite, serveStatic, log } from \"./vite\";\n\nconst app = express();\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"…\";\n      }\n\n      log(logLine);\n    }\n  });\n\n  next();\n});\n\n(async () => {\n  const server = await registerRoutes(app);\n\n  app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n    const status = err.status || err.statusCode || 500;\n    const message = err.message || \"Internal Server Error\";\n\n    res.status(status).json({ message });\n    throw err;\n  });\n\n  // importantly only setup vite in development and after\n  // setting up all the other routes so the catch-all route\n  // doesn't interfere with the other routes\n  if (app.get(\"env\") === \"development\") {\n    await setupVite(app, server);\n  } else {\n    serveStatic(app);\n  }\n\n  // ALWAYS serve the app on the port specified in the environment variable PORT\n  // Other ports are firewalled. Default to 3000 if not specified.\n  // this serves both the API and the client.\n  // It is the only port that is not firewalled.\n  const port = parseInt(process.env.PORT || '5000', 10);\n  server.listen(port, \"0.0.0.0\", () => {\n    log(`serving on 0.0.0.0:${port}`);\n  });\n})();\n","size_bytes":2027},"server/routes.ts":{"content":"import type { Express } from \"express\";\nimport { createServer, type Server } from \"http\";\nimport session from \"express-session\";\nimport { storage } from \"./storage\";\nimport { insertUserSchema, insertActivitySchema, insertMessageSchema, insertActivityRequestSchema, loginSchema } from \"@shared/schema\";\nimport { z } from \"zod\";\n\ndeclare module \"express-session\" {\n  interface SessionData {\n    userId?: string;\n  }\n}\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  // Session middleware\n  app.use(session({\n    secret: process.env.SESSION_SECRET || 'unalon-secret-key',\n    resave: false,\n    saveUninitialized: false,\n    cookie: {\n      secure: false, // Set to true in production with HTTPS\n      httpOnly: true,\n      maxAge: 24 * 60 * 60 * 1000, // 24 hours\n    },\n  }));\n\n  // Health check endpoint for deployment\n  app.get(\"/health\", (req, res) => {\n    res.status(200).json({ status: \"OK\", timestamp: new Date().toISOString() });\n  });\n\n  // Root health check for deployment services\n  app.get(\"/\", (req, res) => {\n    // Check if this looks like a health check request\n    const userAgent = req.headers['user-agent']?.toLowerCase() || '';\n    const accept = req.headers.accept || '';\n    \n    // Common health check patterns\n    const isHealthCheck = \n      userAgent.includes('healthcheck') ||\n      userAgent.includes('probe') ||\n      userAgent.includes('monitor') ||\n      accept.includes('text/plain') ||\n      req.query.health === 'check' ||\n      // Basic requests without browser-like headers\n      (!accept.includes('text/html') && !accept.includes('*/*'));\n    \n    if (isHealthCheck) {\n      res.status(200).send('OK');\n    } else {\n      // Let the static file handler deal with regular browser requests\n      res.status(404).json({ message: \"Not found\" });\n    }\n  });\n\n  // Auth middleware\n  const requireAuth = (req: any, res: any, next: any) => {\n    if (!req.session.userId) {\n      return res.status(401).json({ message: \"Unauthorized\" });\n    }\n    next();\n  };\n\n  // Auth routes\n  app.post(\"/api/login\", async (req, res) => {\n    try {\n      const { email, password } = loginSchema.parse(req.body);\n      \n      // Simple auth - in production, verify password hash\n      const user = await storage.getUserByEmail(email);\n      if (!user) {\n        return res.status(401).json({ message: \"Invalid credentials\" });\n      }\n\n      req.session.userId = user.id;\n      res.json({ user: { ...user, password: undefined } });\n    } catch (error) {\n      res.status(400).json({ message: \"Invalid request data\" });\n    }\n  });\n\n  app.post(\"/api/register\", async (req, res) => {\n    try {\n      const userData = insertUserSchema.parse(req.body);\n      \n      // Check if user exists\n      const existingUser = await storage.getUserByEmail(userData.email);\n      if (existingUser) {\n        return res.status(400).json({ message: \"User already exists\" });\n      }\n\n      const user = await storage.createUser(userData);\n      req.session.userId = user.id;\n      res.json({ user: { ...user, password: undefined } });\n    } catch (error) {\n      res.status(400).json({ message: \"Invalid request data\" });\n    }\n  });\n\n  app.post(\"/api/logout\", (req, res) => {\n    req.session.destroy((err) => {\n      if (err) {\n        return res.status(500).json({ message: \"Could not log out\" });\n      }\n      res.json({ message: \"Logged out successfully\" });\n    });\n  });\n\n  app.get(\"/api/me\", requireAuth, async (req, res) => {\n    try {\n      const user = await storage.getUser(req.session.userId!);\n      if (!user) {\n        return res.status(404).json({ message: \"User not found\" });\n      }\n      res.json({ user: { ...user, password: undefined } });\n    } catch (error) {\n      res.status(500).json({ message: \"Internal server error\" });\n    }\n  });\n\n  // Activity routes\n  app.get(\"/api/activities\", requireAuth, async (req, res) => {\n    try {\n      const activities = await storage.getActivities(req.session.userId);\n      \n      // Add host information to each activity\n      const activitiesWithHosts = await Promise.all(\n        activities.map(async (activity) => {\n          const host = await storage.getUser(activity.hostId);\n          return {\n            ...activity,\n            host: host ? { ...host, password: undefined } : null,\n          };\n        })\n      );\n\n      res.json(activitiesWithHosts);\n    } catch (error) {\n      res.status(500).json({ message: \"Internal server error\" });\n    }\n  });\n\n  app.get(\"/api/activities/:id\", requireAuth, async (req, res) => {\n    try {\n      const activityId = req.params.id;\n      const activity = await storage.getActivity(activityId);\n      \n      if (!activity) {\n        return res.status(404).json({ message: \"Activity not found\" });\n      }\n\n      // Add host information\n      const host = await storage.getUser(activity.hostId);\n      const activityWithHost = {\n        ...activity,\n        host: host ? { ...host, password: undefined } : null,\n      };\n\n      res.json(activityWithHost);\n    } catch (error) {\n      res.status(500).json({ message: \"Internal server error\" });\n    }\n  });\n\n  app.post(\"/api/activities\", requireAuth, async (req, res) => {\n    try {\n      const activityData = insertActivitySchema.parse({\n        ...req.body,\n        hostId: req.session.userId,\n      });\n      \n      const activity = await storage.createActivity(activityData);\n      const host = await storage.getUser(activity.hostId);\n      \n      res.json({\n        ...activity,\n        host: host ? { ...host, password: undefined } : null,\n      });\n    } catch (error) {\n      res.status(400).json({ message: \"Invalid request data\" });\n    }\n  });\n\n  app.post(\"/api/activities/:id/request\", requireAuth, async (req, res) => {\n    try {\n      const activityId = req.params.id;\n      const userId = req.session.userId!;\n\n      // Check if activity exists\n      const activity = await storage.getActivity(activityId);\n      if (!activity) {\n        return res.status(404).json({ message: \"Activity not found\" });\n      }\n\n      // Check if user is already a participant or host\n      if (activity.hostId === userId || activity.participantIds?.includes(userId)) {\n        return res.status(400).json({ message: \"Already participating in this activity\" });\n      }\n\n      // Check if activity is full\n      if ((activity.currentParticipants || 0) >= activity.maxParticipants) {\n        return res.status(400).json({ message: \"Activity is full\" });\n      }\n\n      // Create activity request\n      const request = await storage.createActivityRequest({\n        activityId,\n        userId,\n      });\n\n      res.json(request);\n    } catch (error) {\n      res.status(500).json({ message: \"Internal server error\" });\n    }\n  });\n\n  app.get(\"/api/my-plans\", requireAuth, async (req, res) => {\n    try {\n      const userId = req.session.userId!;\n      const activities = await storage.getActivitiesByParticipant(userId);\n      \n      // Add host information\n      const activitiesWithHosts = await Promise.all(\n        activities.map(async (activity) => {\n          const host = await storage.getUser(activity.hostId);\n          return {\n            ...activity,\n            host: host ? { ...host, password: undefined } : null,\n          };\n        })\n      );\n\n      // Separate upcoming and past activities\n      const now = new Date();\n      const upcoming = activitiesWithHosts.filter(a => new Date(a.datetime) > now);\n      const past = activitiesWithHosts.filter(a => new Date(a.datetime) <= now);\n\n      res.json({ upcoming, past });\n    } catch (error) {\n      res.status(500).json({ message: \"Internal server error\" });\n    }\n  });\n\n  // Chat routes\n  app.get(\"/api/conversations\", requireAuth, async (req, res) => {\n    try {\n      const userId = req.session.userId!;\n      const conversations = await storage.getConversations(userId);\n      res.json(conversations);\n    } catch (error) {\n      res.status(500).json({ message: \"Internal server error\" });\n    }\n  });\n\n  app.get(\"/api/messages/:userId\", requireAuth, async (req, res) => {\n    try {\n      const currentUserId = req.session.userId!;\n      const otherUserId = req.params.userId;\n      \n      const messages = await storage.getMessages(currentUserId, otherUserId);\n      \n      // Mark messages as read\n      await storage.markMessagesAsRead(otherUserId, currentUserId);\n      \n      res.json(messages);\n    } catch (error) {\n      res.status(500).json({ message: \"Internal server error\" });\n    }\n  });\n\n  app.post(\"/api/messages\", requireAuth, async (req, res) => {\n    try {\n      const messageData = insertMessageSchema.parse({\n        ...req.body,\n        senderId: req.session.userId,\n      });\n      \n      const message = await storage.createMessage(messageData);\n      res.json(message);\n    } catch (error) {\n      res.status(400).json({ message: \"Invalid request data\" });\n    }\n  });\n\n  const httpServer = createServer(app);\n  return httpServer;\n}\n","size_bytes":8911},"server/storage.ts":{"content":"import { type User, type InsertUser, type Activity, type InsertActivity, type Message, type InsertMessage, type ActivityRequest, type InsertActivityRequest } from \"@shared/schema\";\nimport { randomUUID } from \"crypto\";\n\nexport interface IStorage {\n  // User methods\n  getUser(id: string): Promise<User | undefined>;\n  getUserByEmail(email: string): Promise<User | undefined>;\n  createUser(user: InsertUser): Promise<User>;\n\n  // Activity methods\n  getActivities(userId?: string): Promise<Activity[]>;\n  getActivity(id: string): Promise<Activity | undefined>;\n  createActivity(activity: InsertActivity): Promise<Activity>;\n  updateActivity(id: string, updates: Partial<Activity>): Promise<Activity | undefined>;\n  getActivitiesByHost(hostId: string): Promise<Activity[]>;\n  getActivitiesByParticipant(userId: string): Promise<Activity[]>;\n\n  // Message methods\n  getConversations(userId: string): Promise<{ user: User; lastMessage: Message; unreadCount: number }[]>;\n  getMessages(userId1: string, userId2: string): Promise<Message[]>;\n  createMessage(message: InsertMessage): Promise<Message>;\n  markMessagesAsRead(senderId: string, receiverId: string): Promise<void>;\n\n  // Activity request methods\n  createActivityRequest(request: InsertActivityRequest): Promise<ActivityRequest>;\n  getActivityRequests(activityId: string): Promise<ActivityRequest[]>;\n  getUserActivityRequest(activityId: string, userId: string): Promise<ActivityRequest | undefined>;\n  updateActivityRequest(id: string, status: string): Promise<ActivityRequest | undefined>;\n}\n\nexport class MemStorage implements IStorage {\n  private users: Map<string, User> = new Map();\n  private activities: Map<string, Activity> = new Map();\n  private messages: Map<string, Message> = new Map();\n  private activityRequests: Map<string, ActivityRequest> = new Map();\n\n  constructor() {\n    this.seedData();\n  }\n\n  private seedData() {\n    // Create sample users\n    const users = [\n      {\n        id: \"user1\",\n        username: \"ethan_sf\",\n        email: \"ethan@example.com\",\n        name: \"Ethan\",\n        age: 24,\n        location: \"San Francisco\",\n        avatar: \"https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=400\",\n        unalonScore: 85,\n        interests: [\"Hiking\", \"Photography\", \"Reading\", \"Cooking\", \"Travel\"],\n        favoriteQuote: \"The only way to do great work is to love what you do.\",\n        createdAt: new Date(),\n      },\n      {\n        id: \"user2\",\n        username: \"sarah_games\",\n        email: \"sarah@example.com\",\n        name: \"Sarah\",\n        age: 28,\n        location: \"San Francisco\",\n        avatar: \"https://images.unsplash.com/photo-1494790108755-2616b612b786?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=400\",\n        unalonScore: 92,\n        interests: [\"Board Games\", \"Social\", \"Fun\"],\n        favoriteQuote: \"Life is more fun when you share it with others.\",\n        createdAt: new Date(),\n      },\n      {\n        id: \"user3\",\n        username: \"marcus_coffee\",\n        email: \"marcus@example.com\", \n        name: \"Marcus\",\n        age: 26,\n        location: \"San Francisco\",\n        avatar: \"https://images.unsplash.com/photo-1500648767791-00dcc994a43e?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=400\",\n        unalonScore: 78,\n        interests: [\"Coffee\", \"Conversations\", \"Philosophy\"],\n        favoriteQuote: \"Good coffee and good conversation make everything better.\",\n        createdAt: new Date(),\n      },\n      {\n        id: \"user4\",\n        username: \"alex_hiker\",\n        email: \"alex@example.com\",\n        name: \"Alex\",\n        age: 30,\n        location: \"San Francisco\",\n        avatar: \"https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=400\",\n        unalonScore: 95,\n        interests: [\"Hiking\", \"Outdoors\", \"Adventure\"],\n        favoriteQuote: \"The mountains are calling and I must go.\",\n        createdAt: new Date(),\n      },\n      {\n        id: \"user5\",\n        username: \"maya_photo\",\n        email: \"maya@example.com\",\n        name: \"Maya\",\n        age: 25,\n        location: \"San Francisco\", \n        avatar: \"https://images.unsplash.com/photo-1539571696357-5a69c17a67c6?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=400\",\n        unalonScore: 88,\n        interests: [\"Photography\", \"Art\", \"Urban Exploration\"],\n        favoriteQuote: \"Every picture tells a story.\",\n        createdAt: new Date(),\n      }\n    ];\n\n    users.forEach(user => this.users.set(user.id, user));\n\n    // Create sample activities\n    const activities = [\n      {\n        id: \"activity1\",\n        title: \"Board Game Night\",\n        description: \"🎲 Weekly social gathering for strategy games and fun!\",\n        hostId: \"user2\",\n        location: \"Community Center\",\n        datetime: new Date(Date.now() + 3 * 60 * 60 * 1000), // 3 hours from now\n        duration: \"3 hours\",\n        maxParticipants: 6,\n        currentParticipants: 3,\n        vibes: [\"Social\", \"Fun\"],\n        participantIds: [\"user1\", \"user3\", \"user4\"],\n        image: \"https://images.unsplash.com/photo-1611371805429-8b5c1b2c34ba?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600\",\n        userRequested: false,\n        createdAt: new Date(),\n      },\n      {\n        id: \"activity2\",\n        title: \"Coffee & Conversation\",\n        description: \"☕ Deep conversations over great coffee - perfect Sunday morning!\",\n        hostId: \"user3\",\n        location: \"Blue Bottle Coffee\",\n        datetime: new Date(Date.now() + 24 * 60 * 60 * 1000), // Tomorrow\n        duration: \"1.5 hours\",\n        maxParticipants: 4,\n        currentParticipants: 2,\n        vibes: [\"Chill\", \"Talkative\"],\n        participantIds: [\"user1\", \"user5\"],\n        image: \"https://images.unsplash.com/photo-1554118811-1e0d58224f24?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600\",\n        userRequested: false,\n        createdAt: new Date(),\n      },\n      {\n        id: \"activity3\",\n        title: \"Weekend Hiking Adventure\",\n        description: \"🥾 Explore beautiful trails with amazing city views!\",\n        hostId: \"user4\",\n        location: \"Twin Peaks Trailhead\",\n        datetime: new Date(Date.now() + 5 * 24 * 60 * 60 * 1000), // 5 days from now\n        duration: \"4 hours\",\n        maxParticipants: 8,\n        currentParticipants: 4,\n        vibes: [\"Adventurous\", \"Outdoors\"],\n        participantIds: [\"user1\", \"user2\", \"user3\", \"user5\"],\n        image: \"https://images.unsplash.com/photo-1551632811-561732d1e306?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600\",\n        userRequested: false,\n        createdAt: new Date(),\n      },\n      {\n        id: \"activity4\",\n        title: \"Urban Photography Walk\",\n        description: \"📸 Capture the city's hidden gems and street art!\",\n        hostId: \"user5\",\n        location: \"Mission District\",\n        datetime: new Date(Date.now() + 6 * 24 * 60 * 60 * 1000), // 6 days from now\n        duration: \"2.5 hours\",\n        maxParticipants: 6,\n        currentParticipants: 3,\n        vibes: [\"Creative\", \"Urban\"],\n        participantIds: [\"user1\", \"user2\", \"user4\"],\n        image: \"https://images.unsplash.com/photo-1449824913935-59a10b8d2000?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600\",\n        userRequested: false,\n        createdAt: new Date(),\n      }\n    ];\n\n    activities.forEach(activity => this.activities.set(activity.id, activity));\n\n    // Create sample messages\n    const messages = [\n      {\n        id: \"msg1\",\n        senderId: \"user2\",\n        receiverId: \"user1\",\n        content: \"Hi! Thanks for joining the board game night!\",\n        timestamp: new Date(Date.now() - 5 * 60 * 1000),\n        isRead: true,\n      },\n      {\n        id: \"msg2\",\n        senderId: \"user1\",\n        receiverId: \"user2\",\n        content: \"Excited to be there! What games are we playing?\",\n        timestamp: new Date(Date.now() - 3 * 60 * 1000),\n        isRead: true,\n      },\n      {\n        id: \"msg3\",\n        senderId: \"user2\",\n        receiverId: \"user1\",\n        content: \"Great! See you tonight for board games 🎲\",\n        timestamp: new Date(Date.now() - 30 * 1000),\n        isRead: false,\n      },\n      {\n        id: \"msg4\",\n        senderId: \"user3\",\n        receiverId: \"user1\",\n        content: \"Looking forward to our coffee chat tomorrow!\",\n        timestamp: new Date(Date.now() - 45 * 60 * 1000),\n        isRead: true,\n      },\n    ];\n\n    messages.forEach(message => this.messages.set(message.id, message));\n  }\n\n  async getUser(id: string): Promise<User | undefined> {\n    return this.users.get(id);\n  }\n\n  async getUserByEmail(email: string): Promise<User | undefined> {\n    return Array.from(this.users.values()).find(user => user.email === email);\n  }\n\n  async createUser(insertUser: InsertUser): Promise<User> {\n    const id = randomUUID();\n    const user: User = {\n      ...insertUser,\n      id,\n      unalonScore: 0,\n      createdAt: new Date(),\n    };\n    this.users.set(id, user);\n    return user;\n  }\n\n  async getActivities(userId?: string): Promise<Activity[]> {\n    const activities = Array.from(this.activities.values()).sort((a, b) => a.datetime.getTime() - b.datetime.getTime());\n    \n    if (userId) {\n      // Check if user has requested each activity\n      return Promise.all(activities.map(async (activity) => {\n        const request = await this.getUserActivityRequest(activity.id, userId);\n        return {\n          ...activity,\n          userRequested: !!request\n        };\n      }));\n    }\n    \n    return activities;\n  }\n\n  async getActivity(id: string): Promise<Activity | undefined> {\n    return this.activities.get(id);\n  }\n\n  async createActivity(insertActivity: InsertActivity): Promise<Activity> {\n    const id = randomUUID();\n    const activity: Activity = {\n      ...insertActivity,\n      id,\n      currentParticipants: 0,\n      participantIds: [],\n      userRequested: false,\n      createdAt: new Date(),\n    };\n    this.activities.set(id, activity);\n    return activity;\n  }\n\n  async updateActivity(id: string, updates: Partial<Activity>): Promise<Activity | undefined> {\n    const activity = this.activities.get(id);\n    if (!activity) return undefined;\n    \n    const updatedActivity = { ...activity, ...updates };\n    this.activities.set(id, updatedActivity);\n    return updatedActivity;\n  }\n\n  async getActivitiesByHost(hostId: string): Promise<Activity[]> {\n    return Array.from(this.activities.values()).filter(activity => activity.hostId === hostId);\n  }\n\n  async getActivitiesByParticipant(userId: string): Promise<Activity[]> {\n    return Array.from(this.activities.values()).filter(activity => \n      activity.participantIds?.includes(userId) || activity.hostId === userId\n    );\n  }\n\n  async getConversations(userId: string): Promise<{ user: User; lastMessage: Message; unreadCount: number }[]> {\n    const userMessages = Array.from(this.messages.values()).filter(\n      msg => msg.senderId === userId || msg.receiverId === userId\n    );\n\n    const conversationMap = new Map<string, { lastMessage: Message; messages: Message[] }>();\n\n    userMessages.forEach(message => {\n      const otherUserId = message.senderId === userId ? message.receiverId : message.senderId;\n      \n      if (!conversationMap.has(otherUserId)) {\n        conversationMap.set(otherUserId, { lastMessage: message, messages: [message] });\n      } else {\n        const conv = conversationMap.get(otherUserId)!;\n        conv.messages.push(message);\n        if (message.timestamp > conv.lastMessage.timestamp) {\n          conv.lastMessage = message;\n        }\n      }\n    });\n\n    const conversations = [];\n    for (const [otherUserId, { lastMessage, messages }] of conversationMap) {\n      const user = this.users.get(otherUserId);\n      if (user) {\n        const unreadCount = messages.filter(msg => \n          msg.senderId === otherUserId && msg.receiverId === userId && !msg.isRead\n        ).length;\n        \n        conversations.push({ user, lastMessage, unreadCount });\n      }\n    }\n\n    return conversations.sort((a, b) => b.lastMessage.timestamp.getTime() - a.lastMessage.timestamp.getTime());\n  }\n\n  async getMessages(userId1: string, userId2: string): Promise<Message[]> {\n    return Array.from(this.messages.values())\n      .filter(msg => \n        (msg.senderId === userId1 && msg.receiverId === userId2) ||\n        (msg.senderId === userId2 && msg.receiverId === userId1)\n      )\n      .sort((a, b) => a.timestamp.getTime() - b.timestamp.getTime());\n  }\n\n  async createMessage(insertMessage: InsertMessage): Promise<Message> {\n    const id = randomUUID();\n    const message: Message = {\n      ...insertMessage,\n      id,\n      timestamp: new Date(),\n      isRead: false,\n    };\n    this.messages.set(id, message);\n    return message;\n  }\n\n  async markMessagesAsRead(senderId: string, receiverId: string): Promise<void> {\n    for (const message of this.messages.values()) {\n      if (message.senderId === senderId && message.receiverId === receiverId && !message.isRead) {\n        message.isRead = true;\n      }\n    }\n  }\n\n  async createActivityRequest(insertRequest: InsertActivityRequest): Promise<ActivityRequest> {\n    const id = randomUUID();\n    const request: ActivityRequest = {\n      ...insertRequest,\n      id,\n      status: \"pending\",\n      createdAt: new Date(),\n    };\n    this.activityRequests.set(id, request);\n    return request;\n  }\n\n  async getActivityRequests(activityId: string): Promise<ActivityRequest[]> {\n    return Array.from(this.activityRequests.values()).filter(req => req.activityId === activityId);\n  }\n\n  async getUserActivityRequest(activityId: string, userId: string): Promise<ActivityRequest | undefined> {\n    return Array.from(this.activityRequests.values()).find(req => \n      req.activityId === activityId && req.userId === userId\n    );\n  }\n\n  async updateActivityRequest(id: string, status: string): Promise<ActivityRequest | undefined> {\n    const request = this.activityRequests.get(id);\n    if (!request) return undefined;\n    \n    request.status = status;\n    this.activityRequests.set(id, request);\n    return request;\n  }\n}\n\nexport const storage = new MemStorage();\n","size_bytes":14072},"server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true as const,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2263},"shared/schema.ts":{"content":"import { sql } from \"drizzle-orm\";\nimport { pgTable, text, varchar, timestamp, integer, boolean, jsonb } from \"drizzle-orm/pg-core\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\nexport const users = pgTable(\"users\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  username: text(\"username\").notNull().unique(),\n  email: text(\"email\").notNull().unique(),\n  name: text(\"name\").notNull(),\n  age: integer(\"age\"),\n  location: text(\"location\"),\n  avatar: text(\"avatar\"),\n  unalonScore: integer(\"unalon_score\").default(0),\n  interests: jsonb(\"interests\").$type<string[]>().default([]),\n  favoriteQuote: text(\"favorite_quote\"),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\nexport const activities = pgTable(\"activities\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  title: text(\"title\").notNull(),\n  description: text(\"description\").notNull(),\n  hostId: varchar(\"host_id\").notNull().references(() => users.id),\n  location: text(\"location\").notNull(),\n  datetime: timestamp(\"datetime\").notNull(),\n  duration: text(\"duration\").notNull(),\n  maxParticipants: integer(\"max_participants\").notNull(),\n  currentParticipants: integer(\"current_participants\").default(0),\n  vibes: jsonb(\"vibes\").$type<string[]>().default([]),\n  participantIds: jsonb(\"participant_ids\").$type<string[]>().default([]),\n  image: text(\"image\"),\n  userRequested: boolean(\"user_requested\").default(false),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\nexport const messages = pgTable(\"messages\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  senderId: varchar(\"sender_id\").notNull().references(() => users.id),\n  receiverId: varchar(\"receiver_id\").notNull().references(() => users.id),\n  content: text(\"content\").notNull(),\n  timestamp: timestamp(\"timestamp\").defaultNow(),\n  isRead: boolean(\"is_read\").default(false),\n});\n\nexport const activityRequests = pgTable(\"activity_requests\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  activityId: varchar(\"activity_id\").notNull().references(() => activities.id),\n  userId: varchar(\"user_id\").notNull().references(() => users.id),\n  status: text(\"status\").notNull().default(\"pending\"), // pending, accepted, rejected\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\nexport const insertUserSchema = createInsertSchema(users).omit({\n  id: true,\n  createdAt: true,\n  unalonScore: true,\n});\n\nexport const insertActivitySchema = createInsertSchema(activities).omit({\n  id: true,\n  createdAt: true,\n  currentParticipants: true,\n  participantIds: true,\n  userRequested: true,\n});\n\nexport const insertMessageSchema = createInsertSchema(messages).omit({\n  id: true,\n  timestamp: true,\n  isRead: true,\n});\n\nexport const insertActivityRequestSchema = createInsertSchema(activityRequests).omit({\n  id: true,\n  createdAt: true,\n  status: true,\n});\n\nexport const loginSchema = z.object({\n  email: z.string().email(),\n  password: z.string().min(1),\n});\n\nexport type InsertUser = z.infer<typeof insertUserSchema>;\nexport type User = typeof users.$inferSelect;\nexport type InsertActivity = z.infer<typeof insertActivitySchema>;\nexport type Activity = typeof activities.$inferSelect;\nexport type InsertMessage = z.infer<typeof insertMessageSchema>;\nexport type Message = typeof messages.$inferSelect;\nexport type InsertActivityRequest = z.infer<typeof insertActivityRequestSchema>;\nexport type ActivityRequest = typeof activityRequests.$inferSelect;\nexport type LoginData = z.infer<typeof loginSchema>;\n","size_bytes":3543},"client/src/App.tsx":{"content":"import { Switch, Route } from \"wouter\";\nimport { queryClient } from \"./lib/queryClient\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport { AuthProvider } from \"@/context/AuthContext\";\nimport { SearchProvider, useSearch } from \"@/context/SearchContext\";\nimport ProtectedRoute from \"@/components/ProtectedRoute\";\nimport BottomNavigation from \"@/components/BottomNavigation\";\nimport NotificationsDropdown from \"@/components/NotificationsDropdown\";\nimport CreateShortsModal from \"@/components/CreateShortsModal\";\nimport HomePage from \"@/pages/HomePage\";\nimport MyPlansPage from \"@/pages/MyPlansPage\";\nimport CreatePage from \"@/pages/CreatePage\";\nimport ChatPage from \"@/pages/ChatPage\";\nimport ProfilePage from \"@/pages/ProfilePage\";\nimport EventDetailsPage from \"@/pages/EventDetailsPage\";\nimport ActivitiesPage from \"@/pages/ActivitiesPage\";\nimport NotFound from \"@/pages/not-found\";\nimport { useState } from \"react\";\nimport { useLocation } from \"wouter\";\n\nfunction Router() {\n  const { searchQuery, setSearchQuery } = useSearch();\n  const [showSearch, setShowSearch] = useState(false);\n  const [showCreateModal, setShowCreateModal] = useState(false);\n  const [showCreateShortsModal, setShowCreateShortsModal] = useState(false);\n  const [showNotifications, setShowNotifications] = useState(false);\n  const [location, setLocation] = useLocation();\n\n  return (\n    <ProtectedRoute>\n      <div className=\"max-w-md mx-auto bg-unalon-100 relative min-h-screen flex flex-col\">\n        {/* Header */}\n        <header className={`flex justify-between items-center p-4 border-b border-unalon-300 bg-unalon-100 fixed top-0 left-0 right-0 max-w-md mx-auto z-20 transition-all duration-500 ease-in-out ${\n          showSearch ? 'bg-white/95 backdrop-blur-md shadow-lg' : ''\n        }`}>\n          <div className={`transition-all duration-500 ease-in-out ${\n            showSearch ? 'opacity-0 scale-95 pointer-events-none' : 'opacity-100 scale-100'\n          }`}>\n            <span className=\"font-black text-2xl text-unalon-900 unalon-logo\">\n              {location === '/my-plans' ? 'My Plans' : location === '/activities' ? 'Activities' : location === '/chat' ? 'Messages' : 'unalon'}\n            </span>\n          </div>\n          \n          {/* Search Input - Full width when active */}\n          <div className={`absolute inset-0 px-4 transition-all duration-500 ease-in-out ${\n            showSearch ? 'opacity-100 scale-100' : 'opacity-0 scale-95 pointer-events-none'\n          }`}>\n            <div className=\"relative h-full flex items-center\">\n              <input\n                type=\"text\"\n                placeholder=\"Search by name, interest, or location\"\n                value={searchQuery}\n                onChange={(e) => setSearchQuery(e.target.value)}\n                className=\"w-full pl-12 pr-12 py-3 border border-unalon-200 rounded-2xl focus:outline-none focus:ring-2 focus:ring-unalon-400 bg-white/90 backdrop-blur-sm shadow-sm\"\n                autoFocus\n              />\n              <span className=\"material-icons absolute left-4 text-unalon-500 text-lg\">\n                search\n              </span>\n              <button\n                onClick={() => {\n                  setShowSearch(false);\n                  setSearchQuery('');\n                }}\n                className=\"absolute right-4 text-unalon-500 hover:text-unalon-700 transition-colors duration-200\"\n              >\n                <span className=\"material-icons text-lg\">close</span>\n              </button>\n            </div>\n          </div>\n          \n          <div className=\"flex items-center space-x-4\">\n            <button \n              onClick={() => setShowSearch(!showSearch)}\n              className={`text-unalon-700 hover:text-unalon-400 transition-all duration-300 ease-in-out active:scale-95 ${\n                showSearch ? 'text-unalon-900' : ''\n              }`}\n            >\n              <span className=\"material-icons\">{showSearch ? 'close' : 'search'}</span>\n            </button>\n            <button \n              onClick={() => setShowNotifications(!showNotifications)}\n              className={`text-unalon-700 hover:text-unalon-400 transition-all duration-300 ease-in-out active:scale-95 ${\n                showSearch ? 'opacity-0 scale-95 pointer-events-none' : ''\n              }`}\n            >\n              <span className=\"material-icons\">notifications_none</span>\n            </button>\n            <button \n              onClick={() => setLocation('/profile')}\n              className={`text-unalon-700 hover:text-unalon-400 transition-all duration-300 ease-in-out active:scale-95 ${\n                showSearch ? 'opacity-0 scale-95 pointer-events-none' : ''\n              }`}\n            >\n              <span className=\"material-icons\">person</span>\n            </button>\n          </div>\n        </header>\n\n\n\n        {/* Main Content */}\n        <main className=\"flex-grow pt-20 pb-20\">\n          <Switch>\n            <Route path=\"/\" component={HomePage} />\n            <Route path=\"/my-plans\" component={MyPlansPage} />\n            <Route path=\"/create\" component={HomePage} />\n            <Route path=\"/chat\" component={ChatPage} />\n            <Route path=\"/activities\" component={ActivitiesPage} />\n            <Route path=\"/profile\" component={ProfilePage} />\n            <Route path=\"/event/:id\" component={EventDetailsPage} />\n            <Route component={NotFound} />\n          </Switch>\n        </main>\n\n        {/* Create Activity Modal */}\n        {showCreateModal && (\n          <div className=\"fixed inset-0 bg-black/50 backdrop-blur-sm z-50 flex items-center justify-center p-4\" onClick={() => setShowCreateModal(false)}>\n            <div className=\"bg-white rounded-3xl max-w-md w-full max-h-[90vh] overflow-y-auto shadow-2xl\" onClick={(e) => e.stopPropagation()}>\n              <CreatePage onClose={() => setShowCreateModal(false)} />\n            </div>\n          </div>\n        )}\n\n        {/* Create Shorts Modal */}\n        <CreateShortsModal\n          isOpen={showCreateShortsModal}\n          onClose={() => setShowCreateShortsModal(false)}\n        />\n\n        {/* Bottom Navigation */}\n        <BottomNavigation onCreateClick={() => setShowCreateShortsModal(true)} />\n        \n        {/* Notifications Dropdown */}\n        <NotificationsDropdown \n          isOpen={showNotifications} \n          onClose={() => setShowNotifications(false)} \n        />\n      </div>\n    </ProtectedRoute>\n  );\n}\n\nfunction App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <TooltipProvider>\n        <AuthProvider>\n          <SearchProvider>\n            <Toaster />\n            <Router />\n          </SearchProvider>\n        </AuthProvider>\n      </TooltipProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","size_bytes":6900},"client/src/index.css":{"content":"@import url('https://fonts.googleapis.com/css2?family=Playfair+Display:wght@400;700;900&family=Plus+Jakarta+Sans:wght@300;400;500;600;700;800&family=Roboto:wght@300;400;500;700&display=swap');\n@import url('https://fonts.googleapis.com/icon?family=Material+Icons');\n\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n:root {\n  --background: hsl(0, 0%, 100%);\n  --foreground: hsl(0, 0%, 0%);\n  --muted: hsl(0, 0%, 96%);\n  --muted-foreground: hsl(0, 0%, 53%);\n  --popover: hsl(0, 0%, 100%);\n  --popover-foreground: hsl(0, 0%, 0%);\n  --card: hsl(0, 0%, 100%);\n  --card-foreground: hsl(0, 0%, 0%);\n  --border: hsl(0, 0%, 73%);\n  --input: hsl(0, 0%, 90%);\n  --primary: hsl(0, 0%, 0%);\n  --primary-foreground: hsl(0, 0%, 100%);\n  --secondary: hsl(0, 0%, 96%);\n  --secondary-foreground: hsl(0, 0%, 0%);\n  --accent: hsl(0, 0%, 96%);\n  --accent-foreground: hsl(0, 0%, 0%);\n  --destructive: hsl(0, 84%, 60%);\n  --destructive-foreground: hsl(0, 0%, 98%);\n  --ring: hsl(0, 0%, 0%);\n  --radius: 1rem;\n}\n\n.dark {\n  --background: hsl(0, 0%, 0%);\n  --foreground: hsl(0, 0%, 100%);\n  --muted: hsl(0, 0%, 15%);\n  --muted-foreground: hsl(0, 0%, 65%);\n  --popover: hsl(0, 0%, 0%);\n  --popover-foreground: hsl(0, 0%, 100%);\n  --card: hsl(0, 0%, 0%);\n  --card-foreground: hsl(0, 0%, 100%);\n  --border: hsl(0, 0%, 27%);\n  --input: hsl(0, 0%, 15%);\n  --primary: hsl(0, 0%, 100%);\n  --primary-foreground: hsl(0, 0%, 0%);\n  --secondary: hsl(0, 0%, 15%);\n  --secondary-foreground: hsl(0, 0%, 100%);\n  --accent: hsl(0, 0%, 15%);\n  --accent-foreground: hsl(0, 0%, 100%);\n  --destructive: hsl(0, 62%, 30%);\n  --destructive-foreground: hsl(0, 0%, 98%);\n  --ring: hsl(0, 0%, 83%);\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n\n  body {\n    @apply font-sans antialiased bg-background text-foreground;\n    font-family: 'Roboto', 'Plus Jakarta Sans', sans-serif;\n  }\n}\n\n/* Custom styles for Unalon */\n.unalon-logo {\n  font-family: 'Playfair Display', serif;\n  font-weight: 900;\n}\n\n/* Modern Unified Color Theme - Soft Pastels */\n/* Enhanced Transitions and Animations - More Fluid and Uniform */\n* {\n  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n}\n\n/* Smooth button interactions */\nbutton {\n  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n}\n\n/* Enhanced hover effects */\n.hover-lift {\n  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n}\n\n.hover-lift:hover {\n  transform: translateY(-3px);\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);\n}\n\n/* Smooth modal animations */\n.modal-enter {\n  animation: modalSlideUp 0.4s cubic-bezier(0.4, 0, 0.2, 1);\n}\n\n@keyframes modalSlideUp {\n  from {\n    transform: translateY(100%) scale(0.95);\n    opacity: 0;\n  }\n  to {\n    transform: translateY(0) scale(1);\n    opacity: 1;\n  }\n}\n\n/* Enhanced card interactions */\n.card-hover {\n  transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);\n}\n\n.card-hover:hover {\n  transform: translateY(-6px) scale(1.02);\n  box-shadow: 0 25px 30px -5px rgba(0, 0, 0, 0.15), 0 15px 15px -5px rgba(0, 0, 0, 0.08);\n}\n\n/* Smooth fade transitions */\n.fade-in {\n  animation: fadeIn 0.4s cubic-bezier(0.4, 0, 0.2, 1);\n}\n\n@keyframes fadeIn {\n  from {\n    opacity: 0;\n    transform: scale(0.9) translateY(10px);\n  }\n  to {\n    opacity: 1;\n    transform: scale(1) translateY(0);\n  }\n}\n\n/* Staggered animations for lists */\n.stagger-item {\n  animation: staggerFadeIn 0.5s cubic-bezier(0.4, 0, 0.2, 1) forwards;\n  opacity: 0;\n  transform: translateY(20px);\n}\n\n@keyframes staggerFadeIn {\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n/* Smooth scale transitions */\n.scale-hover {\n  transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n}\n\n.scale-hover:hover {\n  transform: scale(1.05);\n}\n\n/* Enhanced focus states */\n.focus-ring {\n  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n}\n\n.focus-ring:focus {\n  outline: none;\n  box-shadow: 0 0 0 3px rgba(139, 92, 246, 0.3);\n}\n\n/* Smooth color transitions */\n.color-transition {\n  transition: color 0.3s cubic-bezier(0.4, 0, 0.2, 1), background-color 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n}\n\n/* Custom slider styling */\n.slider {\n  -webkit-appearance: none;\n  appearance: none;\n  background: transparent;\n  cursor: pointer;\n}\n\n.slider::-webkit-slider-track {\n  background: hsl(220, 90%, 92%);\n  height: 8px;\n  border-radius: 4px;\n}\n\n.slider::-webkit-slider-thumb {\n  -webkit-appearance: none;\n  appearance: none;\n  background: hsl(280, 50%, 60%);\n  height: 20px;\n  width: 20px;\n  border-radius: 50%;\n  cursor: pointer;\n  transition: all 0.2s ease;\n}\n\n.slider::-webkit-slider-thumb:hover {\n  background: hsl(280, 60%, 70%);\n  transform: scale(1.1);\n}\n\n.slider::-moz-range-track {\n  background: hsl(220, 90%, 92%);\n  height: 8px;\n  border-radius: 4px;\n  border: none;\n}\n\n.slider::-moz-range-thumb {\n  background: hsl(280, 50%, 60%);\n  height: 20px;\n  width: 20px;\n  border-radius: 50%;\n  cursor: pointer;\n  border: none;\n  transition: all 0.2s ease;\n}\n\n.slider::-moz-range-thumb:hover {\n  background: hsl(280, 60%, 70%);\n  transform: scale(1.1);\n}\n\n/* Modern Unified Color Theme - Soft Pastels */\n.bg-unalon-50 { background-color: hsl(220, 100%, 98%); }\n.bg-unalon-100 { background-color: hsl(220, 100%, 96%); }\n.bg-unalon-200 { background-color: hsl(220, 90%, 92%); }\n.bg-unalon-300 { background-color: hsl(220, 80%, 85%); }\n.bg-unalon-400 { background-color: hsl(220, 70%, 75%); }\n.bg-unalon-500 { background-color: hsl(220, 60%, 65%); }\n.bg-unalon-600 { background-color: hsl(220, 50%, 55%); }\n.bg-unalon-700 { background-color: hsl(220, 40%, 45%); }\n.bg-unalon-800 { background-color: hsl(220, 30%, 35%); }\n.bg-unalon-900 { background-color: hsl(220, 20%, 25%); }\n\n.bg-unalon-accent-50 { background-color: hsl(280, 100%, 96%); }\n.bg-unalon-accent-100 { background-color: hsl(280, 90%, 92%); }\n.bg-unalon-accent-200 { background-color: hsl(280, 80%, 88%); }\n.bg-unalon-accent-300 { background-color: hsl(280, 70%, 80%); }\n.bg-unalon-accent-400 { background-color: hsl(280, 60%, 70%); }\n.bg-unalon-accent-500 { background-color: hsl(280, 50%, 60%); }\n.bg-unalon-accent-600 { background-color: hsl(280, 40%, 50%); }\n\n.text-unalon-50 { color: hsl(220, 100%, 98%); }\n.text-unalon-100 { color: hsl(220, 100%, 96%); }\n.text-unalon-200 { color: hsl(220, 90%, 92%); }\n.text-unalon-300 { color: hsl(220, 80%, 85%); }\n.text-unalon-400 { color: hsl(220, 70%, 75%); }\n.text-unalon-500 { color: hsl(220, 60%, 65%); }\n.text-unalon-600 { color: hsl(220, 50%, 55%); }\n.text-unalon-700 { color: hsl(220, 40%, 45%); }\n.text-unalon-800 { color: hsl(220, 30%, 35%); }\n.text-unalon-900 { color: hsl(220, 20%, 25%); }\n\n.text-unalon-accent-50 { color: hsl(280, 100%, 96%); }\n.text-unalon-accent-100 { color: hsl(280, 90%, 92%); }\n.text-unalon-accent-200 { color: hsl(280, 80%, 88%); }\n.text-unalon-accent-300 { color: hsl(280, 70%, 80%); }\n.text-unalon-accent-400 { color: hsl(280, 60%, 70%); }\n.text-unalon-accent-500 { color: hsl(280, 50%, 60%); }\n.text-unalon-accent-600 { color: hsl(280, 40%, 50%); }\n\n.border-unalon-100 { border-color: hsl(220, 100%, 96%); }\n.border-unalon-200 { border-color: hsl(220, 90%, 92%); }\n.border-unalon-300 { border-color: hsl(220, 80%, 85%); }\n.border-unalon-400 { border-color: hsl(220, 70%, 75%); }\n\n.material-icons {\n  font-family: 'Material Icons';\n  font-weight: normal;\n  font-style: normal;\n  font-size: 24px;\n  line-height: 1;\n  letter-spacing: normal;\n  text-transform: none;\n  display: inline-block;\n  white-space: nowrap;\n  word-wrap: normal;\n  direction: ltr;\n  -webkit-font-feature-settings: 'liga';\n  -webkit-font-smoothing: antialiased;\n}\n\n.scrollbar-hide::-webkit-scrollbar {\n  display: none;\n}\n\n.scrollbar-hide {\n  -ms-overflow-style: none;\n  scrollbar-width: none;\n}\n\n.button-effect {\n  transition: opacity 0.2s ease-in-out, transform 0.2s ease-in-out;\n}\n\n.button-effect:hover {\n  opacity: 0.8;\n}\n\n.button-effect:active {\n  opacity: 0.6;\n  transform: scale(0.98);\n}\n\n\n","size_bytes":7804},"client/src/main.tsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n","size_bytes":157},"client/src/components/BottomNavigation.tsx":{"content":"import { useLocation } from 'wouter';\n\ninterface BottomNavigationProps {\n  onCreateClick?: () => void;\n}\n\nexport default function BottomNavigation({ onCreateClick }: BottomNavigationProps = {}) {\n  const [location, setLocation] = useLocation();\n\n  const navigation = [\n    { path: '/', icon: 'home', label: 'Home' },\n    { path: '/my-plans', icon: 'event_note', label: 'My Plans' },\n    { path: '/create', icon: 'add_circle', label: 'Create' },\n    { path: '/chat', icon: 'chat', label: 'Chat' },\n    { path: '/activities', icon: 'attractions', label: 'Activities' },\n  ];\n\n  return (\n    <footer className=\"fixed bottom-0 left-0 right-0 max-w-md mx-auto bg-white border-t border-unalon-200 z-10 shadow-lg\">\n      <div className=\"flex justify-around items-center py-2\">\n        {navigation.map((item) => (\n          <button\n            key={item.path}\n            onClick={() => {\n              if (item.path === '/create' && onCreateClick) {\n                onCreateClick();\n              } else {\n                setLocation(item.path);\n              }\n            }}\n            className={`flex flex-col items-center p-2 rounded-lg transition-all duration-300 cubic-bezier(0.4, 0, 0.2, 1) hover:-translate-y-1 shadow-sm hover:shadow-md ${\n              location === item.path\n                ? 'bg-unalon-500 text-white font-bold shadow-md transform scale-105'\n                : 'text-unalon-600 hover:bg-unalon-100 hover:text-unalon-700 active:bg-unalon-200 active:scale-95'\n            }`}\n          >\n            <span className=\"material-icons text-sm\">{item.icon}</span>\n            <span className=\"text-xs mt-1\">{item.label}</span>\n          </button>\n        ))}\n      </div>\n    </footer>\n  );\n}\n","size_bytes":1709},"client/src/components/CreateShortsModal.tsx":{"content":"import { useState, useEffect } from 'react';\nimport CreatePage from '@/pages/CreatePage';\n\ninterface CreateShortsModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n}\n\nexport default function CreateShortsModal({ \n  isOpen, \n  onClose \n}: CreateShortsModalProps) {\n  const [isAnimating, setIsAnimating] = useState(false);\n  const [isVisible, setIsVisible] = useState(false);\n\n  // Handle entrance animation\n  useEffect(() => {\n    if (isOpen) {\n      // Start from below screen\n      setIsVisible(false);\n      // Small delay to ensure DOM is ready\n      setTimeout(() => {\n        setIsVisible(true);\n      }, 10);\n    } else {\n      setIsVisible(false);\n    }\n  }, [isOpen]);\n\n  if (!isOpen) return null;\n\n  const handleClose = () => {\n    setIsAnimating(true);\n    setTimeout(() => {\n      onClose();\n      setIsAnimating(false);\n    }, 300);\n  };\n\n  return (\n    <>\n      {/* Backdrop */}\n      <div \n        className={`fixed inset-0 bg-black/50 backdrop-blur-sm z-50 transition-opacity duration-300 ${\n          isAnimating ? 'opacity-0' : 'opacity-100'\n        }`}\n        onClick={handleClose}\n      />\n      \n      {/* YouTube Shorts Style Modal */}\n      <div className={`fixed bottom-0 left-0 right-0 max-w-md mx-auto z-50 transition-all duration-700 ease-out ${\n        isAnimating ? 'translate-y-full scale-95 opacity-0' : \n        isVisible ? 'translate-y-0 scale-100 opacity-100' : 'translate-y-full scale-95 opacity-0'\n      }`}>\n        <div className=\"bg-white rounded-t-[32px] shadow-2xl overflow-hidden h-[90vh]\">\n          {/* Handle */}\n          <div className=\"flex justify-center pt-4 pb-2\">\n            <div className=\"w-12 h-1 bg-unalon-300 rounded-full\"></div>\n          </div>\n          \n          {/* Close Button */}\n          <div className=\"absolute top-4 right-4 z-10\">\n            <button\n              onClick={handleClose}\n              className=\"w-8 h-8 bg-unalon-100 rounded-full flex items-center justify-center hover:bg-unalon-200 transition-colors duration-200\"\n            >\n              <span className=\"material-icons text-unalon-600 text-sm\">close</span>\n            </button>\n          </div>\n          \n          {/* Create Page Content */}\n          <div className=\"h-full overflow-y-auto\">\n            <CreatePage />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n} ","size_bytes":2331},"client/src/components/NotificationsDropdown.tsx":{"content":"import { useState } from 'react';\n\ninterface Notification {\n  id: string;\n  type: 'friend_request' | 'event_invite' | 'accepted' | 'story_tag' | 'sponsored_ad';\n  title: string;\n  description: string;\n  timestamp: Date;\n  avatar?: string;\n  isRead: boolean;\n}\n\ninterface NotificationsDropdownProps {\n  isOpen: boolean;\n  onClose: () => void;\n}\n\nexport default function NotificationsDropdown({ isOpen, onClose }: NotificationsDropdownProps) {\n  const [notifications, setNotifications] = useState<Notification[]>([\n    {\n      id: '1',\n      type: 'accepted',\n      title: 'Request accepted!',\n      description: 'Tomorrow at 7:00 PM • Mission District',\n      timestamp: new Date(Date.now() - 1000 * 60 * 60 * 2),\n      avatar: 'https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?auto=format&fit=crop&w=150&h=150',\n      isRead: false\n    },\n    {\n      id: '2',\n      type: 'sponsored_ad',\n      title: '☕ Abhay wants to study at Roastery Coffee',\n      description: 'Great spot for focused work sessions. Join him?',\n      timestamp: new Date(Date.now() - 1000 * 60 * 60 * 3),\n      avatar: 'https://images.unsplash.com/photo-1554118811-1e0d58224f24?auto=format&fit=crop&w=150&h=150',\n      isRead: true\n    },\n    {\n      id: '3',\n      type: 'friend_request',\n      title: 'Sarah wants to connect',\n      description: 'You have 3 mutual interests',\n      timestamp: new Date(Date.now() - 1000 * 60 * 60 * 4),\n      avatar: 'https://images.unsplash.com/photo-1494790108755-2616b612b5ff?auto=format&fit=crop&w=150&h=150',\n      isRead: false\n    },\n    {\n      id: '4',\n      type: 'event_invite',\n      title: 'Alex invited you to Board Game Night',\n      description: 'Tomorrow at 7:00 PM • Mission District',\n      timestamp: new Date(Date.now() - 1000 * 60 * 60 * 5),\n      avatar: 'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?auto=format&fit=crop&w=150&h=150',\n      isRead: false\n    },\n    {\n      id: '5',\n      type: 'sponsored_ad',\n      title: '🎨 Art Workshop at Creative Studio',\n      description: 'Learn painting techniques with local artists',\n      timestamp: new Date(Date.now() - 1000 * 60 * 60 * 6),\n      avatar: 'https://images.unsplash.com/photo-1541961017774-22349e4a1262?auto=format&fit=crop&w=150&h=150',\n      isRead: true\n    },\n    {\n      id: '6',\n      type: 'story_tag',\n      title: 'Mike tagged you in a story',\n      description: 'Check out the new coffee spot we found!',\n      timestamp: new Date(Date.now() - 1000 * 60 * 60 * 7),\n      avatar: 'https://images.unsplash.com/photo-1438761681033-6461ffad8d80?auto=format&fit=crop&w=150&h=150',\n      isRead: false\n    },\n    {\n      id: '7',\n      type: 'sponsored_ad',\n      title: '🏃‍♂️ Running Group at Golden Gate Park',\n      description: 'Join our morning jogging sessions',\n      timestamp: new Date(Date.now() - 1000 * 60 * 60 * 8),\n      avatar: 'https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?auto=format&fit=crop&w=150&h=150',\n      isRead: true\n    },\n    {\n      id: '8',\n      type: 'event_invite',\n      title: 'Emma invited you to Book Club',\n      description: 'This Saturday at 2:00 PM • Library Cafe',\n      timestamp: new Date(Date.now() - 1000 * 60 * 60 * 9),\n      avatar: 'https://images.unsplash.com/photo-1544005313-94ddf0286df2?auto=format&fit=crop&w=150&h=150',\n      isRead: false\n    },\n    {\n      id: '9',\n      type: 'friend_request',\n      title: 'David wants to connect',\n      description: 'You have 5 mutual interests',\n      timestamp: new Date(Date.now() - 1000 * 60 * 60 * 10),\n      avatar: 'https://images.unsplash.com/photo-1506794778202-cad84cf45f1d?auto=format&fit=crop&w=150&h=150',\n      isRead: false\n    },\n    {\n      id: '10',\n      type: 'sponsored_ad',\n      title: '🍕 Pizza Night at Luigi\\'s',\n      description: 'Authentic Italian pizza and great company',\n      timestamp: new Date(Date.now() - 1000 * 60 * 60 * 11),\n      avatar: 'https://images.unsplash.com/photo-1565299624946-b28f40a0ca4b?auto=format&fit=crop&w=150&h=150',\n      isRead: true\n    },\n    {\n      id: '11',\n      type: 'accepted',\n      title: 'Event joined successfully!',\n      description: 'You\\'re now part of the Music Jam Session',\n      timestamp: new Date(Date.now() - 1000 * 60 * 60 * 12),\n      avatar: 'https://images.unsplash.com/photo-1493225457124-a3eb161ffa5f?auto=format&fit=crop&w=150&h=150',\n      isRead: false\n    },\n    {\n      id: '12',\n      type: 'story_tag',\n      title: 'Lisa tagged you in a story',\n      description: 'Amazing sunset at Baker Beach!',\n      timestamp: new Date(Date.now() - 1000 * 60 * 60 * 13),\n      avatar: 'https://images.unsplash.com/photo-1517841905240-472988babdf9?auto=format&fit=crop&w=150&h=150',\n      isRead: false\n    }\n  ]);\n\n  const formatTime = (timestamp: Date) => {\n    const now = new Date();\n    const diffMs = now.getTime() - timestamp.getTime();\n    const diffHours = Math.floor(diffMs / (1000 * 60 * 60));\n    const diffDays = Math.floor(diffHours / 24);\n\n    if (diffHours < 1) return 'Just now';\n    if (diffHours < 24) return `${diffHours}h ago`;\n    if (diffDays < 7) return `${diffDays}d ago`;\n    return timestamp.toLocaleDateString('en-US', { month: 'short', day: 'numeric' });\n  };\n\n  const getNotificationIcon = (type: string) => {\n    switch (type) {\n      case 'friend_request': return 'person_add';\n      case 'event_invite': return 'event';\n      case 'accepted': return 'check_circle';\n      case 'story_tag': return 'photo_camera';\n      case 'sponsored_ad': return 'local_offer';\n      default: return 'notifications';\n    }\n  };\n\n  const handleAction = (notificationId: string, action: 'accept' | 'decline') => {\n    if (action === 'accept') {\n      setNotifications(prev => \n        prev.map(n => \n          n.id === notificationId \n            ? { ...n, type: 'accepted' as const, title: 'Request accepted!' }\n            : n\n        )\n      );\n    } else {\n      setNotifications(prev => prev.filter(n => n.id !== notificationId));\n    }\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <>\n      {/* Dropdown */}\n      <div className=\"absolute top-12 right-4 max-w-sm w-full bg-white rounded-2xl shadow-2xl border border-unalon-200 z-50 overflow-hidden transform transition-all duration-300 ease-out scale-100 opacity-100\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between p-4 border-b border-unalon-200 bg-gradient-to-r from-unalon-50 to-white\">\n          <h3 className=\"font-semibold text-unalon-900\">Notifications</h3>\n          <button \n            onClick={onClose}\n            className=\"text-unalon-500 hover:text-unalon-700 transition-all duration-200 hover:scale-110 active:scale-95\"\n          >\n            <span className=\"material-icons text-lg\">close</span>\n          </button>\n        </div>\n\n        {/* Notifications List */}\n        <div className=\"max-h-96 overflow-y-auto scrollbar-thin scrollbar-thumb-unalon-200 scrollbar-track-transparent\">\n          {notifications.length === 0 ? (\n            <div className=\"p-6 text-center\">\n              <span className=\"material-icons text-4xl text-unalon-300 mb-2\">notifications_none</span>\n              <p className=\"text-unalon-600 text-sm\">No notifications</p>\n            </div>\n          ) : (\n            <div className=\"divide-y divide-unalon-100\">\n              {notifications.map((notification, index) => (\n                <div \n                  key={notification.id}\n                  className={`p-4 hover:bg-unalon-50 transition-all duration-300 ease-in-out transform hover:scale-[1.02] ${\n                    !notification.isRead ? 'bg-unalon-accent-50/50' : ''\n                  }`}\n                  style={{ animationDelay: `${index * 50}ms` }}\n                >\n                  <div className=\"flex items-start gap-3\">\n                    <div className=\"w-10 h-10 rounded-full bg-unalon-100 overflow-hidden flex items-center justify-center flex-shrink-0 shadow-sm\">\n                      {notification.avatar ? (\n                        <img \n                          src={notification.avatar}\n                          alt=\"Avatar\"\n                          className=\"w-full h-full object-cover transition-transform duration-300 hover:scale-110\"\n                          onError={(e) => {\n                            const target = e.target as HTMLImageElement;\n                            target.style.display = 'none';\n                            target.nextElementSibling?.classList.remove('hidden');\n                          }}\n                        />\n                      ) : null}\n                      <div className={`w-full h-full flex items-center justify-center ${notification.avatar ? 'hidden' : ''}`}>\n                        <span className=\"material-icons text-unalon-600 text-sm\">\n                          {getNotificationIcon(notification.type)}\n                        </span>\n                      </div>\n                    </div>\n                    \n                    <div className=\"flex-1 min-w-0\">\n                      <div className=\"flex justify-between items-start\">\n                        <div className=\"flex-1\">\n                          <p className=\"text-sm font-medium text-unalon-900 mb-1\">\n                            {notification.title}\n                            {!notification.isRead && (\n                              <span className=\"inline-block w-2 h-2 bg-unalon-accent-400 rounded-full ml-2 animate-pulse\"></span>\n                            )}\n                            {notification.type === 'sponsored_ad' && (\n                              <span className=\"inline-block text-xs text-unalon-500 italic ml-2\">✨ Sponsored</span>\n                            )}\n                          </p>\n                          <p className=\"text-xs text-unalon-600 mb-2\">\n                            {notification.description}\n                          </p>\n                        </div>\n                        <span className=\"text-xs text-unalon-500 ml-2\">\n                          {formatTime(notification.timestamp)}\n                        </span>\n                      </div>\n                      \n                      {/* Action Buttons */}\n                      {notification.type === 'friend_request' && (\n                        <div className=\"flex gap-2 mt-2\">\n                          <button \n                            onClick={() => handleAction(notification.id, 'accept')}\n                            className=\"px-3 py-1 bg-unalon-accent-400 text-white text-xs rounded-full hover:bg-unalon-accent-500 transition-all duration-200 hover:scale-105 active:scale-95\"\n                          >\n                            Accept\n                          </button>\n                          <button \n                            onClick={() => handleAction(notification.id, 'decline')}\n                            className=\"px-3 py-1 bg-unalon-200 text-unalon-700 text-xs rounded-full hover:bg-unalon-300 transition-all duration-200 hover:scale-105 active:scale-95\"\n                          >\n                            Decline\n                          </button>\n                        </div>\n                      )}\n                      \n                      {notification.type === 'event_invite' && (\n                        <div className=\"flex gap-2 mt-2\">\n                          <button \n                            onClick={() => handleAction(notification.id, 'accept')}\n                            className=\"px-3 py-1 bg-unalon-accent-400 text-white text-xs rounded-full hover:bg-unalon-accent-500 transition-all duration-200 hover:scale-105 active:scale-95\"\n                          >\n                            Join Event\n                          </button>\n                          <button \n                            onClick={() => handleAction(notification.id, 'decline')}\n                            className=\"px-3 py-1 bg-unalon-200 text-unalon-700 text-xs rounded-full hover:bg-unalon-300 transition-all duration-200 hover:scale-105 active:scale-95\"\n                          >\n                            Maybe Later\n                          </button>\n                        </div>\n                      )}\n\n                      {notification.type === 'sponsored_ad' && (\n                        <div className=\"flex gap-2 mt-2\">\n                          <button \n                            onClick={() => handleAction(notification.id, 'accept')}\n                            className=\"px-3 py-1 bg-unalon-accent-400 text-white text-xs rounded-full hover:bg-unalon-accent-500 transition-all duration-200 hover:scale-105 active:scale-95\"\n                          >\n                            Check it out\n                          </button>\n                          <button \n                            onClick={() => handleAction(notification.id, 'decline')}\n                            className=\"px-3 py-1 bg-unalon-200 text-unalon-700 text-xs rounded-full hover:bg-unalon-300 transition-all duration-200 hover:scale-105 active:scale-95\"\n                          >\n                            Add to wishlist\n                          </button>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n      </div>\n    </>\n  );\n} ","size_bytes":13367},"client/src/components/ProtectedRoute.tsx":{"content":"import { ReactNode } from 'react';\nimport { useAuth } from '@/context/AuthContext';\nimport LoginPage from '@/pages/LoginPage';\n\ninterface ProtectedRouteProps {\n  children: ReactNode;\n}\n\nexport default function ProtectedRoute({ children }: ProtectedRouteProps) {\n  const { user, isLoading } = useAuth();\n\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-white\">\n        <div className=\"text-center\">\n          <h2 className=\"text-4xl font-black text-black mb-2 unalon-logo\">unalon</h2>\n          <p className=\"text-gray-600\">Loading...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (!user) {\n    return <LoginPage />;\n  }\n\n  return <>{children}</>;\n}\n","size_bytes":707},"client/src/context/AuthContext.tsx":{"content":"import { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport { apiRequest } from '@/lib/queryClient';\nimport type { User } from '@shared/schema';\n\ninterface AuthContextType {\n  user: User | null;\n  login: (email: string, password: string) => Promise<void>;\n  logout: () => Promise<void>;\n  isLoading: boolean;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport function AuthProvider({ children }: { children: ReactNode }) {\n  const [user, setUser] = useState<User | null>(null);\n  const queryClient = useQueryClient();\n\n  // Check if user is logged in\n  const { data, isLoading } = useQuery<{ user: User }>({\n    queryKey: ['/api/me'],\n    retry: false,\n  });\n\n  useEffect(() => {\n    if (data?.user) {\n      setUser(data.user);\n    }\n  }, [data]);\n\n  const loginMutation = useMutation({\n    mutationFn: async ({ email, password }: { email: string; password: string }) => {\n      const response = await apiRequest('POST', '/api/login', { email, password });\n      return await response.json();\n    },\n    onSuccess: (data) => {\n      setUser(data.user);\n      queryClient.setQueryData(['/api/me'], data);\n    },\n  });\n\n  const logoutMutation = useMutation({\n    mutationFn: async () => {\n      await apiRequest('POST', '/api/logout');\n    },\n    onSuccess: () => {\n      setUser(null);\n      queryClient.clear();\n    },\n  });\n\n  const login = async (email: string, password: string) => {\n    await loginMutation.mutateAsync({ email, password });\n  };\n\n  const logout = async () => {\n    await logoutMutation.mutateAsync();\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, login, logout, isLoading }}>\n      {children}\n    </AuthContext.Provider>\n  );\n}\n\nexport function useAuth() {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n}\n","size_bytes":2000},"client/src/context/SearchContext.tsx":{"content":"import { createContext, useContext, useState, ReactNode } from 'react';\n\ninterface SearchContextType {\n  searchQuery: string;\n  setSearchQuery: (query: string) => void;\n}\n\nconst SearchContext = createContext<SearchContextType | undefined>(undefined);\n\nexport function SearchProvider({ children }: { children: ReactNode }) {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  return (\n    <SearchContext.Provider value={{ searchQuery, setSearchQuery }}>\n      {children}\n    </SearchContext.Provider>\n  );\n}\n\nexport function useSearch() {\n  const context = useContext(SearchContext);\n  if (context === undefined) {\n    throw new Error('useSearch must be used within a SearchProvider');\n  }\n  return context;\n} ","size_bytes":715},"client/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"client/src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"client/src/lib/queryClient.ts":{"content":"import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest(\n  method: string,\n  url: string,\n  data?: unknown | undefined,\n): Promise<Response> {\n  const res = await fetch(url, {\n    method,\n    headers: data ? { \"Content-Type\": \"application/json\" } : {},\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: \"include\",\n  });\n\n  await throwIfResNotOk(res);\n  return res;\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    const res = await fetch(queryKey.join(\"/\") as string, {\n      credentials: \"include\",\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","size_bytes":1383},"client/src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"client/src/pages/ActivitiesPage.tsx":{"content":"import { useState } from 'react';\nimport { useLocation } from 'wouter';\nimport { useToast } from '@/hooks/use-toast';\n\ninterface Activity {\n  id: string;\n  title: string;\n  category: 'show' | 'movie' | 'dining' | 'store' | 'cafe' | 'activities';\n  image: string;\n  rating?: number;\n  price: string;\n  location: string;\n  description?: string;\n  discount?: string;\n  date?: string;\n  time?: string;\n  isAd?: boolean;\n}\n\nexport default function ActivitiesPage() {\n  const [location, setLocation] = useLocation();\n  const { toast } = useToast();\n  const [selectedCategory, setSelectedCategory] = useState('all');\n  const [searchQuery, setSearchQuery] = useState('');\n  const [activeFilter, setActiveFilter] = useState<'filter' | null>(null);\n  const [filterOption, setFilterOption] = useState<'today' | 'tomorrow' | 'under-10km' | null>(null);\n  const [distanceFilter, setDistanceFilter] = useState<string>('10');\n  const [bookedActivities, setBookedActivities] = useState<Set<string>>(new Set());\n  const [favoritedActivities, setFavoritedActivities] = useState<Set<string>>(new Set());\n\n  const categories = [\n    { id: 'all', label: 'FOR YOU', icon: 'auto_awesome' },\n    { id: 'show', label: 'SHOWS', icon: 'theater_comedy' },\n    { id: 'movie', label: 'MOVIES', icon: 'movie' },\n    { id: 'dining', label: 'DINING', icon: 'restaurant' },\n    { id: 'cafe', label: 'CAFES', icon: 'local_cafe' },\n    { id: 'store', label: 'STORES', icon: 'shopping_bag' },\n    { id: 'activities', label: 'ACTIVITIES', icon: 'attractions' },\n  ];\n\n  const activities: Activity[] = [\n    // Shows & Events (8 events)\n    {\n      id: '1',\n      title: 'Comedy Night with Local Stars',\n      category: 'show',\n      image: 'https://images.unsplash.com/photo-1544367567-0f2fcb009e0b?auto=format&fit=crop&w=400&h=300&q=80',\n      rating: 4.5,\n      price: '$25 onwards',\n      location: 'Laugh Factory, Downtown',\n      date: 'Today',\n      time: '8:30 PM',\n      discount: 'Flat 20% OFF'\n    },\n    {\n      id: '2',\n      title: 'Live Music Jam Session',\n      category: 'show',\n      image: 'https://images.unsplash.com/photo-1493225457124-a3eb161ffa5f?auto=format&fit=crop&w=400&h=300&q=80',\n      rating: 4.3,\n      price: '$15 onwards',\n      location: 'The Blue Note, Westside',\n      date: 'Tomorrow',\n      time: '9:00 PM',\n      discount: 'Flat 15% OFF'\n    },\n    {\n      id: '3',\n      title: 'Stand-up Comedy Open Mic',\n      category: 'show',\n      image: 'https://images.unsplash.com/photo-1544367567-0f2fcb009e0b?auto=format&fit=crop&w=400&h=300&q=80',\n      rating: 4.1,\n      price: '$10 onwards',\n      location: 'Comedy Cellar, Midtown',\n      date: 'Friday',\n      time: '7:00 PM',\n      discount: 'Student Discount'\n    },\n    {\n      id: '4',\n      title: 'Jazz Night at Blue Moon',\n      category: 'show',\n      image: 'https://images.unsplash.com/photo-1493225457124-a3eb161ffa5f?auto=format&fit=crop&w=400&h=300&q=80',\n      rating: 4.6,\n      price: '$20 onwards',\n      location: 'Blue Moon Lounge, Harbor',\n      date: 'Saturday',\n      time: '10:00 PM',\n      discount: 'Early Bird Special'\n    },\n    {\n      id: '5',\n      title: 'Poetry Slam Night',\n      category: 'show',\n      image: 'https://images.unsplash.com/photo-1544367567-0f2fcb009e0b?auto=format&fit=crop&w=400&h=300&q=80',\n      rating: 4.2,\n      price: '$8 onwards',\n      location: 'Word Cafe, University District',\n      date: 'Sunday',\n      time: '6:00 PM',\n      discount: 'Open Mic Free'\n    },\n    {\n      id: '6',\n      title: 'Rock Band Live Performance',\n      category: 'show',\n      image: 'https://images.unsplash.com/photo-1493225457124-a3eb161ffa5f?auto=format&fit=crop&w=400&h=300&q=80',\n      rating: 4.7,\n      price: '$30 onwards',\n      location: 'The Rock Arena, Downtown',\n      date: 'Next Friday',\n      time: '9:30 PM',\n      discount: 'VIP Package Available'\n    },\n    {\n      id: '7',\n      title: 'Classical Music Concert',\n      category: 'show',\n      image: 'https://images.unsplash.com/photo-1493225457124-a3eb161ffa5f?auto=format&fit=crop&w=400&h=300&q=80',\n      rating: 4.8,\n      price: '$45 onwards',\n      location: 'Symphony Hall, Cultural District',\n      date: 'Next Saturday',\n      time: '7:30 PM',\n      discount: 'Student Discount'\n    },\n    {\n      id: '8',\n      title: 'Magic Show & Illusions',\n      category: 'show',\n      image: 'https://images.unsplash.com/photo-1544367567-0f2fcb009e0b?auto=format&fit=crop&w=400&h=300&q=80',\n      rating: 4.4,\n      price: '$35 onwards',\n      location: 'Magic Theater, Entertainment District',\n      date: 'Next Sunday',\n      time: '8:00 PM',\n      discount: 'Family Package'\n    },\n    // Movies (6 events)\n    {\n      id: '9',\n      title: 'The Batman',\n      category: 'movie',\n      image: 'https://images.unsplash.com/photo-1489599849927-2ee91cede3ba?auto=format&fit=crop&w=400&h=300&q=80',\n      rating: 4.8,\n      price: '$12 onwards',\n      location: 'AMC Theater, Mall Plaza',\n      date: 'Today',\n      time: '7:00 PM',\n      discount: 'Flat 25% OFF'\n    },\n    {\n      id: '10',\n      title: 'Spider-Man: No Way Home',\n      category: 'movie',\n      image: 'https://images.unsplash.com/photo-1489599849927-2ee91cede3ba?auto=format&fit=crop&w=400&h=300&q=80',\n      rating: 4.6,\n      price: '$14 onwards',\n      location: 'Regal Cinemas, Downtown',\n      date: 'Tomorrow',\n      time: '9:15 PM',\n      discount: 'Flat 30% OFF'\n    },\n    {\n      id: '11',\n      title: 'Dune: Part Two',\n      category: 'movie',\n      image: 'https://images.unsplash.com/photo-1489599849927-2ee91cede3ba?auto=format&fit=crop&w=400&h=300&q=80',\n      rating: 4.7,\n      price: '$13 onwards',\n      location: 'Cinemark, Westside',\n      date: 'Saturday',\n      time: '6:30 PM',\n      discount: 'Matinee Special'\n    },\n    {\n      id: '12',\n      title: 'Avengers: Endgame',\n      category: 'movie',\n      image: 'https://images.unsplash.com/photo-1489599849927-2ee91cede3ba?auto=format&fit=crop&w=400&h=300&q=80',\n      rating: 4.9,\n      price: '$15 onwards',\n      location: 'IMAX Theater, Mall Plaza',\n      date: 'Sunday',\n      time: '8:00 PM',\n      discount: '3D Experience'\n    },\n    {\n      id: '13',\n      title: 'The Matrix Resurrections',\n      category: 'movie',\n      image: 'https://images.unsplash.com/photo-1489599849927-2ee91cede3ba?auto=format&fit=crop&w=400&h=300&q=80',\n      rating: 4.5,\n      price: '$11 onwards',\n      location: 'Cinemark, Downtown',\n      date: 'Next Friday',\n      time: '9:45 PM',\n      discount: 'Late Night Special'\n    },\n    {\n      id: '14',\n      title: 'Black Panther: Wakanda Forever',\n      category: 'movie',\n      image: 'https://images.unsplash.com/photo-1489599849927-2ee91cede3ba?auto=format&fit=crop&w=400&h=300&q=80',\n      rating: 4.6,\n      price: '$16 onwards',\n      location: 'Regal Cinemas, Westside',\n      date: 'Next Saturday',\n      time: '7:15 PM',\n      discount: 'Premium Seating'\n    },\n    // Restaurants (8 events)\n    {\n      id: '15',\n      title: 'The Grand Bistro - Fine Dining',\n      category: 'dining',\n      image: 'https://images.unsplash.com/photo-1414235077428-338989a2e8c0?auto=format&fit=crop&w=400&h=300&q=80',\n      rating: 4.3,\n      price: '$80 for two',\n      location: 'Downtown District',\n      description: 'Elegant fine dining with international cuisine and sophisticated ambiance.',\n      discount: 'Flat 15% OFF',\n      isAd: true\n    },\n    {\n      id: '16',\n      title: 'Ocean View Seafood Grill',\n      category: 'dining',\n      image: 'https://images.unsplash.com/photo-1517248135467-4c7edcad34c4?auto=format&fit=crop&w=400&h=300&q=80',\n      rating: 4.7,\n      price: '$120 for two',\n      location: 'Harbor Front',\n      description: 'Fresh seafood with stunning ocean views and romantic atmosphere.',\n      discount: 'Flat 35% OFF',\n      isAd: true\n    },\n    {\n      id: '17',\n      title: 'Urban Kitchen - Modern American',\n      category: 'dining',\n      image: 'https://images.unsplash.com/photo-1414235077428-338989a2e8c0?auto=format&fit=crop&w=400&h=300&q=80',\n      rating: 4.4,\n      price: '$60 for two',\n      location: 'Midtown Square',\n      description: 'Contemporary American cuisine with farm-to-table ingredients.',\n      discount: 'Happy Hour Special'\n    },\n    {\n      id: '18',\n      title: 'Sakura Japanese Sushi Bar',\n      category: 'dining',\n      image: 'https://images.unsplash.com/photo-1414235077428-338989a2e8c0?auto=format&fit=crop&w=400&h=300&q=80',\n      rating: 4.6,\n      price: '$90 for two',\n      location: 'Asian Quarter, Downtown',\n      description: 'Authentic Japanese sushi and sashimi with traditional atmosphere.',\n      discount: 'Lunch Special'\n    },\n    {\n      id: '19',\n      title: 'La Trattoria - Italian Cuisine',\n      category: 'dining',\n      image: 'https://images.unsplash.com/photo-1517248135467-4c7edcad34c4?auto=format&fit=crop&w=400&h=300&q=80',\n      rating: 4.5,\n      price: '$70 for two',\n      location: 'Little Italy, Midtown',\n      description: 'Traditional Italian pasta and pizza in a cozy family atmosphere.',\n      discount: 'Wine Pairing Special'\n    },\n    {\n      id: '20',\n      title: 'Spice Garden - Indian Restaurant',\n      category: 'dining',\n      image: 'https://images.unsplash.com/photo-1414235077428-338989a2e8c0?auto=format&fit=crop&w=400&h=300&q=80',\n      rating: 4.2,\n      price: '$50 for two',\n      location: 'Cultural District',\n      description: 'Authentic Indian cuisine with aromatic spices and traditional dishes.',\n      discount: 'Thali Special'\n    },\n    {\n      id: '21',\n      title: 'Golden Dragon - Chinese Restaurant',\n      category: 'dining',\n      image: 'https://images.unsplash.com/photo-1517248135467-4c7edcad34c4?auto=format&fit=crop&w=400&h=300&q=80',\n      rating: 4.3,\n      price: '$55 for two',\n      location: 'Chinatown, Downtown',\n      description: 'Classic Chinese dishes with dim sum and traditional favorites.',\n      discount: 'Family Meal Deal'\n    },\n    {\n      id: '22',\n      title: 'Le Petit Bistro - French Cuisine',\n      category: 'dining',\n      image: 'https://images.unsplash.com/photo-1414235077428-338989a2e8c0?auto=format&fit=crop&w=400&h=300&q=80',\n      rating: 4.8,\n      price: '$150 for two',\n      location: 'French Quarter, Harbor',\n      description: 'Elegant French dining with wine cellar and romantic ambiance.',\n      discount: 'Chef\\'s Tasting Menu'\n    },\n    // Cafes (6 events)\n    {\n      id: '23',\n      title: 'Artisan Coffee Roasters',\n      category: 'cafe',\n      image: 'https://images.unsplash.com/photo-1495474472287-4d71bcdd2085?auto=format&fit=crop&w=400&h=300&q=80',\n      rating: 4.4,\n      price: '$25 for two',\n      location: 'University District',\n      description: 'Specialty coffee with artisanal pastries and cozy study atmosphere.',\n      discount: 'Flat 10% OFF'\n    },\n    {\n      id: '24',\n      title: 'The Bookworm Cafe',\n      category: 'cafe',\n      image: 'https://images.unsplash.com/photo-1495474472287-4d71bcdd2085?auto=format&fit=crop&w=400&h=300&q=80',\n      rating: 4.2,\n      price: '$20 for two',\n      location: 'Library Quarter',\n      description: 'Quiet cafe perfect for reading with great coffee and light snacks.',\n      discount: 'Student Discount'\n    },\n    {\n      id: '25',\n      title: 'Sweet Dreams Bakery & Cafe',\n      category: 'cafe',\n      image: 'https://images.unsplash.com/photo-1495474472287-4d71bcdd2085?auto=format&fit=crop&w=400&h=300&q=80',\n      rating: 4.5,\n      price: '$30 for two',\n      location: 'Downtown Plaza',\n      description: 'Fresh baked goods and specialty coffee in a charming atmosphere.',\n      discount: 'Breakfast Special'\n    },\n    {\n      id: '26',\n      title: 'Zen Tea House',\n      category: 'cafe',\n      image: 'https://images.unsplash.com/photo-1495474472287-4d71bcdd2085?auto=format&fit=crop&w=400&h=300&q=80',\n      rating: 4.3,\n      price: '$18 for two',\n      location: 'Cultural District',\n      description: 'Traditional tea ceremonies and Asian-inspired beverages.',\n      discount: 'Tea Tasting Experience'\n    },\n    {\n      id: '27',\n      title: 'Urban Brew Coffee Co.',\n      category: 'cafe',\n      image: 'https://images.unsplash.com/photo-1495474472287-4d71bcdd2085?auto=format&fit=crop&w=400&h=300&q=80',\n      rating: 4.1,\n      price: '$22 for two',\n      location: 'Tech District',\n      description: 'Modern coffee shop with workspace and tech-friendly environment.',\n      discount: 'WiFi Included'\n    },\n    {\n      id: '28',\n      title: 'Sunset Beach Cafe',\n      category: 'cafe',\n      image: 'https://images.unsplash.com/photo-1495474472287-4d71bcdd2085?auto=format&fit=crop&w=400&h=300&q=80',\n      rating: 4.6,\n      price: '$35 for two',\n      location: 'Beach Front',\n      description: 'Ocean view cafe with fresh seafood and tropical drinks.',\n      discount: 'Sunset Special'\n    },\n    // Stores (8 events)\n    {\n      id: '29',\n      title: 'Urban Outfitters - Summer Collection',\n      category: 'store',\n      image: 'https://images.unsplash.com/photo-1441986300917-64674bd600d8?auto=format&fit=crop&w=400&h=300&q=80',\n      rating: 4.2,\n      price: 'Up to 60% OFF',\n      location: 'Fashion District',\n      description: 'Latest summer trends with casual and streetwear styles.',\n      discount: 'Extra 12% OFF + food/movie vouchers',\n      isAd: true\n    },\n    {\n      id: '30',\n      title: 'Tech Haven - Electronics Store',\n      category: 'store',\n      image: 'https://images.unsplash.com/photo-1441986300917-64674bd600d8?auto=format&fit=crop&w=400&h=300&q=80',\n      rating: 4.1,\n      price: 'Up to 50% OFF',\n      location: 'Tech Plaza',\n      description: 'Latest gadgets and electronics with expert advice.',\n      discount: 'Bank benefits + food/movie vouchers',\n      isAd: true\n    },\n    {\n      id: '31',\n      title: 'Home & Garden Essentials',\n      category: 'store',\n      image: 'https://images.unsplash.com/photo-1441986300917-64674bd600d8?auto=format&fit=crop&w=400&h=300&q=80',\n      rating: 4.0,\n      price: 'Up to 40% OFF',\n      location: 'Shopping Center',\n      description: 'Everything for your home and garden needs.',\n      discount: 'Weekend Sale'\n    },\n    {\n      id: '32',\n      title: 'Sports Zone - Athletic Wear',\n      category: 'store',\n      image: 'https://images.unsplash.com/photo-1441986300917-64674bd600d8?auto=format&fit=crop&w=400&h=300&q=80',\n      rating: 4.3,\n      price: 'Up to 45% OFF',\n      location: 'Sports Complex',\n      description: 'Professional athletic wear and sports equipment.',\n      discount: 'Team Discount'\n    },\n    {\n      id: '33',\n      title: 'Beauty & Beyond - Cosmetics',\n      category: 'store',\n      image: 'https://images.unsplash.com/photo-1441986300917-64674bd600d8?auto=format&fit=crop&w=400&h=300&q=80',\n      rating: 4.4,\n      price: 'Up to 55% OFF',\n      location: 'Beauty District',\n      description: 'Premium cosmetics and beauty products.',\n      discount: 'Makeup Artist Consultation'\n    },\n    {\n      id: '34',\n      title: 'Book Nook - Independent Bookstore',\n      category: 'store',\n      image: 'https://images.unsplash.com/photo-1441986300917-64674bd600d8?auto=format&fit=crop&w=400&h=300&q=80',\n      rating: 4.5,\n      price: 'Up to 30% OFF',\n      location: 'University District',\n      description: 'Curated books and literary events.',\n      discount: 'Book Club Membership'\n    },\n    {\n      id: '35',\n      title: 'Artisan Crafts - Handmade Goods',\n      category: 'store',\n      image: 'https://images.unsplash.com/photo-1441986300917-64674bd600d8?auto=format&fit=crop&w=400&h=300&q=80',\n      rating: 4.2,\n      price: 'Up to 35% OFF',\n      location: 'Arts District',\n      description: 'Unique handmade crafts and artisanal products.',\n      discount: 'Workshop Classes'\n    },\n    {\n      id: '36',\n      title: 'Pet Paradise - Pet Supplies',\n      category: 'store',\n      image: 'https://images.unsplash.com/photo-1441986300917-64674bd600d8?auto=format&fit=crop&w=400&h=300&q=80',\n      rating: 4.1,\n      price: 'Up to 25% OFF',\n      location: 'Pet District',\n      description: 'Premium pet food and accessories.',\n      discount: 'Grooming Services'\n    },\n    // Activities (8 events)\n    {\n      id: '37',\n      title: 'Adventure Park - Thrill Rides',\n      category: 'activities',\n      image: 'https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?auto=format&fit=crop&w=400&h=300&q=80',\n      rating: 4.6,\n      price: '$45 onwards',\n      location: 'Adventure Zone, Outskirts',\n      date: 'Daily',\n      time: '10 AM - 6 PM',\n      discount: 'Flat 50% off'\n    },\n    {\n      id: '38',\n      title: 'Rock Climbing Center',\n      category: 'activities',\n      image: 'https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?auto=format&fit=crop&w=400&h=300&q=80',\n      rating: 4.4,\n      price: '$25 onwards',\n      location: 'Sports Complex',\n      date: 'Daily',\n      time: '9 AM - 8 PM',\n      discount: 'Flat 40% off'\n    },\n    {\n      id: '39',\n      title: 'Escape Room Challenge',\n      category: 'activities',\n      image: 'https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?auto=format&fit=crop&w=400&h=300&q=80',\n      rating: 4.3,\n      price: '$30 per person',\n      location: 'Entertainment District',\n      date: 'Daily',\n      time: '11 AM - 10 PM',\n      discount: 'Group Discount'\n    },\n    {\n      id: '40',\n      title: 'Paintball Arena',\n      category: 'activities',\n      image: 'https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?auto=format&fit=crop&w=400&h=300&q=80',\n      rating: 4.5,\n      price: '$35 per person',\n      location: 'Adventure Zone',\n      date: 'Weekends',\n      time: '9 AM - 5 PM',\n      discount: 'Team Package'\n    },\n    {\n      id: '41',\n      title: 'Laser Tag Arena',\n      category: 'activities',\n      image: 'https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?auto=format&fit=crop&w=400&h=300&q=80',\n      rating: 4.2,\n      price: '$20 per person',\n      location: 'Entertainment District',\n      date: 'Daily',\n      time: '12 PM - 9 PM',\n      discount: 'Birthday Package'\n    },\n    {\n      id: '42',\n      title: 'Mini Golf Course',\n      category: 'activities',\n      image: 'https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?auto=format&fit=crop&w=400&h=300&q=80',\n      rating: 4.1,\n      price: '$15 per person',\n      location: 'Family Fun Center',\n      date: 'Daily',\n      time: '10 AM - 8 PM',\n      discount: 'Family Package'\n    },\n    {\n      id: '43',\n      title: 'Bowling Alley',\n      category: 'activities',\n      image: 'https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?auto=format&fit=crop&w=400&h=300&q=80',\n      rating: 4.4,\n      price: '$18 per person',\n      location: 'Entertainment District',\n      date: 'Daily',\n      time: '11 AM - 11 PM',\n      discount: 'League Discount'\n    },\n    {\n      id: '44',\n      title: 'Trampoline Park',\n      category: 'activities',\n      image: 'https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?auto=format&fit=crop&w=400&h=300&q=80',\n      rating: 4.3,\n      price: '$25 per person',\n      location: 'Family Fun Center',\n      date: 'Daily',\n      time: '10 AM - 9 PM',\n      discount: 'Kids Special'\n    }\n  ];\n\n  const filteredActivities = activities.filter(activity => {\n    const matchesCategory = selectedCategory === 'all' || activity.category === selectedCategory;\n    const matchesSearch = activity.title.toLowerCase().includes(searchQuery.toLowerCase()) ||\n                         activity.location.toLowerCase().includes(searchQuery.toLowerCase());\n    \n    // Apply filter logic\n    let matchesFilters = true;\n    \n    if (filterOption === 'today') {\n      matchesFilters = matchesFilters && (activity.date === 'Today');\n    }\n    if (filterOption === 'tomorrow') {\n      matchesFilters = matchesFilters && (activity.date === 'Tomorrow');\n    }\n    if (filterOption === 'under-10km') {\n      // Simulate distance filtering - in real app this would check actual distance\n      matchesFilters = matchesFilters && (activity.location.includes('Downtown') || \n                                        activity.location.includes('Midtown') || \n                                        activity.location.includes('University District'));\n    }\n    \n    return matchesCategory && matchesSearch && matchesFilters;\n  });\n\n  const handleFilterClick = (filterType: 'filter') => {\n    setActiveFilter(activeFilter === filterType ? null : filterType);\n  };\n\n  const handleFilterOptionClick = (option: 'today' | 'tomorrow' | 'under-10km') => {\n    setFilterOption(filterOption === option ? null : option);\n  };\n\n  const clearFilters = () => {\n    setFilterOption(null);\n    setDistanceFilter('10');\n    setActiveFilter(null);\n  };\n\n  const getCategoryIcon = (category: string) => {\n    switch (category) {\n      case 'show': return 'theater_comedy';\n      case 'movie': return 'movie';\n      case 'dining': return 'restaurant';\n      case 'cafe': return 'local_cafe';\n      case 'store': return 'shopping_bag';\n      case 'activities': return 'attractions';\n      default: return 'place';\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-unalon-100\">\n\n\n\n\n      {/* Category Navigation */}\n      <div className=\"px-4 pb-4\">\n        <div className=\"flex gap-3 overflow-x-auto scrollbar-hide\">\n          {/* Filter Icon Button - Left of FOR YOU */}\n          <button\n            onClick={() => handleFilterClick('filter')}\n            className={`flex items-center justify-center w-10 h-10 rounded-full transition-all duration-200 ${\n              activeFilter === 'filter'\n                ? 'bg-unalon-900 text-white'\n                : 'bg-unalon-200 text-unalon-700 hover:bg-unalon-300'\n            }`}\n          >\n            <span className=\"material-icons text-sm\">filter_list</span>\n          </button>\n          \n          {/* FOR YOU Button */}\n          <button\n            onClick={() => setSelectedCategory('all')}\n            className={`flex items-center gap-2 px-4 py-2 rounded-full whitespace-nowrap transition-all duration-200 ${\n              selectedCategory === 'all'\n                ? 'bg-unalon-900 text-white'\n                : 'bg-unalon-200 text-unalon-700 hover:bg-unalon-300'\n            }`}\n          >\n            <span className=\"material-icons text-sm\">auto_awesome</span>\n            <span className=\"text-sm font-medium\">FOR YOU</span>\n          </button>\n          \n          {/* Other Category Buttons */}\n          {categories.slice(1).map((category) => (\n            <button\n              key={category.id}\n              onClick={() => setSelectedCategory(category.id)}\n              className={`flex items-center gap-2 px-4 py-2 rounded-full whitespace-nowrap transition-all duration-200 ${\n                selectedCategory === category.id\n                  ? 'bg-unalon-900 text-white'\n                  : 'bg-unalon-200 text-unalon-700 hover:bg-unalon-300'\n              }`}\n            >\n              <span className=\"material-icons text-sm\">{category.icon}</span>\n              <span className=\"text-sm font-medium\">{category.label}</span>\n            </button>\n          ))}\n        </div>\n      </div>\n\n\n\n      {/* Filter Dropdown */}\n      {activeFilter === 'filter' && (\n        <div className=\"mb-4 mx-4 p-4 bg-white rounded-2xl shadow-lg border border-unalon-200\">\n          <div className=\"space-y-3\">\n            <div>\n              <h3 className=\"text-sm font-medium text-unalon-700 mb-2\">Time</h3>\n              <div className=\"flex space-x-2\">\n                {(['today', 'tomorrow'] as const).map((option) => (\n                  <button\n                    key={option}\n                    onClick={() => handleFilterOptionClick(option)}\n                    className={`px-3 py-2 rounded-lg text-sm transition-all duration-200 ${\n                      filterOption === option\n                        ? 'bg-unalon-500 text-white'\n                        : 'bg-unalon-50 text-unalon-700 hover:bg-unalon-100'\n                    }`}\n                  >\n                    {option.charAt(0).toUpperCase() + option.slice(1)}\n                  </button>\n                ))}\n              </div>\n            </div>\n            <div>\n              <div className=\"flex justify-between items-center mb-2\">\n                <h3 className=\"text-sm font-medium text-unalon-700\">Distance</h3>\n                <span className=\"text-sm text-unalon-600\">{distanceFilter}km</span>\n              </div>\n              <div className=\"space-y-2\">\n                <input\n                  type=\"range\"\n                  min=\"0\"\n                  max=\"50\"\n                  value={distanceFilter}\n                  onChange={(e) => setDistanceFilter(e.target.value)}\n                  className=\"w-full h-2 bg-unalon-200 rounded-lg appearance-none cursor-pointer slider\"\n                />\n                <div className=\"flex justify-between text-xs text-unalon-500\">\n                  <span>0km</span>\n                  <span>50km</span>\n                </div>\n              </div>\n            </div>\n            <div>\n              <h3 className=\"text-sm font-medium text-unalon-700 mb-2\">Quick Filters</h3>\n              <div className=\"flex space-x-2\">\n                <button\n                  onClick={() => handleFilterOptionClick('under-10km')}\n                  className={`px-3 py-2 rounded-lg text-sm transition-all duration-200 ${\n                    filterOption === 'under-10km'\n                      ? 'bg-unalon-500 text-white'\n                      : 'bg-unalon-50 text-unalon-700 hover:bg-unalon-100'\n                  }`}\n                >\n                  Under 10km\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Activities List */}\n      <div className=\"px-4 pb-24\">\n        <div className=\"space-y-4\">\n          {filteredActivities.map((activity) => (\n            <div key={activity.id} className=\"bg-white rounded-xl overflow-hidden shadow-lg border border-unalon-200\">\n              {/* Image and Discount Banner */}\n              <div className=\"relative\">\n                <img \n                  src={activity.image} \n                  alt={activity.title}\n                  className=\"w-full h-48 object-cover\"\n                  onError={(e) => {\n                    e.currentTarget.src = 'https://images.unsplash.com/photo-1511795409834-ef04bbd61622?auto=format&fit=crop&w=400&h=300&q=80';\n                  }}\n                />\n                {activity.discount && (\n                  <div className=\"absolute top-3 left-3 bg-unalon-500 text-white px-3 py-1 rounded-full text-sm font-medium\">\n                    {activity.discount}\n                  </div>\n                )}\n                {activity.isAd && (\n                  <div className=\"absolute top-3 right-3 bg-black bg-opacity-50 text-white px-2 py-1 rounded text-xs\">\n                    Ad\n                  </div>\n                )}\n\n              </div>\n\n              {/* Content */}\n              <div className=\"p-4\">\n                {/* Date and Time for Shows/Movies/Activities */}\n                {(activity.date || activity.time) && (\n                  <div className=\"text-unalon-500 text-sm mb-2\">\n                    {activity.date} {activity.time && `• ${activity.time}`}\n                  </div>\n                )}\n\n                {/* Title */}\n                <h3 className=\"text-lg font-bold text-unalon-900 mb-2\">{activity.title}</h3>\n\n                {/* Rating */}\n                {activity.rating && (\n                  <div className=\"flex items-center gap-1 mb-2\">\n                    <span className=\"material-icons text-yellow-400 text-sm\">star</span>\n                    <span className=\"text-unalon-600 text-sm\">{activity.rating}</span>\n                  </div>\n                )}\n\n                {/* Location and Price */}\n                <div className=\"flex items-center justify-between mb-2\">\n                  <div className=\"text-unalon-500 text-sm\">\n                    📍 {activity.location}\n                  </div>\n                  <span className=\"text-unalon-500 font-semibold\">{activity.price}</span>\n                </div>\n\n                {/* Description */}\n                {activity.description && (\n                  <p className=\"text-unalon-600 text-sm leading-relaxed\">\n                    {activity.description}\n                  </p>\n                )}\n\n                {/* Action Buttons */}\n                <div className=\"flex gap-2 mt-4\">\n                  <button \n                    onClick={() => {\n                      if (bookedActivities.has(activity.id)) {\n                        setBookedActivities(prev => {\n                          const newSet = new Set(prev);\n                          newSet.delete(activity.id);\n                          return newSet;\n                        });\n                        toast({ \n                          title: \"Booking cancelled!\", \n                          description: `Booking for ${activity.title} has been cancelled.`\n                        });\n                      } else {\n                        setBookedActivities(prev => new Set(prev).add(activity.id));\n                        toast({ \n                          title: \"Booking successful!\", \n                          description: `You've successfully booked ${activity.title}. Check your email for confirmation.`\n                        });\n                      }\n                    }}\n                    className={`flex-1 py-2 px-4 rounded-lg font-medium transition-colors active:scale-95 ${\n                      bookedActivities.has(activity.id)\n                        ? 'bg-unalon-600 text-white'\n                        : 'bg-unalon-500 text-white hover:bg-unalon-600'\n                    }`}\n                  >\n                    {bookedActivities.has(activity.id) ? 'Booked' : 'Book Now'}\n                  </button>\n                  <button \n                    onClick={() => {\n                      if (favoritedActivities.has(activity.id)) {\n                        setFavoritedActivities(prev => {\n                          const newSet = new Set(prev);\n                          newSet.delete(activity.id);\n                          return newSet;\n                        });\n                        toast({ \n                          title: \"Removed from favorites!\", \n                          description: `${activity.title} has been removed from your favorites.`\n                        });\n                      } else {\n                        setFavoritedActivities(prev => new Set(prev).add(activity.id));\n                        toast({ \n                          title: \"Added to favorites!\", \n                          description: `${activity.title} has been added to your favorites.`\n                        });\n                      }\n                    }}\n                    className={`px-4 py-2 border rounded-lg transition-colors active:scale-95 ${\n                      favoritedActivities.has(activity.id)\n                        ? 'border-unalon-500 bg-unalon-500 text-white'\n                        : 'border-unalon-300 text-unalon-600 hover:bg-unalon-100'\n                    }`}\n                  >\n                    <span className=\"material-icons text-sm\">\n                      {favoritedActivities.has(activity.id) ? 'favorite' : 'favorite_border'}\n                    </span>\n                  </button>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n\n        {filteredActivities.length === 0 && (\n          <div className=\"text-center py-12\">\n            <span className=\"material-icons text-unalon-400 text-4xl mb-4\">search_off</span>\n            <p className=\"text-unalon-400\">No activities found</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n} ","size_bytes":31853},"client/src/pages/ChatPage.tsx":{"content":"import { useState, useEffect, useRef } from 'react';\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport { apiRequest } from '@/lib/queryClient';\nimport { useAuth } from '@/context/AuthContext';\nimport type { User, Message } from '@shared/schema';\n\ninterface Conversation {\n  user: User;\n  lastMessage: Message;\n  unreadCount: number;\n}\n\ninterface Story {\n  id: string;\n  userId: string;\n  userName: string;\n  userAvatar: string;\n  imageUrl: string;\n  text?: string;\n  timestamp: Date;\n  viewed: boolean;\n}\n\ninterface FriendWithStory {\n  id: string;\n  name: string;\n  avatar: string;\n  hasStory: boolean;\n  gender?: 'male' | 'female';\n  stories?: Story[];\n}\n\nexport default function ChatPage() {\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n  const [selectedConversation, setSelectedConversation] = useState<Conversation | null>(null);\n  const [messageInput, setMessageInput] = useState('');\n  const [isEmojiPickerOpen, setIsEmojiPickerOpen] = useState(false);\n  const [isAttachmentMenuOpen, setIsAttachmentMenuOpen] = useState(false);\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n  \n  // Story viewer state\n  const [selectedStory, setSelectedStory] = useState<FriendWithStory | null>(null);\n  const [currentStoryIndex, setCurrentStoryIndex] = useState(0);\n  const [storyProgress, setStoryProgress] = useState(0);\n  const [friendsWithStoriesState, setFriendsWithStoriesState] = useState<FriendWithStory[]>([]);\n  const { user: currentUser } = useAuth();\n  const queryClient = useQueryClient();\n  \n  // Initialize friendsWithStoriesState with mock data\n  useEffect(() => {\n    setFriendsWithStoriesState([\n    {\n      id: '1',\n      name: 'Emma',\n      avatar: 'https://randomuser.me/api/portraits/women/42.jpg',\n      hasStory: true,\n      gender: 'female',\n      stories: [\n        {\n          id: '1-1',\n          userId: '1',\n          userName: 'Emma',\n          userAvatar: 'https://randomuser.me/api/portraits/women/42.jpg',\n          imageUrl: 'https://images.unsplash.com/photo-1506744038136-46273834b3fb',\n          text: 'Beautiful sunset today! 🌅',\n          timestamp: new Date(Date.now() - 1000 * 60 * 60),\n          viewed: false\n        },\n        {\n          id: '1-2',\n          userId: '1',\n          userName: 'Emma',\n          userAvatar: 'https://randomuser.me/api/portraits/women/42.jpg',\n          imageUrl: 'https://images.unsplash.com/photo-1513836279014-a89f7a76ae86',\n          timestamp: new Date(Date.now() - 1000 * 60 * 30),\n          viewed: false\n        }\n      ]\n    },\n    {\n      id: '2',\n      name: 'James',\n      avatar: 'https://randomuser.me/api/portraits/men/32.jpg',\n      hasStory: true,\n      gender: 'male',\n      stories: [\n        {\n          id: '2-1',\n          userId: '2',\n          userName: 'James',\n          userAvatar: 'https://randomuser.me/api/portraits/men/32.jpg',\n          imageUrl: 'https://images.unsplash.com/photo-1493246507139-91e8fad9978e',\n          text: 'Check out my new ride!',\n          timestamp: new Date(Date.now() - 1000 * 60 * 120),\n          viewed: false\n        }\n      ]\n    },\n    {\n      id: '3',\n      name: 'Sophia',\n      avatar: 'https://randomuser.me/api/portraits/women/22.jpg',\n      hasStory: false,\n      gender: 'female'\n    },\n    {\n      id: '4',\n      name: 'Michael',\n      avatar: 'https://randomuser.me/api/portraits/men/67.jpg',\n      hasStory: true,\n      gender: 'male',\n      stories: [\n        {\n          id: '4-1',\n          userId: '4',\n          userName: 'Michael',\n          userAvatar: 'https://randomuser.me/api/portraits/men/67.jpg',\n          imageUrl: 'https://images.unsplash.com/photo-1519046904884-53103b34b206',\n          timestamp: new Date(Date.now() - 1000 * 60 * 240),\n          viewed: false\n        },\n        {\n          id: '4-2',\n          userId: '4',\n          userName: 'Michael',\n          userAvatar: 'https://randomuser.me/api/portraits/men/67.jpg',\n          imageUrl: 'https://images.unsplash.com/photo-1515238152791-8216bfdf89a7',\n          text: 'Hiking trip with friends',\n          timestamp: new Date(Date.now() - 1000 * 60 * 180),\n          viewed: false\n        },\n        {\n          id: '4-3',\n          userId: '4',\n          userName: 'Michael',\n          userAvatar: 'https://randomuser.me/api/portraits/men/67.jpg',\n          imageUrl: 'https://images.unsplash.com/photo-1507525428034-b723cf961d3e',\n          timestamp: new Date(Date.now() - 1000 * 60 * 120),\n          viewed: false\n        }\n      ]\n    }\n    ]);\n  }, []);\n\n  const { data: conversations = [], isLoading } = useQuery<Conversation[]>({\n    queryKey: ['/api/conversations'],\n  });\n\n  const { data: messages = [] } = useQuery<Message[]>({\n    queryKey: ['/api/messages', selectedUser?.id],\n    enabled: !!selectedUser,\n  });\n\n  const sendMessageMutation = useMutation({\n    mutationFn: async (data: { receiverId: string; content: string }) => {\n      const response = await apiRequest('POST', '/api/messages', data);\n      return await response.json();\n    },\n    onSuccess: () => {\n      setMessageInput('');\n      queryClient.invalidateQueries({ queryKey: ['/api/messages', selectedUser?.id] });\n      queryClient.invalidateQueries({ queryKey: ['/api/conversations'] });\n    },\n  });\n\n  const handleSendMessage = () => {\n    if (!messageInput.trim() || !selectedUser) return;\n\n    sendMessageMutation.mutate({\n      receiverId: selectedUser.id,\n      content: messageInput.trim(),\n    });\n  };\n\n  const formatMessageTime = (timestamp: string | Date) => {\n    const date = new Date(timestamp);\n    const now = new Date();\n    const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n    const messageDate = new Date(date.getFullYear(), date.getMonth(), date.getDate());\n\n    if (messageDate.getTime() === today.getTime()) {\n      return date.toLocaleTimeString('en-US', { \n        hour: 'numeric', \n        minute: '2-digit',\n        hour12: true \n      });\n    } else {\n      return date.toLocaleDateString('en-US', { month: 'short', day: 'numeric' });\n    }\n  };\n  \n  // Story handling functions\n  const handleOpenStory = (friend: FriendWithStory) => {\n    if (friend.hasStory && friend.stories && friend.stories.length > 0) {\n      // Mark stories as viewed when opened\n      const updatedFriend = {\n        ...friend,\n        stories: friend.stories.map(story => ({\n          ...story,\n          viewed: true\n        }))\n      };\n      \n      setSelectedStory(updatedFriend);\n      setCurrentStoryIndex(0);\n      setStoryProgress(0);\n      \n      // Update the friendsWithStoriesState array to reflect viewed status\n      setFriendsWithStoriesState(prevState => \n        prevState.map(f => f.id === friend.id ? updatedFriend : f)\n      );\n    }\n  };\n  \n  const handleCloseStory = () => {\n    setSelectedStory(null);\n    setCurrentStoryIndex(0);\n    setStoryProgress(0);\n  };\n  \n  const handleNextStory = () => {\n    if (!selectedStory || !selectedStory.stories) return;\n    \n    if (currentStoryIndex < selectedStory.stories.length - 1) {\n      // Move to next story of the same user\n      setCurrentStoryIndex(currentStoryIndex + 1);\n      setStoryProgress(0);\n    } else {\n      // Find the next friend with stories\n      const currentFriendIndex = friendsWithStoriesState.findIndex(f => f.name === selectedStory.name);\n      const nextFriendIndex = friendsWithStoriesState.findIndex((f, index) => \n        index > currentFriendIndex && f.hasStory && f.stories && f.stories.length > 0\n      );\n      \n      if (nextFriendIndex !== -1) {\n        setSelectedStory(friendsWithStoriesState[nextFriendIndex]);\n        setCurrentStoryIndex(0);\n        setStoryProgress(0);\n      } else {\n        // No more stories, close the viewer\n        handleCloseStory();\n      }\n    }\n  };\n  \n  const handlePrevStory = () => {\n    if (!selectedStory) return;\n    \n    if (currentStoryIndex > 0) {\n      // Move to previous story of the same user\n      setCurrentStoryIndex(currentStoryIndex - 1);\n      setStoryProgress(0);\n    } else {\n      // Find the previous friend with stories\n      const currentFriendIndex = friendsWithStoriesState.findIndex(f => f.name === selectedStory.name);\n      const prevFriendWithStories = [...friendsWithStoriesState]\n        .slice(0, currentFriendIndex)\n        .reverse()\n        .find(f => f.hasStory && f.stories && f.stories.length > 0);\n      \n      if (prevFriendWithStories) {\n        setSelectedStory(prevFriendWithStories);\n        setCurrentStoryIndex(prevFriendWithStories.stories?.length ? prevFriendWithStories.stories.length - 1 : 0);\n        setStoryProgress(0);\n      }\n    }\n  };\n  \n  // Auto-advance story progress\n  useEffect(() => {\n    if (!selectedStory) return;\n    \n    const storyDuration = 5000; // 5 seconds per story\n    const interval = 100; // Update progress every 100ms\n    const steps = storyDuration / interval;\n    \n    const timer = setInterval(() => {\n      setStoryProgress(prev => {\n        const newProgress = prev + (1 / steps) * 100;\n        if (newProgress >= 100) {\n          handleNextStory();\n          return 0;\n        }\n        return newProgress;\n      });\n    }, interval);\n    \n    return () => clearInterval(timer);\n  }, [selectedStory, currentStoryIndex]);\n\n  if (selectedUser) {\n    return (\n      <div className=\"fixed inset-0 bg-white z-30\">\n        <div className=\"flex flex-col h-full max-w-md mx-auto\">\n          {/* Chat Header */}\n          <div className=\"flex items-center p-4 border-b border-unalon-300 bg-unalon-100\">\n            <button onClick={() => setSelectedUser(null)} className=\"mr-4\">\n              <span className=\"material-icons text-unalon-700\">arrow_back</span>\n            </button>\n            <img \n              alt={`${selectedUser.name} avatar`}\n              className=\"w-10 h-10 rounded-full object-cover mr-3\" \n              src={selectedUser.avatar || \"https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?auto=format&fit=crop&w=400&h=400\"}\n            />\n            <div>\n              <h3 className=\"text-base font-semibold text-unalon-900\">{selectedUser.name}</h3>\n              <p className=\"text-xs text-unalon-700\">Online</p>\n            </div>\n          </div>\n\n          {/* Messages */}\n          <div className=\"flex-1 overflow-y-auto p-4 space-y-4\">\n            {messages.map((message) => {\n              const isMe = message.senderId === currentUser?.id;\n              return (\n                <div key={message.id} className={`flex ${isMe ? 'justify-end' : 'justify-start'}`}>\n                  <div className={`max-w-xs lg:max-w-md px-4 py-2 rounded-2xl ${\n                    isMe \n                      ? 'bg-black text-white' \n                      : 'bg-unalon-200 text-unalon-900'\n                  }`}>\n                    <p className=\"text-sm\">{message.content}</p>\n                    <p className=\"text-xs opacity-70 mt-1\">\n                      {message.timestamp ? formatMessageTime(message.timestamp) : 'Just now'}\n                    </p>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n\n          {/* Message Input */}\n          <div className=\"p-4 border-t border-unalon-300 bg-unalon-100\">\n            <div className=\"flex items-center space-x-2\">\n              <input \n                type=\"text\" \n                placeholder=\"Type a message...\" \n                className=\"flex-1 rounded-full px-4 py-2 bg-unalon-200 text-unalon-900 placeholder:text-unalon-400 focus:outline-none\"\n                value={messageInput}\n                onChange={(e) => setMessageInput(e.target.value)}\n                onKeyPress={(e) => e.key === 'Enter' && handleSendMessage()}\n              />\n              <button \n                onClick={handleSendMessage}\n                disabled={!messageInput.trim() || sendMessageMutation.isPending}\n                className=\"bg-black text-white rounded-full p-2 hover:opacity-80 transition-opacity disabled:opacity-50\"\n              >\n                <span className=\"material-icons text-sm\">send</span>\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (isLoading) {\n    return (\n      <div className=\"p-4 overflow-y-auto bg-unalon-100\">\n        <div className=\"space-y-3\">\n          {[1, 2, 3].map((i) => (\n            <div key={i} className=\"bg-unalon-50 rounded-2xl p-4 border border-unalon-300 animate-pulse\">\n              <div className=\"flex items-center\">\n                <div className=\"w-12 h-12 bg-unalon-200 rounded-full mr-3\"></div>\n                <div className=\"flex-1\">\n                  <div className=\"h-4 bg-unalon-200 rounded mb-2\"></div>\n                  <div className=\"h-3 bg-unalon-200 rounded w-3/4\"></div>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"p-4 overflow-y-auto bg-unalon-100\">\n      \n      {/* Story Viewer Modal */}\n       {selectedStory && (\n         <div className=\"fixed inset-0 bg-black z-50 flex items-center justify-center\">\n           {/* Story Progress Bars */}\n           <div className=\"absolute top-4 left-4 right-4 flex space-x-1\">\n             {selectedStory.stories?.map((_, index) => (\n               <div key={index} className=\"h-1 bg-gray-600 flex-1 rounded-full overflow-hidden\">\n                 <div \n                   className=\"h-full bg-white\" \n                   style={{\n                     width: index === currentStoryIndex ? `${storyProgress}%` : \n                            index < currentStoryIndex ? '100%' : '0%'\n                   }}\n                 ></div>\n               </div>\n             ))}\n           </div>\n           \n           {/* Story Header */}\n           <div className=\"absolute top-8 left-4 right-4 flex items-center\">\n             <div className=\"flex items-center\">\n               <div className=\"w-10 h-10 rounded-full overflow-hidden mr-3\">\n                 <img \n                   src={selectedStory.avatar} \n                   alt={selectedStory.name} \n                   className=\"w-full h-full object-cover\" \n                 />\n               </div>\n               <div>\n                 <p className=\"text-white font-semibold\">{selectedStory.name}</p>\n                 <p className=\"text-gray-300 text-xs\">\n                   {selectedStory.stories && selectedStory.stories[currentStoryIndex]?.timestamp ? \n                     formatMessageTime(selectedStory.stories[currentStoryIndex].timestamp) : \n                     'Just now'}\n                 </p>\n               </div>\n             </div>\n             <button \n               onClick={handleCloseStory} \n               className=\"ml-auto text-white p-2\"\n             >\n               <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                 <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n               </svg>\n             </button>\n           </div>\n           \n           {/* Story Content */}\n           <div className=\"relative w-full h-full max-w-md max-h-[80vh] flex items-center justify-center\">\n             {selectedStory.stories && selectedStory.stories[currentStoryIndex] && (\n               <>\n                 <img \n                   src={selectedStory.stories[currentStoryIndex].imageUrl} \n                   alt=\"Story\" \n                   className=\"max-w-full max-h-full object-contain\" \n                 />\n                 {selectedStory.stories[currentStoryIndex].text && (\n                   <p className=\"absolute bottom-20 left-4 right-4 text-white text-center text-lg font-medium p-4 bg-black bg-opacity-30 rounded\">\n                     {selectedStory.stories[currentStoryIndex].text}\n                   </p>\n                 )}\n               </>\n             )}\n           </div>\n           \n           {/* Navigation Controls */}\n           <div className=\"absolute inset-0 flex\">\n             <div className=\"w-1/3 h-full\" onClick={handlePrevStory}></div>\n             <div className=\"w-1/3 h-full\"></div>\n             <div className=\"w-1/3 h-full\" onClick={handleNextStory}></div>\n           </div>\n         </div>\n       )}\n      \n      {/* Stories Bar */}\n      <div className=\"mb-6\">\n        <div className=\"flex space-x-3 overflow-x-auto scrollbar-hide pb-2\">\n          {/* Your Story */}\n          <div className=\"flex flex-col items-center min-w-16\">\n            <div className=\"relative\">\n              <div className=\"w-14 h-14 rounded-full bg-gradient-to-br from-unalon-300 to-unalon-400 flex items-center justify-center border-2 border-unalon-300\">\n                <span className=\"material-icons text-white text-lg\">add</span>\n              </div>\n            </div>\n            <span className=\"text-xs text-unalon-600 mt-1 text-center\">Your Story</span>\n          </div>\n          \n          {/* Friend Stories */}\n          {friendsWithStoriesState.map((friend) => (\n            <div \n              key={friend.name} \n              className=\"flex flex-col items-center min-w-16 cursor-pointer\" \n              onClick={() => handleOpenStory(friend)}\n            >\n              <div className=\"relative\">\n                <div className={`w-14 h-14 rounded-full ${friend.hasStory ? (friend.stories && friend.stories.some(s => !s.viewed) ? 'bg-gradient-to-r from-blue-400 to-blue-600' : 'bg-gray-300') : 'bg-gray-300'} p-0.5`}>\n                  <div className=\"w-full h-full rounded-full bg-white p-0.5\">\n                    <img \n                      src={friend.avatar}\n                      alt={friend.name}\n                      className=\"w-full h-full rounded-full object-cover\"\n                    />\n                  </div>\n                </div>\n                {friend.hasStory && (\n                  <div className=\"absolute -bottom-1 -right-1 w-4 h-4 rounded-full border-2 border-white flex items-center justify-center\"\n                       style={{ backgroundColor: friend.stories && friend.stories.some(s => !s.viewed) ? '#10b981' : '#9ca3af' }}>\n                  </div>\n                )}\n              </div>\n              <span className=\"text-xs text-unalon-600 mt-1 text-center truncate w-16\">{friend.name}</span>\n            </div>\n          ))}\n        </div>\n      </div>\n      \n      <div className=\"space-y-3\">\n        {conversations.map((conversation) => (\n          <div \n            key={conversation.user.id}\n            onClick={() => setSelectedUser(conversation.user)}\n            className=\"bg-unalon-50 rounded-2xl shadow-sm p-4 border border-unalon-300 hover:shadow-md transition-shadow duration-200 cursor-pointer\"\n          >\n            <div className=\"flex items-center\">\n              <img \n                alt={`${conversation.user.name} profile`}\n                className=\"w-12 h-12 rounded-full object-cover mr-3\" \n                src={conversation.user.avatar || \"https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?auto=format&fit=crop&w=400&h=400\"}\n              />\n              <div className=\"flex-1\">\n                <div className=\"flex justify-between items-start\">\n                  <h3 className=\"text-base font-semibold text-unalon-900\">{conversation.user.name}</h3>\n                  <span className=\"text-xs text-unalon-700\">\n                    {conversation.lastMessage.timestamp ? formatMessageTime(conversation.lastMessage.timestamp) : 'Just now'}\n                  </span>\n                </div>\n                <p className=\"text-sm text-unalon-700 mt-1\">{conversation.lastMessage.content}</p>\n              </div>\n              {conversation.unreadCount > 0 && (\n                <div className=\"w-2 h-2 bg-blue-500 rounded-full ml-2\"></div>\n              )}\n            </div>\n          </div>\n        ))}\n\n        {conversations.length === 0 && (\n          <div className=\"text-center py-12\">\n            <p className=\"text-unalon-700 text-lg\">No conversations yet</p>\n            <p className=\"text-unalon-500 text-sm mt-1\">Join activities to start chatting with other members!</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n","size_bytes":20158},"client/src/pages/CreatePage.tsx":{"content":"import { useState } from 'react';\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\nimport { useLocation } from 'wouter';\nimport { apiRequest } from '@/lib/queryClient';\nimport { useToast } from '@/hooks/use-toast';\n\ninterface CreatePageProps {\n  onClose?: () => void;\n}\n\nexport default function CreatePage({ onClose }: CreatePageProps = {}) {\n  const [, setLocation] = useLocation();\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n\n  const [formData, setFormData] = useState({\n    title: '',\n    description: '',\n    datetime: '',\n    duration: '',\n    maxParticipants: '',\n    location: '',\n    vibes: [] as string[],\n    image: '',\n    visibility: 'public' as 'public' | 'private',\n    acceptanceMode: 'manual' as 'manual' | 'auto',\n  });\n  \n  const [showImageOptions, setShowImageOptions] = useState(false);\n  const [aiGenerating, setAiGenerating] = useState(false);\n  const [showMap, setShowMap] = useState(false);\n  const [suggestedVibes, setSuggestedVibes] = useState<string[]>([]);\n  const [showVibeSuggestions, setShowVibeSuggestions] = useState(false);\n\n  const vibeOptions = ['Casual', 'Fun', 'Relaxed', 'Adventurous', 'Social', 'Creative', 'Active', 'Chill', 'Intellectual', 'Professional', 'Artistic', 'Musical', 'Sporty', 'Wellness', 'Tech', 'Food', 'Travel', 'Educational', 'Networking', 'Party'];\n\n  const createActivityMutation = useMutation({\n    mutationFn: async (data: any) => {\n      const response = await apiRequest('POST', '/api/activities', data);\n      return await response.json();\n    },\n    onSuccess: () => {\n      toast({ title: \"Activity created successfully!\" });\n      queryClient.invalidateQueries({ queryKey: ['/api/activities'] });\n      if (onClose) {\n        onClose();\n      } else {\n        setLocation('/');\n      }\n    },\n    onError: (error: any) => {\n      toast({ \n        title: \"Failed to create activity\", \n        description: error.message || \"Please try again\",\n        variant: \"destructive\" \n      });\n    },\n  });\n\n  const handleSubmit = () => {\n    if (!formData.title || !formData.datetime || !formData.location || !formData.maxParticipants) {\n      toast({ \n        title: \"Missing required fields\", \n        description: \"Please fill in all required fields\",\n        variant: \"destructive\" \n      });\n      return;\n    }\n\n    const submitData = {\n      ...formData,\n      maxParticipants: parseInt(formData.maxParticipants),\n      datetime: new Date(formData.datetime).toISOString(),\n    };\n\n    createActivityMutation.mutate(submitData);\n  };\n\n  const toggleVibe = (vibe: string) => {\n    setFormData(prev => ({\n      ...prev,\n      vibes: prev.vibes.includes(vibe) \n        ? prev.vibes.filter(v => v !== vibe)\n        : [...prev.vibes, vibe]\n    }));\n  };\n\n  const suggestVibes = async () => {\n    if (!formData.title && !formData.description) {\n      toast({ \n        title: \"Add a title or description first\", \n        description: \"AI needs some context to suggest vibes\",\n        variant: \"destructive\" \n      });\n      return;\n    }\n\n    setAiGenerating(true);\n    try {\n      // Simulate AI analysis based on title and description\n      const text = `${formData.title} ${formData.description}`.toLowerCase();\n      const suggestions: string[] = [];\n\n      // Simple keyword-based AI suggestions\n      if (text.includes('coffee') || text.includes('cafe') || text.includes('drink')) {\n        suggestions.push('Casual', 'Social', 'Relaxed');\n      }\n      if (text.includes('tech') || text.includes('coding') || text.includes('programming')) {\n        suggestions.push('Tech', 'Educational', 'Professional');\n      }\n      if (text.includes('music') || text.includes('guitar') || text.includes('jam')) {\n        suggestions.push('Musical', 'Creative', 'Fun');\n      }\n      if (text.includes('book') || text.includes('reading') || text.includes('discussion')) {\n        suggestions.push('Intellectual', 'Educational', 'Social');\n      }\n      if (text.includes('yoga') || text.includes('meditation') || text.includes('wellness')) {\n        suggestions.push('Wellness', 'Relaxed', 'Chill');\n      }\n      if (text.includes('sport') || text.includes('fitness') || text.includes('workout')) {\n        suggestions.push('Sporty', 'Active', 'Fun');\n      }\n      if (text.includes('art') || text.includes('creative') || text.includes('painting')) {\n        suggestions.push('Artistic', 'Creative', 'Fun');\n      }\n      if (text.includes('party') || text.includes('celebration') || text.includes('birthday')) {\n        suggestions.push('Party', 'Fun', 'Social');\n      }\n      if (text.includes('networking') || text.includes('business') || text.includes('professional')) {\n        suggestions.push('Networking', 'Professional', 'Social');\n      }\n      if (text.includes('travel') || text.includes('adventure') || text.includes('explore')) {\n        suggestions.push('Adventurous', 'Travel', 'Fun');\n      }\n      if (text.includes('food') || text.includes('cooking') || text.includes('dinner')) {\n        suggestions.push('Food', 'Social', 'Fun');\n      }\n\n      // Add some default vibes if no specific matches\n      if (suggestions.length === 0) {\n        suggestions.push('Social', 'Fun', 'Casual');\n      }\n\n      // Remove duplicates and limit to 5 suggestions\n      const uniqueSuggestions = [...new Set(suggestions)].slice(0, 5);\n      setSuggestedVibes(uniqueSuggestions);\n      setShowVibeSuggestions(true);\n\n      toast({ \n        title: \"AI suggested vibes!\", \n        description: `Based on your event: ${uniqueSuggestions.join(', ')}`\n      });\n    } catch (error) {\n      toast({ \n        title: \"Failed to generate suggestions\", \n        description: \"Please try again\",\n        variant: \"destructive\" \n      });\n    } finally {\n      setAiGenerating(false);\n    }\n  };\n\n  const handleImageUpload = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        setFormData(prev => ({ ...prev, image: e.target?.result as string }));\n        setShowImageOptions(false);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  const generateImageWithAI = async () => {\n    if (!formData.title && !formData.description) {\n      toast({ \n        title: \"Missing information\", \n        description: \"Please add a title or description first\",\n        variant: \"destructive\" \n      });\n      return;\n    }\n\n    setAiGenerating(true);\n    try {\n      // Create a smart image prompt based on title and description\n      const text = `${formData.title} ${formData.description}`.toLowerCase();\n      let imagePrompt = '';\n      let imageUrl = '';\n\n      // Generate contextually relevant images based on event type\n      if (text.includes('coffee') || text.includes('cafe') || text.includes('drink')) {\n        imageUrl = 'https://images.unsplash.com/photo-1495474472287-4d71bcdd2085?auto=format&fit=crop&w=800&h=600&q=80';\n        imagePrompt = 'coffee shop meeting';\n      } else if (text.includes('tech') || text.includes('coding') || text.includes('programming')) {\n        imageUrl = 'https://images.unsplash.com/photo-1518709268805-4e9042af2176?auto=format&fit=crop&w=800&h=600&q=80';\n        imagePrompt = 'coding meetup';\n      } else if (text.includes('music') || text.includes('guitar') || text.includes('jam')) {\n        imageUrl = 'https://images.unsplash.com/photo-1493225457124-a3eb161ffa5f?auto=format&fit=crop&w=800&h=600&q=80';\n        imagePrompt = 'music jam session';\n      } else if (text.includes('book') || text.includes('reading') || text.includes('discussion')) {\n        imageUrl = 'https://images.unsplash.com/photo-1481627834876-b7833e8f5570?auto=format&fit=crop&w=800&h=600&q=80';\n        imagePrompt = 'book club discussion';\n      } else if (text.includes('yoga') || text.includes('meditation') || text.includes('wellness')) {\n        imageUrl = 'https://images.unsplash.com/photo-1544367567-0f2fcb009e0b?auto=format&fit=crop&w=800&h=600&q=80';\n        imagePrompt = 'yoga meditation session';\n      } else if (text.includes('sport') || text.includes('fitness') || text.includes('workout')) {\n        imageUrl = 'https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?auto=format&fit=crop&w=800&h=600&q=80';\n        imagePrompt = 'fitness workout session';\n      } else if (text.includes('art') || text.includes('creative') || text.includes('painting')) {\n        imageUrl = 'https://images.unsplash.com/photo-1460661419201-fd4cecdf8a8a?auto=format&fit=crop&w=800&h=600&q=80';\n        imagePrompt = 'art creative workshop';\n      } else if (text.includes('party') || text.includes('celebration') || text.includes('birthday')) {\n        imageUrl = 'https://images.unsplash.com/photo-1530103862676-de8c9debad1d?auto=format&fit=crop&w=800&h=600&q=80';\n        imagePrompt = 'party celebration';\n      } else if (text.includes('networking') || text.includes('business') || text.includes('professional')) {\n        imageUrl = 'https://images.unsplash.com/photo-1552664730-d307ca884978?auto=format&fit=crop&w=800&h=600&q=80';\n        imagePrompt = 'business networking event';\n      } else if (text.includes('travel') || text.includes('adventure') || text.includes('explore')) {\n        imageUrl = 'https://images.unsplash.com/photo-1506905925346-21bda4d32df4?auto=format&fit=crop&w=800&h=600&q=80';\n        imagePrompt = 'travel adventure';\n      } else if (text.includes('food') || text.includes('cooking') || text.includes('dinner')) {\n        imageUrl = 'https://images.unsplash.com/photo-1414235077428-338989a2e8c0?auto=format&fit=crop&w=800&h=600&q=80';\n        imagePrompt = 'food cooking dinner';\n      } else if (text.includes('game') || text.includes('board') || text.includes('play')) {\n        imageUrl = 'https://images.unsplash.com/photo-1511512578047-dfb367046420?auto=format&fit=crop&w=800&h=600&q=80';\n        imagePrompt = 'board games night';\n      } else if (text.includes('study') || text.includes('academic') || text.includes('learning')) {\n        imageUrl = 'https://images.unsplash.com/photo-1522202176988-66273c2fd55f?auto=format&fit=crop&w=800&h=600&q=80';\n        imagePrompt = 'study group learning';\n      } else {\n        // Default social gathering image\n        imageUrl = 'https://images.unsplash.com/photo-1511795409834-ef04bbd61622?auto=format&fit=crop&w=800&h=600&q=80';\n        imagePrompt = 'social gathering event';\n      }\n      \n      setFormData(prev => ({ ...prev, image: imageUrl }));\n      setShowImageOptions(false);\n      toast({ \n        title: \"AI image generated!\", \n        description: `Created: ${imagePrompt}`\n      });\n    } catch (error) {\n      toast({ \n        title: \"Failed to generate image\", \n        description: \"Please try again or upload manually\",\n        variant: \"destructive\" \n      });\n    } finally {\n      setAiGenerating(false);\n    }\n  };\n\n  return (\n    <div className=\"flex-grow overflow-y-auto bg-white\">\n      <div className={`relative flex size-full ${onClose ? 'min-h-auto' : 'min-h-screen'} flex-col bg-white justify-between group/design-root overflow-x-hidden`}>\n        <div>\n          {/* Header - Only show when not in modal */}\n          {!onClose && (\n            <div className=\"flex items-center bg-white p-4 pb-2 justify-between max-w-[480px] mx-auto\">\n              <button \n                onClick={() => setLocation('/')}\n                className=\"text-unalon-900 flex size-12 shrink-0 items-center cursor-pointer\"\n              >\n                <span className=\"material-icons\">close</span>\n              </button>\n              <h2 className=\"text-unalon-900 text-lg font-bold leading-tight tracking-[-0.015em] flex-1 text-center pr-12\">\n                New activity\n              </h2>\n            </div>\n          )}\n          \n          {/* Close button for modal */}\n          {onClose && (\n            <div className=\"flex justify-end p-4\">\n              <button \n                onClick={onClose}\n                className=\"text-unalon-600 hover:text-unalon-800 transition-colors duration-200 p-2 rounded-full hover:bg-unalon-100\"\n              >\n                <span className=\"material-icons\">close</span>\n              </button>\n            </div>\n          )}\n\n          {/* Activity Title */}\n          <div className=\"flex max-w-[480px] flex-wrap items-end gap-4 px-4 py-3 mx-auto\">\n            <label className=\"flex flex-col min-w-40 flex-1\">\n              <input \n                placeholder=\"What do you want to do? 👀\" \n                className=\"form-input flex w-full min-w-0 flex-1 resize-none overflow-hidden rounded-xl text-unalon-900 focus:outline-0 focus:ring-0 border-none bg-unalon-200 focus:border-none h-14 placeholder:text-unalon-400 p-4 text-base font-normal leading-normal\"\n                value={formData.title}\n                onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n              />\n            </label>\n          </div>\n\n          {/* When Section */}\n          <h3 className=\"text-unalon-900 text-lg font-bold leading-tight tracking-[-0.015em] px-4 pb-2 pt-4 max-w-[480px] mx-auto\">\n            When\n          </h3>\n          <div className=\"flex max-w-[480px] flex-wrap items-end gap-4 px-4 py-3 mx-auto\">\n            <label className=\"flex flex-col min-w-40 flex-1\">\n              <input \n                type=\"datetime-local\" \n                className=\"form-input flex w-full min-w-0 flex-1 resize-none overflow-hidden rounded-xl text-unalon-900 focus:outline-0 focus:ring-0 border-none bg-unalon-200 focus:border-none h-14 placeholder:text-unalon-400 p-4 text-base font-normal leading-normal\"\n                value={formData.datetime}\n                onChange={(e) => setFormData(prev => ({ ...prev, datetime: e.target.value }))}\n              />\n            </label>\n          </div>\n          <div className=\"flex max-w-[480px] flex-wrap items-end gap-4 px-4 py-3 mx-auto\">\n            <label className=\"flex flex-col min-w-40 flex-1\">\n              <input \n                type=\"text\" \n                placeholder=\"Duration (e.g., 2 hours, 30 mins)\" \n                className=\"form-input flex w-full min-w-0 flex-1 resize-none overflow-hidden rounded-xl text-unalon-900 focus:outline-0 focus:ring-0 border-none bg-unalon-200 focus:border-none h-14 placeholder:text-unalon-400 p-4 text-base font-normal leading-normal\"\n                value={formData.duration}\n                onChange={(e) => setFormData(prev => ({ ...prev, duration: e.target.value }))}\n              />\n            </label>\n          </div>\n\n          {/* Description */}\n          <h3 className=\"text-unalon-900 text-lg font-bold leading-tight tracking-[-0.015em] px-4 pb-2 pt-4 max-w-[480px] mx-auto\">\n            Description\n          </h3>\n          <div className=\"flex max-w-[480px] flex-wrap items-end gap-4 px-4 py-3 mx-auto\">\n            <label className=\"flex flex-col min-w-40 flex-1\">\n              <textarea \n                placeholder=\"Add a description\" \n                className=\"form-input flex w-full min-w-0 flex-1 resize-none overflow-hidden rounded-xl text-unalon-900 focus:outline-0 focus:ring-0 border-none bg-unalon-200 focus:border-none min-h-36 placeholder:text-unalon-400 p-4 text-base font-normal leading-normal\"\n                value={formData.description}\n                onChange={(e) => setFormData(prev => ({ ...prev, description: e.target.value }))}\n              />\n            </label>\n          </div>\n\n          {/* Photo Section */}\n          <h3 className=\"text-unalon-900 text-lg font-bold leading-tight tracking-[-0.015em] px-4 pb-2 pt-4 max-w-[480px] mx-auto\">\n            Add a photo\n          </h3>\n          \n          {formData.image ? (\n            <div className=\"max-w-[480px] mx-auto px-4 pb-4\">\n              <div className=\"relative\">\n                <img \n                  src={formData.image} \n                  alt=\"Activity preview\" \n                  className=\"w-full h-48 object-cover rounded-xl\"\n                />\n                <button\n                  onClick={() => setFormData(prev => ({ ...prev, image: '' }))}\n                  className=\"absolute top-2 right-2 bg-black bg-opacity-50 text-white rounded-full p-1\"\n                >\n                  <span className=\"material-icons text-sm\">close</span>\n                </button>\n              </div>\n            </div>\n          ) : (\n            <div className=\"max-w-[480px] mx-auto px-4 pb-4\">\n              <div className=\"flex gap-3\">\n                <button\n                  onClick={() => setShowImageOptions(!showImageOptions)}\n                  className=\"flex-1 bg-unalon-200 hover:bg-unalon-300 text-unalon-800 py-3 px-4 rounded-xl transition-colors flex items-center justify-center gap-2\"\n                >\n                  <span className=\"material-icons\">add_photo_alternate</span>\n                  <span>Add Photo</span>\n                </button>\n                <button\n                  onClick={generateImageWithAI}\n                  disabled={aiGenerating}\n                  className=\"flex-1 bg-unalon-accent-400 hover:bg-unalon-accent-500 text-white py-3 px-4 rounded-xl transition-colors flex items-center justify-center gap-2 disabled:opacity-50\"\n                >\n                  <span className=\"material-icons\">auto_awesome</span>\n                  <span>{aiGenerating ? 'Generating...' : 'AI Generate'}</span>\n                </button>\n              </div>\n              \n              {showImageOptions && (\n                <div className=\"mt-3 bg-unalon-100 rounded-xl p-4 border border-unalon-300\">\n                  <input\n                    type=\"file\"\n                    accept=\"image/*\"\n                    onChange={handleImageUpload}\n                    className=\"hidden\"\n                    id=\"imageUpload\"\n                  />\n                  <label\n                    htmlFor=\"imageUpload\"\n                    className=\"block w-full text-center py-8 border-2 border-dashed border-unalon-400 rounded-lg cursor-pointer hover:border-unalon-600 transition-colors\"\n                  >\n                    <span className=\"material-icons text-4xl text-unalon-500 mb-2 block\">cloud_upload</span>\n                    <span className=\"text-unalon-700\">Click to upload or drag photo here</span>\n                  </label>\n                  <button\n                    onClick={() => setShowImageOptions(false)}\n                    className=\"mt-3 w-full text-unalon-600 text-sm\"\n                  >\n                    Cancel\n                  </button>\n                </div>\n              )}\n            </div>\n          )}\n\n          {/* How many */}\n          <h3 className=\"text-unalon-900 text-lg font-bold leading-tight tracking-[-0.015em] px-4 pb-2 pt-4 max-w-[480px] mx-auto\">\n            How many\n          </h3>\n          <div className=\"flex max-w-[480px] flex-wrap items-end gap-4 px-4 py-3 mx-auto\">\n            <label className=\"flex flex-col min-w-40 flex-1\">\n              <input \n                type=\"number\" \n                placeholder=\"Max number of participants\" \n                className=\"form-input flex w-full min-w-0 flex-1 resize-none overflow-hidden rounded-xl text-unalon-900 focus:outline-0 focus:ring-0 border-none bg-unalon-200 focus:border-none h-14 placeholder:text-unalon-400 p-4 text-base font-normal leading-normal\"\n                value={formData.maxParticipants}\n                onChange={(e) => setFormData(prev => ({ ...prev, maxParticipants: e.target.value }))}\n                min=\"1\"\n              />\n            </label>\n          </div>\n\n          {/* Where */}\n          <h3 className=\"text-unalon-900 text-lg font-bold leading-tight tracking-[-0.015em] px-4 pb-2 pt-4 max-w-[480px] mx-auto\">\n            Where\n          </h3>\n          <div className=\"flex max-w-[480px] flex-wrap items-end gap-4 px-4 py-3 mx-auto\">\n            <label className=\"flex flex-col min-w-40 flex-1\">\n              <input \n                type=\"text\" \n                placeholder=\"Location\" \n                className=\"form-input flex w-full min-w-0 flex-1 resize-none overflow-hidden rounded-xl text-unalon-900 focus:outline-0 focus:ring-0 border-none bg-unalon-200 focus:border-none h-14 placeholder:text-unalon-400 p-4 text-base font-normal leading-normal\"\n                value={formData.location}\n                onChange={(e) => setFormData(prev => ({ ...prev, location: e.target.value }))}\n              />\n            </label>\n            <button\n              type=\"button\"\n              onClick={() => setShowMap(!showMap)}\n              className=\"flex items-center justify-center w-14 h-14 bg-unalon-accent-400 text-white rounded-xl hover:bg-unalon-accent-500 transition-colors\"\n            >\n              <span className=\"material-icons\">map</span>\n            </button>\n          </div>\n\n          {/* Map Integration */}\n          {showMap && (\n            <div className=\"max-w-[480px] mx-auto px-4 pb-4\">\n              <div className=\"bg-unalon-100 rounded-xl p-4 border border-unalon-300\">\n                <div className=\"flex items-center justify-between mb-3\">\n                  <h4 className=\"font-semibold text-unalon-800\">Popular Locations</h4>\n                  <button onClick={() => setShowMap(false)}>\n                    <span className=\"material-icons text-unalon-600\">close</span>\n                  </button>\n                </div>\n                <div className=\"space-y-2\">\n                  {/* Sponsored Locations */}\n                  <div className=\"mb-2\">\n                    <div className=\"text-xs text-unalon-400 font-medium px-3 py-1 bg-gradient-to-r from-unalon-accent-50 to-unalon-50 rounded-full flex items-center gap-1\">\n                      <span className=\"text-unalon-accent-400\">✨</span>\n                      Sponsored\n                    </div>\n                  </div>\n                  {[\n                    { name: 'Mocha Mojo Café', sponsored: true },\n                    { name: 'The Daily Grind', sponsored: true },\n                    { name: 'Creativity Explored', sponsored: true }\n                  ].map(location => (\n                    <button\n                      key={location.name}\n                      onClick={() => {\n                        setFormData(prev => ({ ...prev, location: location.name }));\n                        setShowMap(false);\n                      }}\n                      className=\"w-full text-left px-3 py-2 rounded-lg bg-gradient-to-r from-unalon-accent-50 to-white hover:from-unalon-accent-100 hover:to-unalon-50 transition-colors text-unalon-700 border-l-2 border-unalon-accent-300 shadow-sm\"\n                    >\n                      📍 {location.name} \n                      <span className=\"text-xs text-unalon-accent-400 font-medium ml-2\">✨</span>\n                    </button>\n                  ))}\n                  \n                  {/* Regular Locations */}\n                  <div className=\"mt-3 mb-2\">\n                    <div className=\"text-xs text-unalon-500 px-3 py-1\">\n                      Popular Locations\n                    </div>\n                  </div>\n                  {[\n                    'Mission District',\n                    'Golden Gate Park',\n                    'Castro Street',\n                    'Lombard Street',\n                    'Fishermans Wharf',\n                    'Union Square'\n                  ].map(location => (\n                    <button\n                      key={location}\n                      onClick={() => {\n                        setFormData(prev => ({ ...prev, location }));\n                        setShowMap(false);\n                      }}\n                      className=\"w-full text-left px-3 py-2 rounded-lg bg-white hover:bg-unalon-200 transition-colors text-unalon-700\"\n                    >\n                      📍 {location}\n                    </button>\n                  ))}\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* Location Map Display */}\n          {formData.location && (\n            <div className=\"max-w-[480px] mx-auto px-4 pb-4\">\n              <div className=\"bg-unalon-100 rounded-xl p-4 border border-unalon-300\">\n                <div className=\"flex items-center gap-2 mb-3\">\n                  <span className=\"material-icons text-unalon-600\">location_on</span>\n                  <h4 className=\"font-semibold text-unalon-800\">Location Preview</h4>\n                </div>\n                <div className=\"bg-white rounded-lg p-4 border border-unalon-200\">\n                  <div className=\"w-full h-32 bg-gradient-to-br from-blue-100 to-green-100 rounded-lg relative overflow-hidden\">\n                    <div className=\"absolute inset-0 bg-grid-pattern opacity-20\"></div>\n                    <div className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2\">\n                      <div className=\"w-6 h-6 bg-red-500 rounded-full border-2 border-white shadow-lg\"></div>\n                    </div>\n                    <div className=\"absolute bottom-2 left-2 bg-black bg-opacity-50 text-white text-xs px-2 py-1 rounded\">\n                      {formData.location}\n                    </div>\n                  </div>\n                  <p className=\"text-sm text-unalon-600 mt-2 text-center\">📍 {formData.location}</p>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* Vibe */}\n          <div className=\"flex items-center justify-between px-4 pt-4 max-w-[480px] mx-auto\">\n            <h3 className=\"text-unalon-900 text-lg font-bold leading-tight tracking-[-0.015em]\">\n              Vibe\n            </h3>\n            <button\n              onClick={suggestVibes}\n              disabled={aiGenerating || (!formData.title && !formData.description)}\n              className={`flex items-center gap-2 px-3 py-1 rounded-full text-sm font-medium transition-all duration-200 ${\n                aiGenerating || (!formData.title && !formData.description)\n                  ? 'bg-unalon-100 text-unalon-400 cursor-not-allowed'\n                  : 'bg-unalon-accent-500 text-white hover:bg-unalon-accent-600 active:scale-95'\n              }`}\n            >\n              <span className=\"material-icons text-sm\">\n                {aiGenerating ? 'hourglass_empty' : 'auto_awesome'}\n              </span>\n              {aiGenerating ? 'AI Thinking...' : 'AI Suggest'}\n            </button>\n          </div>\n\n          {/* AI Suggested Vibes */}\n          {showVibeSuggestions && suggestedVibes.length > 0 && (\n            <div className=\"px-4 pb-2 max-w-[480px] mx-auto\">\n              <div className=\"bg-unalon-accent-50 border border-unalon-accent-200 rounded-xl p-3 mb-3\">\n                <p className=\"text-sm text-unalon-accent-700 mb-2\">\n                  <span className=\"material-icons text-sm mr-1\">lightbulb</span>\n                  AI suggested vibes for your event:\n                </p>\n                <div className=\"flex gap-2 flex-wrap\">\n                  {suggestedVibes.map((vibe) => (\n                    <button\n                      key={vibe}\n                      onClick={() => toggleVibe(vibe)}\n                      className={`flex h-7 shrink-0 items-center justify-center gap-x-2 rounded-full pl-3 pr-3 cursor-pointer transition-all duration-200 hover:scale-105 active:scale-95 ${\n                        formData.vibes.includes(vibe)\n                          ? 'bg-unalon-accent-500 text-white'\n                          : 'bg-white border border-unalon-accent-300 text-unalon-accent-700 hover:bg-unalon-accent-100'\n                      }`}\n                    >\n                      <p className=\"text-xs font-medium leading-normal\">{vibe}</p>\n                    </button>\n                  ))}\n                </div>\n              </div>\n            </div>\n          )}\n\n          <div className=\"flex gap-3 p-3 flex-wrap pr-4 max-w-[480px] mx-auto\">\n            {vibeOptions.map((vibe) => (\n              <button\n                key={vibe}\n                onClick={() => toggleVibe(vibe)}\n                className={`flex h-8 shrink-0 items-center justify-center gap-x-2 rounded-full pl-4 pr-4 cursor-pointer transition-all duration-200 hover:scale-105 active:scale-95 ${\n                  formData.vibes.includes(vibe)\n                    ? 'bg-unalon-900 text-white'\n                    : 'bg-unalon-200 text-unalon-900 hover:bg-unalon-900 hover:text-white'\n                }`}\n              >\n                <p className=\"text-sm font-medium leading-normal\">{vibe}</p>\n              </button>\n            ))}\n          </div>\n\n          {/* Visibility Options */}\n          <h3 className=\"text-unalon-900 text-lg font-bold leading-tight tracking-[-0.015em] px-4 pb-2 pt-4 max-w-[480px] mx-auto\">\n            Visibility\n          </h3>\n          <div className=\"flex max-w-[480px] mx-auto px-4 pb-4 gap-3\">\n            <button\n              onClick={() => setFormData(prev => ({ ...prev, visibility: 'public' }))}\n              className={`flex-1 py-3 px-4 rounded-xl transition-colors flex items-center justify-center gap-2 ${\n                formData.visibility === 'public'\n                  ? 'bg-unalon-900 text-white'\n                  : 'bg-unalon-200 text-unalon-800 hover:bg-unalon-300'\n              }`}\n            >\n              <span className=\"material-icons text-sm\">public</span>\n              <span className=\"font-medium\">Public</span>\n            </button>\n            <button\n              onClick={() => setFormData(prev => ({ ...prev, visibility: 'private' }))}\n              className={`flex-1 py-3 px-4 rounded-xl transition-colors flex items-center justify-center gap-2 ${\n                formData.visibility === 'private'\n                  ? 'bg-unalon-900 text-white'\n                  : 'bg-unalon-200 text-unalon-800 hover:bg-unalon-300'\n              }`}\n            >\n              <span className=\"material-icons text-sm\">lock</span>\n              <span className=\"font-medium\">Private</span>\n            </button>\n          </div>\n\n          {/* Request Acceptance - Only show after participants are entered */}\n          {formData.maxParticipants && (\n            <div className={`transition-all duration-300 ease-in-out ${formData.maxParticipants ? 'opacity-100 max-h-96' : 'opacity-0 max-h-0 overflow-hidden'}`}>\n              <h3 className=\"text-unalon-900 text-lg font-bold leading-tight tracking-[-0.015em] px-4 pb-2 pt-4 max-w-[480px] mx-auto\">\n                Request Acceptance\n              </h3>\n              <div className=\"flex max-w-[480px] mx-auto px-4 pb-4 gap-3\">\n                <button\n                  onClick={() => setFormData(prev => ({ ...prev, acceptanceMode: 'manual' }))}\n                  className={`flex-1 py-3 px-4 rounded-xl transition-colors flex items-center justify-center gap-2 ${\n                    formData.acceptanceMode === 'manual'\n                      ? 'bg-unalon-900 text-white'\n                      : 'bg-unalon-200 text-unalon-800 hover:bg-unalon-300'\n                  }`}\n                >\n                  <span className=\"material-icons text-sm\">how_to_reg</span>\n                  <span className=\"font-medium\">Manual</span>\n                </button>\n                <button\n                  onClick={() => setFormData(prev => ({ ...prev, acceptanceMode: 'auto' }))}\n                  className={`flex-1 py-3 px-4 rounded-xl transition-colors flex items-center justify-center gap-2 ${\n                    formData.acceptanceMode === 'auto'\n                      ? 'bg-unalon-900 text-white'\n                      : 'bg-unalon-200 text-unalon-800 hover:bg-unalon-300'\n                  }`}\n                >\n                  <span className=\"material-icons text-sm\">done_all</span>\n                  <span className=\"font-medium text-xs\">\n                    Auto-accept first {formData.maxParticipants}\n                  </span>\n                </button>\n              </div>\n\n              {formData.acceptanceMode === 'auto' && (\n                <div className=\"max-w-[480px] mx-auto px-4 pb-4\">\n                  <div className=\"bg-unalon-100 rounded-xl p-3 border border-unalon-300\">\n                    <p className=\"text-sm text-unalon-700 text-center\">\n                      <span className=\"material-icons text-sm mr-1\">info</span>\n                      The first {formData.maxParticipants} people to request will be automatically accepted\n                    </p>\n                  </div>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n\n        {/* Create Button */}\n        <div className=\"flex px-4 py-6 max-w-[480px] mx-auto w-full\">\n          <button \n            onClick={handleSubmit}\n            disabled={createActivityMutation.isPending}\n            className=\"flex min-w-[84px] max-w-[480px] cursor-pointer items-center justify-center overflow-hidden rounded-full h-12 px-5 bg-black text-white text-base font-bold leading-normal tracking-[0.015em] w-full button-effect disabled:opacity-50\"\n          >\n            <span className=\"truncate\">\n              {createActivityMutation.isPending ? 'Creating...' : 'Create Activity'}\n            </span>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":33210},"client/src/pages/EventDetailsPage.tsx":{"content":"import { useState, useEffect } from 'react';\nimport { useLocation } from 'wouter';\nimport { useQuery } from '@tanstack/react-query';\nimport { apiRequest } from '@/lib/queryClient';\nimport type { Activity, User } from '@shared/schema';\n\ninterface ActivityWithHost extends Activity {\n  host: User | null;\n}\n\nexport default function EventDetailsPage() {\n  const [, setLocation] = useLocation();\n  const [timeLeft, setTimeLeft] = useState({ days: 0, hours: 0, minutes: 0, seconds: 0 });\n  const [hasApplied, setHasApplied] = useState(false);\n  \n  // Get event ID and data from URL\n  const urlParts = window.location.pathname.split('/');\n  const eventId = urlParts[urlParts.length - 1];\n  const urlParams = new URLSearchParams(window.location.search);\n  const eventDataParam = urlParams.get('data');\n\n  // Try to get event data from URL first\n  let eventFromUrl: ActivityWithHost | null = null;\n  if (eventDataParam) {\n    try {\n      const parsedEvent = JSON.parse(decodeURIComponent(eventDataParam));\n      // Convert datetime string back to Date object\n      if (parsedEvent.datetime) {\n        parsedEvent.datetime = new Date(parsedEvent.datetime);\n      }\n      if (parsedEvent.createdAt) {\n        parsedEvent.createdAt = new Date(parsedEvent.createdAt);\n      }\n      if (parsedEvent.host?.createdAt) {\n        parsedEvent.host.createdAt = new Date(parsedEvent.host.createdAt);\n      }\n      eventFromUrl = parsedEvent;\n    } catch (error) {\n      console.error('Failed to parse event data from URL:', error);\n    }\n  }\n\n  // Generate sample event data based on event ID (fallback)\n  const generateSampleEvent = (id: string): ActivityWithHost => {\n    const eventTemplates = [\n      {\n        title: 'Board Game Night',\n        description: 'Join us for a fun evening of strategy games and friendly competition! We\\'ll have a variety of board games including Settlers of Catan, Ticket to Ride, and more. Perfect for game enthusiasts and newcomers alike.',\n        location: 'Game Cafe Downtown',\n        vibes: ['Fun', 'Social', 'Games'],\n        hostName: 'Alex',\n        hostInterests: ['board games', 'strategy', 'social'],\n        hostQuote: 'Life is a game, play it well.',\n        image: 'https://images.unsplash.com/photo-1610890716171-6b1bb98ffd09?auto=format&fit=crop&w=800&h=400',\n        avatar: 'https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=150&h=150&fit=crop&crop=face'\n      },\n      {\n        title: 'Coffee & Code: JavaScript Workshop',\n        description: 'A relaxed morning session where we\\'ll dive deep into modern JavaScript concepts. Perfect for developers looking to sharpen their skills while enjoying great coffee. We\\'ll cover ES6+, async/await, and practical examples.',\n        location: '456 Coffee Ave, Downtown',\n        vibes: ['Relaxed', 'Learning', 'Coffee'],\n        hostName: 'Sarah',\n        hostInterests: ['JavaScript', 'web development', 'coffee'],\n        hostQuote: 'Code is like humor. When you have to explain it, it\\'s bad.',\n        image: 'https://images.unsplash.com/photo-1495474472287-4d71bcdd2085?auto=format&fit=crop&w=800&h=400',\n        avatar: 'https://images.unsplash.com/photo-1494790108755-2616b612b786?w=150&h=150&fit=crop&crop=face'\n      },\n      {\n        title: 'Book Club: Science Fiction Night',\n        description: 'Join fellow sci-fi enthusiasts for a lively discussion about the latest in science fiction literature. We\\'ll be discussing \"The Three-Body Problem\" and exploring themes of first contact, physics, and human nature.',\n        location: '789 Library Blvd, University District',\n        vibes: ['Intellectual', 'Discussion', 'Books'],\n        hostName: 'David',\n        hostInterests: ['science fiction', 'reading', 'discussion'],\n        hostQuote: 'A reader lives a thousand lives before he dies.',\n        image: 'https://images.unsplash.com/photo-1481627834876-b7833e8f5570?auto=format&fit=crop&w=800&h=400',\n        avatar: 'https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=150&h=150&fit=crop&crop=face'\n      },\n      {\n        title: 'Acoustic Guitar Jam Session',\n        description: 'Bring your guitar and join us for an evening of acoustic music! All skill levels welcome. We\\'ll play covers, share original songs, and maybe even write something new together. Snacks and drinks provided.',\n        location: '321 Music St, Arts District',\n        vibes: ['Creative', 'Music', 'Casual'],\n        hostName: 'Emma',\n        hostInterests: ['music', 'guitar', 'acoustic'],\n        hostQuote: 'Music is the universal language of mankind.',\n        image: 'https://images.unsplash.com/photo-1511379938547-c1f69419868d?auto=format&fit=crop&w=800&h=400',\n        avatar: 'https://images.unsplash.com/photo-1438761681033-6461ffad8d80?w=150&h=150&fit=crop&crop=face'\n      },\n      {\n        title: 'Poetry Reading Night',\n        description: 'An intimate evening of poetry sharing and discussion. Bring your favorite poems or your own work to share. We\\'ll explore different styles, themes, and techniques in a supportive environment.',\n        location: '654 Poetry Lane, Cultural Quarter',\n        vibes: ['Intimate', 'Creative', 'Poetry'],\n        hostName: 'Alex',\n        hostInterests: ['poetry', 'writing', 'literature'],\n        hostQuote: 'Poetry is when an emotion has found its thought and the thought has found words.',\n        image: 'https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?auto=format&fit=crop&w=800&h=400',\n        avatar: 'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=150&h=150&fit=crop&crop=face'\n      }\n    ];\n\n    // Ensure we have a valid numeric ID, fallback to 1 if not\n    const numericId = parseInt(id) || 1;\n    const templateIndex = Math.abs(numericId) % eventTemplates.length;\n    const template = eventTemplates[templateIndex];\n    // Set event time to tomorrow at 6:35pm for Board Game Night\n    let eventTime;\n    if (template.title === 'Board Game Night') {\n      const tomorrow = new Date();\n      tomorrow.setDate(tomorrow.getDate() + 1);\n      tomorrow.setHours(18, 35, 0, 0); // 6:35 PM\n      eventTime = tomorrow;\n    } else {\n      eventTime = new Date(Date.now() + (numericId * 24 * 60 * 60 * 1000) + (numericId * 60 * 60 * 1000));\n    }\n\n    return {\n      id,\n      title: template.title,\n      description: template.description,\n      datetime: eventTime,\n      location: template.location,\n      maxParticipants: 20 + (numericId % 10),\n      currentParticipants: 8 + (numericId % 12),\n      vibes: template.vibes,\n      image: template.image,\n      createdAt: new Date(),\n      duration: '120',\n      hostId: id,\n      participantIds: Array.from({ length: 5 + (numericId % 5) }, (_, i) => `user${i + 1}`),\n      host: {\n        id,\n        name: template.hostName,\n        username: `${template.hostName.toLowerCase()}_${id}`,\n        email: `${template.hostName.toLowerCase()}@example.com`,\n        age: 25 + (numericId % 15),\n        location: template.location.split(',')[0],\n        avatar: template.avatar,\n        unalonScore: 85 + (numericId % 15),\n        interests: template.hostInterests,\n        favoriteQuote: template.hostQuote,\n        createdAt: new Date()\n      },\n      userRequested: false\n    };\n  };\n\n  // Try to fetch from API first, fallback to sample data\n  const { data: apiEvent, isLoading, error } = useQuery({\n    queryKey: ['event', eventId],\n    queryFn: () => apiRequest<ActivityWithHost>(`/activities/${eventId}`),\n    enabled: !!eventId && !eventFromUrl, // Skip API call if we have URL data\n    retry: false\n  });\n\n  // Priority: URL data > API data > generated sample data\n  const event = eventFromUrl || apiEvent || (eventId ? generateSampleEvent(eventId) : null);\n\n  // Countdown timer\n  useEffect(() => {\n    if (!event) return;\n    \n    const timer = setInterval(() => {\n      const now = new Date().getTime();\n      const eventTime = new Date(event.datetime).getTime();\n      const distance = eventTime - now;\n\n      if (distance > 0) {\n        setTimeLeft({\n          days: Math.floor(distance / (1000 * 60 * 60 * 24)),\n          hours: Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)),\n          minutes: Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60)),\n          seconds: Math.floor((distance % (1000 * 60)) / 1000)\n        });\n      }\n    }, 1000);\n\n    return () => clearInterval(timer);\n  }, [event?.datetime]);\n\n  const formatDateTime = (datetime: Date | string) => {\n    const date = datetime instanceof Date ? datetime : new Date(datetime);\n    return date.toLocaleDateString('en-US', { \n      weekday: 'short', \n      month: 'short', \n      day: 'numeric' \n    }) + ', ' + date.toLocaleTimeString('en-US', { \n      hour: 'numeric', \n      minute: '2-digit',\n      hour12: true \n    });\n  };\n\n  // Show loading state\n  if (isLoading) {\n    return (\n      <div className=\"max-w-md mx-auto bg-white min-h-screen flex items-center justify-center\">\n        <div className=\"text-unalon-600\">Loading event details...</div>\n      </div>\n    );\n  }\n\n  // Show loading state only if we're fetching from API\n  if (isLoading && !event) {\n    return (\n      <div className=\"max-w-md mx-auto bg-white min-h-screen flex items-center justify-center\">\n        <div className=\"text-unalon-600\">Loading event details...</div>\n      </div>\n    );\n  }\n\n  // Ensure we have an event to display\n  if (!event) {\n    return (\n      <div className=\"max-w-md mx-auto bg-white min-h-screen flex items-center justify-center\">\n        <div className=\"text-unalon-600\">Event not found</div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"max-w-md mx-auto bg-white min-h-screen\">\n      {/* Header */}\n      <header className=\"flex items-center justify-between p-4 border-b border-unalon-200\">\n        <button \n          onClick={() => setLocation('/')}\n          className=\"text-unalon-700 hover:text-unalon-900 transition-colors\"\n        >\n          <span className=\"material-icons\">arrow_back</span>\n        </button>\n        <h1 className=\"font-semibold text-unalon-900\">Event Details</h1>\n        <div className=\"w-6\"></div>\n      </header>\n\n      {/* Banner Image */}\n      <div className=\"w-full h-48 bg-unalon-100 overflow-hidden\">\n        <img \n          src={event.image || 'https://images.unsplash.com/photo-1516321318423-f06f85e504b3?auto=format&fit=crop&w=800&h=400'}\n          alt={event.title}\n          className=\"w-full h-full object-cover\"\n          onError={(e) => {\n            e.currentTarget.style.display = 'none';\n            e.currentTarget.nextElementSibling?.classList.remove('hidden');\n          }}\n        />\n        <div className={`w-full h-full flex items-center justify-center hidden`}>\n          <div className=\"text-center\">\n            <span className=\"material-icons text-4xl text-unalon-400 mb-2\">event</span>\n            <p className=\"text-unalon-500 text-sm\">{event.title}</p>\n          </div>\n        </div>\n      </div>\n\n      {/* Event Info */}\n      <div className=\"p-4 space-y-6 pb-24\">\n        {/* Title and Time */}\n        <div>\n          <h2 className=\"text-xl font-bold text-unalon-900 mb-2\">{event.title}</h2>\n          <p className=\"text-unalon-600\">{formatDateTime(event.datetime)} · {event.location}</p>\n        </div>\n\n        {/* Host Section */}\n        <div className=\"bg-unalon-50 rounded-xl p-4\">\n          <h3 className=\"font-semibold text-unalon-900 mb-3\">Host</h3>\n          <div className=\"flex items-center space-x-3\">\n            {event.host?.avatar ? (\n              <img\n                src={event.host.avatar}\n                alt={event.host.name}\n                className=\"w-12 h-12 rounded-full object-cover\"\n                onError={(e) => {\n                  e.currentTarget.style.display = 'none';\n                  e.currentTarget.nextElementSibling?.classList.remove('hidden');\n                }}\n              />\n            ) : null}\n            <div className={`w-12 h-12 rounded-full bg-unalon-200 flex items-center justify-center ${event.host?.avatar ? 'hidden' : ''}`}>\n              <span className=\"text-unalon-600 font-medium text-lg\">\n                {event.host?.name?.charAt(0) || '?'}\n              </span>\n            </div>\n            <div>\n              <p className=\"font-medium text-unalon-900\">{event.host?.name}</p>\n              <p className=\"text-sm text-unalon-600\">Verified · 5 past events</p>\n            </div>\n          </div>\n          <p className=\"text-sm text-unalon-600 mt-3\">\n            {event.host?.name} is passionate about {event.host?.interests?.slice(0, 2).join(' and ')}. {event.host?.favoriteQuote}\n          </p>\n        </div>\n\n        {/* Attendees Section */}\n        <div>\n          <h3 className=\"font-semibold text-unalon-900 mb-3\">Attendees</h3>\n          <div className=\"flex items-center space-x-2 mb-2\">\n            {/* Show first 5 attendees if available */}\n            {event.participantIds?.slice(0, 5).map((participantId, index) => (\n              <div key={participantId} className=\"w-8 h-8 rounded-full bg-unalon-200 flex items-center justify-center\">\n                <span className=\"text-xs text-unalon-600 font-medium\">\n                  {String.fromCharCode(65 + index)} {/* A, B, C, etc. */}\n                </span>\n              </div>\n            ))}\n          </div>\n          <p className=\"text-sm text-unalon-600\">\n            {event.participantIds?.length || 0} people applied\n          </p>\n        </div>\n\n        {/* Vibe Check */}\n        <div>\n          <h3 className=\"font-semibold text-unalon-900 mb-3\">Vibe Check</h3>\n          <div className=\"flex space-x-2 mb-3\">\n            {event.vibes?.map((vibe, index) => (\n              <span key={index} className=\"bg-unalon-100 text-unalon-700 text-sm px-3 py-1 rounded-full\">\n                {vibe}\n              </span>\n            ))}\n          </div>\n\n        </div>\n\n        {/* Description */}\n        <div>\n          <h3 className=\"font-semibold text-unalon-900 mb-3\">Description</h3>\n          <p className=\"text-unalon-600 text-sm leading-relaxed\">\n            {event.description}\n          </p>\n        </div>\n\n        {/* Countdown */}\n        <div>\n          <h3 className=\"font-semibold text-unalon-900 mb-3\">Countdown</h3>\n          <div className=\"grid grid-cols-4 gap-2\">\n            <div className=\"bg-unalon-100 rounded-lg p-3 text-center\">\n              <div className=\"text-lg font-bold text-unalon-900\">{timeLeft.days}</div>\n              <div className=\"text-xs text-unalon-600\">Days</div>\n            </div>\n            <div className=\"bg-unalon-100 rounded-lg p-3 text-center\">\n              <div className=\"text-lg font-bold text-unalon-900\">{timeLeft.hours}</div>\n              <div className=\"text-xs text-unalon-600\">Hours</div>\n            </div>\n            <div className=\"bg-unalon-100 rounded-lg p-3 text-center\">\n              <div className=\"text-lg font-bold text-unalon-900\">{timeLeft.minutes}</div>\n              <div className=\"text-xs text-unalon-600\">Minutes</div>\n            </div>\n            <div className=\"bg-unalon-100 rounded-lg p-3 text-center\">\n              <div className=\"text-lg font-bold text-unalon-900\">{timeLeft.seconds}</div>\n              <div className=\"text-xs text-unalon-600\">Seconds</div>\n            </div>\n          </div>\n        </div>\n\n        {/* Discussion */}\n        <div>\n          <h3 className=\"font-semibold text-unalon-900 mb-3\">Discussion</h3>\n          <div className=\"space-y-3\">\n            <div className=\"flex items-start space-x-3\">\n              <img\n                src=\"https://images.unsplash.com/photo-1544005313-94ddf0286df2?w=150&h=150&fit=crop&crop=face\"\n                alt=\"Sophia\"\n                className=\"w-8 h-8 rounded-full object-cover\"\n              />\n              <div>\n                <p className=\"text-sm font-medium text-unalon-900\">Sophia</p>\n                <p className=\"text-sm text-unalon-600\">This sounds amazing! Can't wait to join! 🎉</p>\n                <p className=\"text-xs text-unalon-500\">2d ago</p>\n              </div>\n            </div>\n            <div className=\"flex items-start space-x-3\">\n              <img\n                src=\"https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=150&h=150&fit=crop&crop=face\"\n                alt=\"David\"\n                className=\"w-8 h-8 rounded-full object-cover\"\n              />\n              <div>\n                <p className=\"text-sm font-medium text-unalon-900\">David</p>\n                <p className=\"text-sm text-unalon-600\">Looking forward to meeting everyone there!</p>\n                <p className=\"text-xs text-unalon-500\">1d ago</p>\n              </div>\n            </div>\n            <div className=\"flex items-start space-x-3\">\n              <img\n                src=\"https://images.unsplash.com/photo-1438761681033-6461ffad8d80?w=150&h=150&fit=crop&crop=face\"\n                alt=\"Emma\"\n                className=\"w-8 h-8 rounded-full object-cover\"\n              />\n              <div>\n                <p className=\"text-sm font-medium text-unalon-900\">Emma</p>\n                <p className=\"text-sm text-unalon-600\">Perfect timing! I've been looking for something like this.</p>\n                <p className=\"text-xs text-unalon-500\">5h ago</p>\n              </div>\n            </div>\n            <div className=\"flex items-start space-x-3\">\n              <img\n                src=\"https://images.unsplash.com/photo-1544005313-94ddf0286df2?w=150&h=150&fit=crop&crop=face\"\n                alt=\"Sarah\"\n                className=\"w-8 h-8 rounded-full object-cover\"\n              />\n              <div>\n                <p className=\"text-sm font-medium text-unalon-900\">Sarah</p>\n                <p className=\"text-sm text-unalon-600\">Count me in! This is exactly what I needed.</p>\n                <p className=\"text-xs text-unalon-500\">3h ago</p>\n              </div>\n            </div>\n          </div>\n          \n          {/* Comment Input */}\n          <div className=\"flex items-center space-x-3 pt-4 border-t border-unalon-100\">\n            <img\n              src=\"https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=150&h=150&fit=crop&crop=face\"\n              alt=\"You\"\n              className=\"w-8 h-8 rounded-full object-cover\"\n            />\n            <div className=\"flex-1 relative\">\n              <input\n                type=\"text\"\n                placeholder=\"Add a comment...\"\n                className=\"w-full px-4 py-2 bg-unalon-50 rounded-full text-sm focus:outline-none focus:ring-2 focus:ring-unalon-accent-400\"\n              />\n              <button className=\"absolute right-2 top-1/2 transform -translate-y-1/2 text-unalon-accent-500 hover:text-unalon-accent-600\">\n                <span className=\"material-icons text-sm\">send</span>\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Action Buttons */}\n      <div className=\"fixed bottom-0 left-0 right-0 max-w-md mx-auto bg-white border-t border-unalon-200 p-4 space-y-3\">\n          <button \n            className={`w-full py-3 rounded-xl font-medium transition-colors ${\n              hasApplied \n                ? 'bg-unalon-accent-400 text-white cursor-not-allowed' \n                : 'bg-unalon-accent-500 text-white hover:bg-unalon-accent-600'\n            }`}\n            onClick={() => {\n              if (!hasApplied) {\n                setHasApplied(true);\n              }\n            }}\n            disabled={hasApplied}\n          >\n            {hasApplied ? 'Applied' : 'Apply to Join'}\n          </button>\n          <div className=\"flex space-x-3\">\n            <button \n              className=\"flex-1 bg-unalon-100 text-unalon-700 py-3 rounded-xl font-medium hover:bg-unalon-200 transition-colors\"\n              onClick={() => alert('Added to calendar!')}\n            >\n              Add to Calendar\n            </button>\n            <button \n              className=\"flex-1 bg-unalon-100 text-unalon-700 py-3 rounded-xl font-medium hover:bg-unalon-200 transition-colors\"\n              onClick={() => alert('Reminder set!')}\n            >\n              Set Reminder\n            </button>\n          </div>\n        </div>\n    </div>\n  );\n} ","size_bytes":20136},"client/src/pages/HomePage.tsx":{"content":"import { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport { apiRequest } from '@/lib/queryClient';\nimport { useToast } from '@/hooks/use-toast';\nimport { useSearch } from '@/context/SearchContext';\nimport { useLocation } from 'wouter';\nimport { useState } from 'react';\nimport type { Activity, User } from '@shared/schema';\n\ninterface ActivityWithHost extends Activity {\n  host: User | null;\n}\n\ntype FilterType = 'hobbies' | 'filter' | 'sort';\ntype HobbyType = 'reading' | 'studying' | 'coffee' | 'sports' | 'music' | 'art' | 'food' | 'travel';\ntype FilterOption = 'today' | 'tomorrow' | 'week' | 'distance' | 'location';\ntype SortOption = 'date' | 'popularity' | 'spots';\n\nexport default function HomePage() {\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n  const { searchQuery } = useSearch();\n  const [, setLocation] = useLocation();\n  const [activeFilter, setActiveFilter] = useState<FilterType | null>(null);\n  const [selectedHobby, setSelectedHobby] = useState<HobbyType | null>(null);\n  const [filterOption, setFilterOption] = useState<FilterOption | null>(null);\n  const [sortBy, setSortBy] = useState<SortOption>('date');\n  const [distanceFilter, setDistanceFilter] = useState<string>('');\n  const [locationFilter, setLocationFilter] = useState<string>('');\n  const [showAttendeesDropdown, setShowAttendeesDropdown] = useState<string | null>(null);\n\n  const { data: activities = [], isLoading } = useQuery<ActivityWithHost[]>({\n    queryKey: ['/api/activities'],\n  });\n\n  // Sample activities for demonstration (these would normally come from the API)\n  const sampleActivities: ActivityWithHost[] = [\n    // Reading Category Events\n    {\n      id: '1',\n      title: 'Book Club Discussion',\n      description: 'Join us for a lively discussion about \"The Midnight Library\" by Matt Haig. Perfect for book lovers and deep thinkers.',\n      datetime: new Date(Date.now() + 24 * 60 * 60 * 1000), // Tomorrow\n      location: 'Central Library',\n      maxParticipants: 15,\n      currentParticipants: 8,\n      vibes: ['Intellectual', 'Chill', 'Discussion', 'Reading'],\n      image: 'https://images.unsplash.com/photo-1481627834876-b7833e8f5570?auto=format&fit=crop&w=800&h=400',\n      createdAt: new Date(),\n      duration: '120',\n      hostId: '1',\n      participantIds: ['1', '2', '3'],\n      host: { \n        id: '1', \n        name: 'Emma', \n        username: 'emma_reader',\n        email: 'emma@example.com', \n        age: 28,\n        location: 'San Francisco',\n        avatar: 'https://images.unsplash.com/photo-1494790108755-2616b612b786?w=150&h=150&fit=crop&crop=face',\n        unalonScore: 95,\n        interests: ['reading', 'books', 'discussion'],\n        favoriteQuote: 'Books are a uniquely portable magic.',\n        createdAt: new Date() \n      },\n      userRequested: false\n    },\n    {\n      id: 'r1',\n      title: 'Science Fiction Book Exchange',\n      description: 'Bring your favorite sci-fi novels to exchange with other readers. Discover new authors and make friends with similar reading interests.',\n      datetime: new Date(Date.now() + 4 * 24 * 60 * 60 * 1000),\n      location: 'Borderlands Books, Mission District',\n      maxParticipants: 20,\n      currentParticipants: 12,\n      vibes: ['Sci-Fi', 'Exchange', 'Community', 'Reading'],\n      image: 'https://images.unsplash.com/photo-1589998059171-988d887df646?auto=format&fit=crop&w=800&h=400',\n      createdAt: new Date(),\n      duration: '150',\n      hostId: 'r1h',\n      participantIds: ['r1p1', 'r1p2', 'r1p3'],\n      host: { \n        id: 'r1h', \n        name: 'Thomas', \n        username: 'thomas_scifi',\n        email: 'thomas@example.com', \n        age: 34,\n        location: 'San Francisco',\n        avatar: 'https://images.unsplash.com/photo-1500648767791-00dcc994a43e?w=150&h=150&fit=crop&crop=face',\n        unalonScore: 91,\n        interests: ['science fiction', 'fantasy', 'reading'],\n        favoriteQuote: 'The universe is made of stories, not atoms.',\n        createdAt: new Date() \n      },\n      userRequested: false\n    },\n    {\n      id: 'r2',\n      title: 'Silent Reading Party',\n      description: 'Bring your current read and join us for a peaceful afternoon of silent reading in a beautiful setting with light refreshments.',\n      datetime: new Date(Date.now() + 6 * 24 * 60 * 60 * 1000),\n      location: 'Green Apple Books, Richmond District',\n      maxParticipants: 15,\n      currentParticipants: 7,\n      vibes: ['Quiet', 'Peaceful', 'Focused', 'Reading'],\n      image: 'https://images.unsplash.com/photo-1513475382585-d06e58bcb0e0?auto=format&fit=crop&w=800&h=400',\n      createdAt: new Date(),\n      duration: '180',\n      hostId: 'r2h',\n      participantIds: ['r2p1', 'r2p2', 'r2p3'],\n      host: { \n        id: 'r2h', \n        name: 'Olivia', \n        username: 'olivia_reads',\n        email: 'olivia@example.com', \n        age: 29,\n        location: 'San Francisco',\n        avatar: 'https://images.unsplash.com/photo-1544005313-94ddf0286df2?w=150&h=150&fit=crop&crop=face',\n        unalonScore: 94,\n        interests: ['reading', 'quiet spaces', 'literature'],\n        favoriteQuote: 'Reading is dreaming with open eyes.',\n        createdAt: new Date() \n      },\n      userRequested: false\n    },\n    {\n      id: 'r3',\n      title: 'Poetry Reading Night',\n      description: 'An evening of poetry readings from local poets and open mic for attendees to share their own work.',\n      datetime: new Date(Date.now() + 8 * 24 * 60 * 60 * 1000),\n      location: 'City Lights Bookstore, North Beach',\n      maxParticipants: 25,\n      currentParticipants: 15,\n      vibes: ['Literary', 'Expressive', 'Cultural', 'Reading'],\n      image: 'https://images.unsplash.com/photo-1533669955142-6a73332af4db?auto=format&fit=crop&w=800&h=400',\n      createdAt: new Date(),\n      duration: '150',\n      hostId: 'r3h',\n      participantIds: ['r3p1', 'r3p2', 'r3p3'],\n      host: { \n        id: 'r3h', \n        name: 'Amara', \n        username: 'amara_poet',\n        email: 'amara@example.com', \n        age: 31,\n        location: 'San Francisco',\n        avatar: 'https://images.unsplash.com/photo-1531123897727-8f129e1688ce?w=150&h=150&fit=crop&crop=face',\n        unalonScore: 93,\n        interests: ['poetry', 'literature', 'writing'],\n        favoriteQuote: 'Poetry is the spontaneous overflow of powerful feelings.',\n        createdAt: new Date() \n      },\n      userRequested: false\n    },\n    {\n      id: 'r4',\n      title: 'Literary Walking Tour',\n      description: 'Explore San Francisco through the lens of famous authors who lived and wrote here. Visit landmarks and get inspired.',\n      datetime: new Date(Date.now() + 9 * 24 * 60 * 60 * 1000),\n      location: 'Starting at Jack Kerouac Alley, North Beach',\n      maxParticipants: 12,\n      currentParticipants: 6,\n      vibes: ['Educational', 'Walking', 'Historical', 'Reading'],\n      image: 'https://images.unsplash.com/photo-1519677584237-752f8853252e?auto=format&fit=crop&w=800&h=400',\n      createdAt: new Date(),\n      duration: '180',\n      hostId: 'r4h',\n      participantIds: ['r4p1', 'r4p2', 'r4p3'],\n      host: { \n        id: 'r4h', \n        name: 'Julian', \n        username: 'julian_lit',\n        email: 'julian@example.com', \n        age: 36,\n        location: 'San Francisco',\n        avatar: 'https://images.unsplash.com/photo-1492562080023-ab3db95bfbce?w=150&h=150&fit=crop&crop=face',\n        unalonScore: 89,\n        interests: ['literature', 'history', 'walking tours'],\n        favoriteQuote: 'A good book is an event in my life.',\n        createdAt: new Date() \n      },\n      userRequested: false\n    },\n    {\n      id: 'r5',\n      title: 'Mystery Novel Book Club',\n      description: 'Join fellow mystery enthusiasts to discuss classic and contemporary detective fiction. This month we\\'re reading \"The Thursday Murder Club\" by Richard Osman.',\n      datetime: new Date(Date.now() + 5 * 24 * 60 * 60 * 1000),\n      location: 'Dog Eared Books, Castro',\n      maxParticipants: 18,\n      currentParticipants: 10,\n      vibes: ['Mystery', 'Discussion', 'Analytical', 'Reading'],\n      image: 'https://images.unsplash.com/photo-1587876931567-564ce588bfbd?auto=format&fit=crop&w=800&h=400',\n      createdAt: new Date(),\n      duration: '150',\n      hostId: 'r5h',\n      participantIds: ['r5p1', 'r5p2', 'r5p3'],\n      host: { \n        id: 'r5h', \n        name: 'Victor', \n        username: 'victor_mystery',\n        email: 'victor@example.com', \n        age: 42,\n        location: 'San Francisco',\n        avatar: 'https://images.unsplash.com/photo-1506794778202-cad84cf45f1d?w=150&h=150&fit=crop&crop=face',\n        unalonScore: 88,\n        interests: ['mystery novels', 'crime fiction', 'reading'],\n        favoriteQuote: 'The world is full of obvious things which nobody by any chance ever observes.',\n        createdAt: new Date() \n      },\n      userRequested: false\n    },\n    {\n      id: 'r6',\n      title: 'Manga & Graphic Novel Exchange',\n      description: 'Trade your favorite manga and graphic novels with other enthusiasts. Discover new series and discuss art styles and storytelling techniques.',\n      datetime: new Date(Date.now() + 3 * 24 * 60 * 60 * 1000),\n      location: 'Comix Experience, Divisadero St',\n      maxParticipants: 20,\n      currentParticipants: 14,\n      vibes: ['Manga', 'Comics', 'Artistic', 'Reading'],\n      image: 'https://images.unsplash.com/photo-1608231387042-66d1773070a5?auto=format&fit=crop&w=800&h=400',\n      createdAt: new Date(),\n      duration: '180',\n      hostId: 'r6h',\n      participantIds: ['r6p1', 'r6p2', 'r6p3'],\n      host: { \n        id: 'r6h', \n        name: 'Yuki', \n        username: 'yuki_manga',\n        email: 'yuki@example.com', \n        age: 25,\n        location: 'San Francisco',\n        avatar: 'https://images.unsplash.com/photo-1544005313-94ddf0286df2?w=150&h=150&fit=crop&crop=face',\n        unalonScore: 96,\n        interests: ['manga', 'anime', 'illustration'],\n        favoriteQuote: 'Manga is the literature of our time.',\n        createdAt: new Date() \n      },\n      userRequested: false\n    },\n    \n    // Music Category Events\n    {\n      id: '2',\n      title: 'Acoustic Guitar Jam Session',\n      description: 'Bring your guitar and join our acoustic music session. All skill levels welcome!',\n      datetime: new Date(Date.now() + 2 * 24 * 60 * 60 * 1000), // Day after tomorrow\n      location: 'Music Studio Downtown',\n      maxParticipants: 10,\n      currentParticipants: 5,\n      vibes: ['Creative', 'Musical', 'Collaborative', 'Music'],\n      image: 'https://images.unsplash.com/photo-1511379938547-c1f69419868d?auto=format&fit=crop&w=800&h=400',\n      createdAt: new Date(),\n      duration: '180',\n      hostId: '2',\n      participantIds: ['2', '4', '5'],\n      host: { \n        id: '2', \n        name: 'Marcus', \n        username: 'marcus_music',\n        email: 'marcus@example.com', \n        age: 32,\n        location: 'Oakland',\n        avatar: 'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=150&h=150&fit=crop&crop=face',\n        unalonScore: 88,\n        interests: ['music', 'guitar', 'jamming'],\n        favoriteQuote: 'Music is the universal language.',\n        createdAt: new Date() \n      },\n      userRequested: false\n    },\n    {\n      id: '4',\n      title: 'Jazz Band Practice',\n      description: 'Weekly jazz band practice. Saxophone, trumpet, piano, and drums welcome!',\n      datetime: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000),\n      location: 'Community Music Center',\n      maxParticipants: 8,\n      currentParticipants: 4,\n      vibes: ['Jazz', 'Professional', 'Weekly', 'Music'],\n      image: 'https://images.unsplash.com/photo-1516280440614-37939bbacd81?auto=format&fit=crop&w=800&h=400',\n      createdAt: new Date(),\n      duration: '240',\n      hostId: '4',\n      participantIds: ['4', '8', '9'],\n      host: { \n        id: '4', \n        name: 'David', \n        username: 'david_jazz',\n        email: 'david@example.com', \n        age: 35,\n        location: 'San Jose',\n        avatar: 'https://images.unsplash.com/photo-1506794778202-cad84cf45f1d?w=150&h=150&fit=crop&crop=face',\n        unalonScore: 87,\n        interests: ['jazz', 'saxophone', 'music'],\n        favoriteQuote: 'Jazz is the only music in which the same note is played differently every time.',\n        createdAt: new Date() \n      },\n      userRequested: false\n    },\n    {\n      id: 'm1',\n      title: 'Vinyl Listening Party',\n      description: 'Bring your favorite vinyl records to share with the group. We\\'ll have turntables set up and discuss the albums as we listen.',\n      datetime: new Date(Date.now() + 3 * 24 * 60 * 60 * 1000),\n      location: 'Amoeba Music, Haight Street',\n      maxParticipants: 12,\n      currentParticipants: 8,\n      vibes: ['Vinyl', 'Retro', 'Appreciation', 'Music'],\n      image: 'https://images.unsplash.com/photo-1461360228754-6e81c478b882?auto=format&fit=crop&w=800&h=400',\n      createdAt: new Date(),\n      duration: '180',\n      hostId: 'm1h',\n      participantIds: ['m1p1', 'm1p2', 'm1p3'],\n      host: { \n        id: 'm1h', \n        name: 'James', \n        username: 'james_vinyl',\n        email: 'james@example.com', \n        age: 33,\n        location: 'San Francisco',\n        avatar: 'https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=150&h=150&fit=crop&crop=face',\n        unalonScore: 90,\n        interests: ['vinyl records', 'music history', 'collecting'],\n        favoriteQuote: 'Music is the soundtrack of your life.',\n        createdAt: new Date() \n      },\n      userRequested: false\n    },\n    {\n      id: 'm2',\n      title: 'Electronic Music Production Workshop',\n      description: 'Learn the basics of electronic music production using Ableton Live. Bring your laptop with the software installed (trial version is fine).',\n      datetime: new Date(Date.now() + 5 * 24 * 60 * 60 * 1000),\n      location: 'Sound Arts Studio, SOMA',\n      maxParticipants: 10,\n      currentParticipants: 6,\n      vibes: ['Electronic', 'Production', 'Learning', 'Music'],\n      image: 'https://images.unsplash.com/photo-1470225620780-dba8ba36b745?auto=format&fit=crop&w=800&h=400',\n      createdAt: new Date(),\n      duration: '210',\n      hostId: 'm2h',\n      participantIds: ['m2p1', 'm2p2', 'm2p3'],\n      host: { \n        id: 'm2h', \n        name: 'Elena', \n        username: 'elena_beats',\n        email: 'elena@example.com', \n        age: 27,\n        location: 'San Francisco',\n        avatar: 'https://images.unsplash.com/photo-1544005313-94ddf0286df2?w=150&h=150&fit=crop&crop=face',\n        unalonScore: 93,\n        interests: ['electronic music', 'production', 'DJing'],\n        favoriteQuote: 'Electronic music is where technology meets creativity.',\n        createdAt: new Date() \n      },\n      userRequested: false\n    },\n    {\n      id: 'm3',\n      title: 'Classical Music Appreciation',\n      description: 'Join us for an evening of classical music appreciation. We\\'ll listen to selected works from Bach, Mozart, and Beethoven while discussing their historical context and musical innovations.',\n      datetime: new Date(Date.now() + 6 * 24 * 60 * 60 * 1000),\n      location: 'San Francisco Conservatory of Music',\n      maxParticipants: 15,\n      currentParticipants: 8,\n      vibes: ['Classical', 'Educational', 'Refined', 'Music'],\n      image: 'https://images.unsplash.com/photo-1507838153414-b4b713384a76?auto=format&fit=crop&w=800&h=400',\n      createdAt: new Date(),\n      duration: '150',\n      hostId: 'm3h',\n      participantIds: ['m3p1', 'm3p2', 'm3p3'],\n      host: { \n        id: 'm3h', \n        name: 'Robert', \n        username: 'robert_classical',\n        email: 'robert@example.com', \n        age: 45,\n        location: 'San Francisco',\n        avatar: 'https://images.unsplash.com/photo-1500648767791-00dcc994a43e?w=150&h=150&fit=crop&crop=face',\n        unalonScore: 94,\n        interests: ['classical music', 'music history', 'piano'],\n        favoriteQuote: 'Music is the universal language of mankind.',\n        createdAt: new Date() \n      },\n      userRequested: false\n    },\n    {\n      id: 'm4',\n      title: 'Jazz Club Night',\n      description: 'Experience the vibrant San Francisco jazz scene with fellow enthusiasts. We\\'ll visit a local jazz club to enjoy live performances from talented musicians.',\n      datetime: new Date(Date.now() + 4 * 24 * 60 * 60 * 1000),\n      location: 'Black Cat Jazz Club, Tenderloin',\n      maxParticipants: 12,\n      currentParticipants: 7,\n      vibes: ['Jazz', 'Nightlife', 'Social', 'Music'],\n      image: 'https://images.unsplash.com/photo-1415201364774-f6f0bb35f28f?auto=format&fit=crop&w=800&h=400',\n      createdAt: new Date(),\n      duration: '240',\n      hostId: 'm4h',\n      participantIds: ['m4p1', 'm4p2', 'm4p3'],\n      host: { \n        id: 'm4h', \n        name: 'Jasmine', \n        username: 'jasmine_jazz',\n        email: 'jasmine@example.com', \n        age: 31,\n        location: 'San Francisco',\n        avatar: 'https://images.unsplash.com/photo-1531123897727-8f129e1688ce?w=150&h=150&fit=crop&crop=face',\n        unalonScore: 92,\n        interests: ['jazz', 'live music', 'saxophone'],\n        favoriteQuote: 'Jazz is not just music, it\\'s a way of life.',\n        createdAt: new Date() \n      },\n      userRequested: false\n    },\n    {\n      id: 'm5',\n      title: 'Karaoke Night Extravaganza',\n      description: 'Show off your vocal talents or just have fun singing your favorite songs at our karaoke night. All singing abilities welcome!',\n      datetime: new Date(Date.now() + 3 * 24 * 60 * 60 * 1000),\n      location: 'Pandora Karaoke & Bar, SOMA',\n      maxParticipants: 20,\n      currentParticipants: 12,\n      vibes: ['Fun', 'Energetic', 'Social', 'Music'],\n      image: 'https://images.unsplash.com/photo-1516280440614-37939bbacd81?auto=format&fit=crop&w=800&h=400',\n      createdAt: new Date(),\n      duration: '180',\n      hostId: 'm5h',\n      participantIds: ['m5p1', 'm5p2', 'm5p3'],\n      host: { \n        id: 'm5h', \n        name: 'Carlos', \n        username: 'carlos_karaoke',\n        email: 'carlos@example.com', \n        age: 29,\n        location: 'San Francisco',\n        avatar: 'https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=150&h=150&fit=crop&crop=face',\n        unalonScore: 90,\n        interests: ['karaoke', 'pop music', 'singing'],\n        favoriteQuote: 'Life is a song - sing it!',\n        createdAt: new Date() \n      },\n      userRequested: false\n    },\n    {\n      id: 'm6',\n      title: 'Hip-Hop Dance Workshop',\n      description: 'Learn the fundamentals of hip-hop dance in this beginner-friendly workshop. We\\'ll cover basic moves, rhythm, and put together a short routine by the end.',\n      datetime: new Date(Date.now() + 2 * 24 * 60 * 60 * 1000),\n      location: 'City Dance Studios, SOMA',\n      maxParticipants: 15,\n      currentParticipants: 9,\n      vibes: ['Hip-Hop', 'Dance', 'Energetic', 'Music'],\n      image: 'https://images.unsplash.com/photo-1535525153412-5a42439a210d?auto=format&fit=crop&w=800&h=400',\n      createdAt: new Date(),\n      duration: '120',\n      hostId: 'm6h',\n      participantIds: ['m6p1', 'm6p2', 'm6p3'],\n      host: { \n        id: 'm6h', \n        name: 'Malik', \n        username: 'malik_moves',\n        email: 'malik@example.com', \n        age: 26,\n        location: 'San Francisco',\n        avatar: 'https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=150&h=150&fit=crop&crop=face',\n        unalonScore: 95,\n        interests: ['dance', 'hip-hop', 'choreography'],\n        favoriteQuote: 'Dance is the hidden language of the soul.',\n        createdAt: new Date() \n      },\n      userRequested: false\n    },\n    {\n      id: 'm7',\n      title: 'Songwriting Circle',\n      description: 'Join fellow songwriters to share works in progress, give and receive feedback, and collaborate on new music. All genres welcome!',\n      datetime: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000),\n      location: 'Bazaar Café, Richmond District',\n      maxParticipants: 10,\n      currentParticipants: 5,\n      vibes: ['Creative', 'Collaborative', 'Supportive', 'Music'],\n      image: 'https://images.unsplash.com/photo-1514320291840-2e0a9bf2a9ae?auto=format&fit=crop&w=800&h=400',\n      createdAt: new Date(),\n      duration: '180',\n      hostId: 'm7h',\n      participantIds: ['m7p1', 'm7p2', 'm7p3'],\n      host: { \n        id: 'm7h', \n        name: 'Sophia', \n        username: 'sophia_songs',\n        email: 'sophia@example.com', \n        age: 32,\n        location: 'San Francisco',\n        avatar: 'https://images.unsplash.com/photo-1544005313-94ddf0286df2?w=150&h=150&fit=crop&crop=face',\n        unalonScore: 91,\n        interests: ['songwriting', 'guitar', 'folk music'],\n        favoriteQuote: 'A song is never finished, only abandoned.',\n        createdAt: new Date() \n      },\n      userRequested: false\n    },\n    \n    // Reading Category Additional Events\n    {\n      id: 'r6',\n      title: 'Audiobook Listening Club',\n      description: 'Experience literature in a different way with our audiobook club. We\\'ll listen to excerpts together and discuss narration styles, voice acting, and how the audio format enhances the story.',\n      datetime: new Date(Date.now() + 6 * 24 * 60 * 60 * 1000),\n      location: 'Dolores Park, Mission District',\n      maxParticipants: 12,\n      currentParticipants: 7,\n      vibes: ['Relaxed', 'Outdoor', 'Discussion', 'Reading'],\n      image: 'https://images.unsplash.com/photo-1590602847861-f357a9332bbc?auto=format&fit=crop&w=800&h=400',\n      createdAt: new Date(),\n      duration: '120',\n      hostId: 'r6h',\n      participantIds: ['r6p1', 'r6p2', 'r6p3'],\n      host: { \n        id: 'r6h', \n        name: 'Marcus', \n        username: 'marcus_listens',\n        email: 'marcus@example.com', \n        age: 34,\n        location: 'San Francisco',\n        avatar: 'https://images.unsplash.com/photo-1506794778202-cad84cf45f1d?w=150&h=150&fit=crop&crop=face',\n        unalonScore: 89,\n        interests: ['audiobooks', 'podcasts', 'storytelling'],\n        favoriteQuote: 'To listen well is as powerful a means of influence as to talk well.',\n        createdAt: new Date() \n      },\n      userRequested: false\n    },\n    {\n      id: 'r7',\n      title: 'Children\\'s Book Author Meet-Up',\n      description: 'Connect with fellow children\\'s book authors and illustrators to share ideas, discuss publishing experiences, and potentially collaborate on future projects.',\n      datetime: new Date(Date.now() + 9 * 24 * 60 * 60 * 1000),\n      location: 'Green Apple Books, Richmond District',\n      maxParticipants: 15,\n      currentParticipants: 8,\n      vibes: ['Creative', 'Networking', 'Supportive', 'Reading'],\n      image: 'https://images.unsplash.com/photo-1512820790803-83ca734da794?auto=format&fit=crop&w=800&h=400',\n      createdAt: new Date(),\n      duration: '150',\n      hostId: 'r7h',\n      participantIds: ['r7p1', 'r7p2', 'r7p3'],\n      host: { \n        id: 'r7h', \n        name: 'Elena', \n        username: 'elena_illustrates',\n        email: 'elena@example.com', \n        age: 36,\n        location: 'San Francisco',\n        avatar: 'https://images.unsplash.com/photo-1487412720507-e7ab37603c6f?w=150&h=150&fit=crop&crop=face',\n        unalonScore: 94,\n        interests: ['illustration', 'children\\'s literature', 'publishing'],\n        favoriteQuote: 'The best children\\'s books live in the hearts of adults.',\n        createdAt: new Date() \n      },\n      userRequested: false\n    },\n    \n    // Coffee Category Events\n    {\n      id: '6',\n      title: 'Coffee & Code: JavaScript Workshop',\n      description: 'A relaxed morning session where we\\'ll dive deep into modern JavaScript concepts. Perfect for developers looking to sharpen their skills while enjoying great coffee. We\\'ll cover ES6+, async/await, and practical examples.',\n      datetime: new Date(Date.now() + 5 * 24 * 60 * 60 * 1000),\n      location: '456 Coffee Ave, Downtown',\n      maxParticipants: 15,\n      currentParticipants: 12,\n      vibes: ['Relaxed', 'Learning', 'Coffee', 'Tech'],\n      image: 'https://images.unsplash.com/photo-1495474472287-4d71bcdd2085?auto=format&fit=crop&w=800&h=400',\n      createdAt: new Date(),\n      duration: '120',\n      hostId: '6',\n      participantIds: ['6', '12', '13'],\n      host: { \n        id: '6', \n        name: 'Sarah', \n        username: 'sarah_dev',\n        email: 'sarah@example.com', \n        age: 26,\n        location: 'Oakland',\n        avatar: 'https://images.unsplash.com/photo-1494790108755-2616b612b786?w=150&h=150&fit=crop&crop=face',\n        unalonScore: 92,\n        interests: ['JavaScript', 'web development', 'coffee'],\n        favoriteQuote: 'Code is like humor. When you have to explain it, it\\'s bad.',\n        createdAt: new Date() \n      },\n      userRequested: false\n    },\n    {\n      id: 'c1',\n      title: 'Coffee Tasting Experience',\n      description: 'Sample a variety of single-origin coffees from around the world. Learn about different brewing methods and flavor profiles from expert baristas.',\n      datetime: new Date(Date.now() + 3 * 24 * 60 * 60 * 1000),\n      location: 'Ritual Coffee Roasters, Valencia Street',\n      maxParticipants: 12,\n      currentParticipants: 8,\n      vibes: ['Tasting', 'Educational', 'Relaxed', 'Coffee'],\n      image: 'https://images.unsplash.com/photo-1495474472287-4d71bcdd2085?auto=format&fit=crop&w=800&h=400',\n      createdAt: new Date(),\n      duration: '90',\n      hostId: 'c1h',\n      participantIds: ['c1p1', 'c1p2', 'c1p3'],\n      host: { \n        id: 'c1h', \n        name: 'Miguel', \n        username: 'miguel_barista',\n        email: 'miguel@example.com', \n        age: 30,\n        location: 'San Francisco',\n        avatar: 'https://images.unsplash.com/photo-1500648767791-00dcc994a43e?w=150&h=150&fit=crop&crop=face',\n        unalonScore: 96,\n        interests: ['coffee', 'brewing', 'roasting'],\n        favoriteQuote: 'Life begins after coffee.',\n        createdAt: new Date() \n      },\n      userRequested: false\n    },\n    {\n      id: 'c2',\n      title: 'Latte Art Workshop',\n      description: 'Learn the basics of creating beautiful latte art. This hands-on workshop will teach you techniques for hearts, rosettas, and more complex designs.',\n      datetime: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000),\n      location: 'Four Barrel Coffee, Mission District',\n      maxParticipants: 8,\n      currentParticipants: 5,\n      vibes: ['Creative', 'Hands-on', 'Skill-building', 'Coffee'],\n      image: 'https://images.unsplash.com/photo-1534040385115-33dcb3acba5b?auto=format&fit=crop&w=800&h=400',\n      createdAt: new Date(),\n      duration: '120',\n      hostId: 'c2h',\n      participantIds: ['c2p1', 'c2p2', 'c2p3'],\n      host: { \n        id: 'c2h', \n        name: 'Sophia', \n        username: 'sophia_latte',\n        email: 'sophia@example.com', \n        age: 28,\n        location: 'San Francisco',\n        avatar: 'https://images.unsplash.com/photo-1544005313-94ddf0286df2?w=150&h=150&fit=crop&crop=face',\n        unalonScore: 94,\n        interests: ['latte art', 'espresso', 'coffee'],\n        favoriteQuote: 'Coffee is my love language.',\n        createdAt: new Date() \n      },\n      userRequested: false\n    },\n    {\n      id: 'c3',\n      title: 'Coffee & Book Club',\n      description: 'A relaxed book discussion group that meets in a cozy cafe. This month we\\'re reading \"The Dutch House\" by Ann Patchett.',\n      datetime: new Date(Date.now() + 10 * 24 * 60 * 60 * 1000),\n      location: 'Sightglass Coffee, SOMA',\n      maxParticipants: 15,\n      currentParticipants: 9,\n      vibes: ['Literary', 'Discussion', 'Cozy', 'Coffee', 'Reading'],\n      image: 'https://images.unsplash.com/photo-1529148482759-b35b25c5f217?auto=format&fit=crop&w=800&h=400',\n      createdAt: new Date(),\n      duration: '150',\n      hostId: 'c3h',\n      participantIds: ['c3p1', 'c3p2', 'c3p3'],\n      host: { \n        id: 'c3h', \n        name: 'Daniel', \n        username: 'daniel_reads',\n        email: 'daniel@example.com', \n        age: 26,\n        location: 'Oakland',\n        avatar: 'https://images.unsplash.com/photo-1494790108755-2616b612b786?w=150&h=150&fit=crop&crop=face',\n        unalonScore: 92,\n        interests: ['JavaScript', 'web development', 'coffee'],\n        favoriteQuote: 'Code is like humor. When you have to explain it, it\\'s bad.',\n        createdAt: new Date() \n      },\n      userRequested: false\n    },\n    {\n      id: 'c4',\n      title: 'Home Coffee Roasting Workshop',\n      description: 'Learn how to roast your own coffee beans at home using simple equipment. We\\'ll cover different roasting levels, cooling techniques, and how to store your freshly roasted beans.',\n      datetime: new Date(Date.now() + 8 * 24 * 60 * 60 * 1000),\n      location: 'Andytown Coffee Roasters, Outer Sunset',\n      maxParticipants: 10,\n      currentParticipants: 6,\n      vibes: ['DIY', 'Educational', 'Artisanal', 'Coffee'],\n      image: 'https://images.unsplash.com/photo-1611854779393-1b2da9d400fe?auto=format&fit=crop&w=800&h=400',\n      createdAt: new Date(),\n      duration: '180',\n      hostId: 'c4h',\n      participantIds: ['c4p1', 'c4p2', 'c4p3'],\n      host: { \n        id: 'c4h', \n        name: 'Raj', \n        username: 'raj_roasts',\n        email: 'raj@example.com', \n        age: 35,\n        location: 'San Francisco',\n        avatar: 'https://images.unsplash.com/photo-1500648767791-00dcc994a43e?w=150&h=150&fit=crop&crop=face',\n        unalonScore: 93,\n        interests: ['coffee roasting', 'specialty coffee', 'sustainability'],\n        favoriteQuote: 'Life is too short for bad coffee.',\n        createdAt: new Date() \n      },\n      userRequested: false\n    },\n    {\n      id: 'c5',\n      title: 'Coffee Shop Entrepreneurs Meetup',\n      description: 'A networking event for current and aspiring coffee shop owners. Share experiences, discuss business challenges, and learn from industry veterans.',\n      datetime: new Date(Date.now() + 12 * 24 * 60 * 60 * 1000),\n      location: 'Equator Coffees, Fort Mason',\n      maxParticipants: 20,\n      currentParticipants: 14,\n      vibes: ['Networking', 'Business', 'Entrepreneurial', 'Coffee'],\n      image: 'https://images.unsplash.com/photo-1600093463592-8e36ae95ef56?auto=format&fit=crop&w=800&h=400',\n      createdAt: new Date(),\n      duration: '150',\n      hostId: 'c5h',\n      participantIds: ['c5p1', 'c5p2', 'c5p3'],\n      host: { \n        id: 'c5h', \n        name: 'Amara', \n        username: 'amara_cafe',\n        email: 'amara@example.com', \n        age: 38,\n        location: 'San Francisco',\n        avatar: 'https://images.unsplash.com/photo-1487412720507-e7ab37603c6f?w=150&h=150&fit=crop&crop=face',\n        unalonScore: 97,\n        interests: ['cafe management', 'coffee industry', 'small business'],\n        favoriteQuote: 'Behind every successful person is a substantial amount of coffee.',\n        createdAt: new Date() \n      },\n      userRequested: false\n    },\n    {\n      id: '7',\n      title: 'Yoga & Meditation Session',\n      description: 'Start your day with a peaceful yoga and meditation session. All levels welcome, from beginners to advanced practitioners. We\\'ll focus on mindfulness and inner peace.',\n      datetime: new Date(Date.now() + 6 * 24 * 60 * 60 * 1000),\n      location: 'Zen Garden Studio',\n      maxParticipants: 20,\n      currentParticipants: 15,\n      vibes: ['Peaceful', 'Wellness', 'Mindful'],\n      image: 'https://images.unsplash.com/photo-1544367567-0f2fcb009e0b?auto=format&fit=crop&w=800&h=400',\n      createdAt: new Date(),\n      duration: '90',\n      hostId: '7',\n      participantIds: ['7', '14', '15'],\n      host: { \n        id: '7', \n        name: 'Maya', \n        username: 'maya_yoga',\n        email: 'maya@example.com', \n        age: 30,\n        location: 'Berkeley',\n        avatar: 'https://images.unsplash.com/photo-1544005313-94ddf0286df2?w=150&h=150&fit=crop&crop=face',\n        unalonScore: 89,\n        interests: ['yoga', 'meditation', 'wellness'],\n        favoriteQuote: 'Peace comes from within. Do not seek it without.',\n        createdAt: new Date() \n      },\n      userRequested: false\n    },\n    {\n      id: '8',\n      title: 'Photography Walk: Golden Gate Bridge',\n      description: 'Join us for a photography walk around the iconic Golden Gate Bridge. Capture stunning shots and learn photography techniques from experienced photographers.',\n      datetime: new Date(Date.now() + 8 * 24 * 60 * 60 * 1000),\n      location: 'Golden Gate Bridge',\n      maxParticipants: 12,\n      currentParticipants: 9,\n      vibes: ['Creative', 'Outdoor', 'Photography'],\n      image: 'https://images.unsplash.com/photo-1506905925346-21bda4d32df4?auto=format&fit=crop&w=800&h=400',\n      createdAt: new Date(),\n      duration: '150',\n      hostId: '8',\n      participantIds: ['8', '16', '17'],\n      host: { \n        id: '8', \n        name: 'Alex', \n        username: 'alex_photo',\n        email: 'alex@example.com', \n        age: 27,\n        location: 'San Francisco',\n        avatar: 'https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=150&h=150&fit=crop&crop=face',\n        unalonScore: 91,\n        interests: ['photography', 'travel', 'art'],\n        favoriteQuote: 'Photography is the art of making memories tangible.',\n        createdAt: new Date() \n      },\n      userRequested: false\n    }\n  ];\n\n  // Use sample activities if no data from API\n  const displayActivities = activities.length > 0 ? activities : sampleActivities;\n  \n  // Log all activities with their vibes for debugging\n  console.log('All available activities:');\n  sampleActivities.forEach(activity => {\n    console.log(`Activity: ${activity.title}, Vibes:`, activity.vibes);\n  });\n  \n  // Debug log for reading and music activities\n  console.log('Reading activities:');\n  const readingActivities = sampleActivities.filter(activity => {\n    if (activity.vibes && activity.vibes.length > 0) {\n      return activity.vibes.some(vibe => {\n        const vibeText = vibe.toLowerCase();\n        return vibeText === 'reading' || \n               vibe === 'Reading' || \n               vibeText.includes('reading') || \n               vibeText.includes('book') || \n               vibeText.includes('literary') || \n               vibeText.includes('poetry') || \n               vibeText.includes('novel');\n      });\n    }\n    return false;\n  });\n  readingActivities.forEach(activity => {\n    console.log(`Reading Activity: ${activity.title}, Vibes:`, activity.vibes);\n  });\n  \n  console.log('Music activities:');\n  const musicActivities = sampleActivities.filter(activity => {\n    if (activity.vibes && activity.vibes.length > 0) {\n      return activity.vibes.some(vibe => {\n        const vibeText = vibe.toLowerCase();\n        return vibeText === 'music' || \n               vibe === 'Music' || \n               vibeText.includes('music') || \n               vibeText.includes('jazz') || \n               vibeText.includes('band') || \n               vibeText.includes('guitar') ||\n               vibeText.includes('song') ||\n               vibeText.includes('hip-hop') ||\n               vibeText.includes('karaoke');\n      });\n    }\n    return false;\n  });\n  musicActivities.forEach(activity => {\n    console.log(`Music Activity: ${activity.title}, Vibes:`, activity.vibes);\n  });\n\n  // Sample attendees data for demonstration\n  const sampleAttendees = [\n    { id: '1', name: 'Alex Chen', avatar: 'https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=150&h=150&fit=crop&crop=face' },\n    { id: '2', name: 'Sarah Kim', avatar: 'https://images.unsplash.com/photo-1494790108755-2616b612b786?w=150&h=150&fit=crop&crop=face' },\n    { id: '3', name: 'Mike Johnson', avatar: 'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=150&h=150&fit=crop&crop=face' },\n    { id: '4', name: 'Emma Wilson', avatar: 'https://images.unsplash.com/photo-1438761681033-6461ffad8d80?w=150&h=150&fit=crop&crop=face' },\n  ];\n\n  // Filter and sort activities\n  const filteredAndSortedActivities = displayActivities\n    .filter(activity => {\n      // Search filter\n      if (searchQuery) {\n        const searchText = searchQuery.toLowerCase();\n        const activityText = `${activity.title} ${activity.description} ${activity.location}`.toLowerCase();\n        if (!activityText.includes(searchText)) {\n          return false;\n        }\n      }\n\n      // Hobby filter\n      if (selectedHobby) {\n        console.log('Filtering for hobby:', selectedHobby);\n        console.log('Activity:', activity.title, 'Vibes:', activity.vibes);\n        \n        const hobbyKeywords = {\n          reading: ['book', 'reading', 'study', 'library', 'cafe', 'literary', 'poetry', 'novel', 'literature'],\n          studying: ['study', 'academic', 'library', 'cafe', 'coffee'],\n          coffee: ['coffee', 'cafe', 'roastery', 'espresso'],\n          sports: ['sport', 'fitness', 'gym', 'running', 'basketball'],\n          music: ['music', 'concert', 'band', 'guitar', 'piano', 'jazz', 'karaoke', 'song', 'singing'],\n          art: ['art', 'painting', 'gallery', 'museum', 'creative'],\n          food: ['food', 'restaurant', 'cooking', 'dining', 'lunch'],\n          travel: ['travel', 'hiking', 'adventure', 'explore', 'trip']\n        };\n        \n        const keywords = hobbyKeywords[selectedHobby];\n        const activityText = `${activity.title} ${activity.description}`.toLowerCase();\n        \n        // Check if the activity has the selected hobby in its vibes array\n        let hasHobbyVibe = false;\n        \n        if (activity.vibes && activity.vibes.length > 0) {\n          // For Reading and Music, we need to be more inclusive with the matching\n          if (selectedHobby === 'reading') {\n            hasHobbyVibe = activity.vibes.some(vibe => {\n              const vibeText = vibe.toLowerCase();\n              return vibeText === 'reading' || \n                     vibe === 'Reading' || \n                     vibeText.includes('reading') || \n                     vibeText.includes('book') || \n                     vibeText.includes('literary') || \n                     vibeText.includes('poetry') || \n                     vibeText.includes('novel');\n            });\n            if (hasHobbyVibe) {\n              console.log('Reading match found for', activity.title, 'with vibes', activity.vibes);\n            }\n          } else if (selectedHobby === 'music') {\n            hasHobbyVibe = activity.vibes.some(vibe => {\n              const vibeText = vibe.toLowerCase();\n              return vibeText === 'music' || \n                     vibe === 'Music' || \n                     vibeText.includes('music') || \n                     vibeText.includes('jazz') || \n                     vibeText.includes('band') || \n                     vibeText.includes('guitar') ||\n                     vibeText.includes('song') ||\n                     vibeText.includes('hip-hop') ||\n                     vibeText.includes('karaoke');\n            });\n            if (hasHobbyVibe) {\n              console.log('Music match found for', activity.title, 'with vibes', activity.vibes);\n            }\n          } else if (selectedHobby === 'coffee') {\n            hasHobbyVibe = activity.vibes.some(vibe => {\n              const vibeText = vibe.toLowerCase();\n              return vibeText === 'coffee' || \n                     vibe === 'Coffee' || \n                     vibeText.includes('coffee') || \n                     vibeText.includes('cafe');\n            });\n            if (hasHobbyVibe) {\n              console.log('Coffee match found for', activity.title, 'with vibes', activity.vibes);\n            }\n          } else {\n            // For other hobbies, use the original logic\n            for (const vibe of activity.vibes) {\n              const vibeText = vibe.toLowerCase();\n              const selectedHobbyLower = selectedHobby.toLowerCase();\n              \n              // Direct match with hobby name\n              if (vibeText === selectedHobbyLower || vibeText.includes(selectedHobbyLower)) {\n                console.log('Direct match found for', activity.title, 'with vibe', vibe);\n                hasHobbyVibe = true;\n                break;\n              }\n            }\n          }\n        }\n        \n        // Check if any keyword matches\n        const keywordMatch = keywords.some(keyword => activityText.includes(keyword));\n        if (keywordMatch) {\n          console.log('Keyword match found for', activity.title);\n        }\n        \n        // Return true if either the activity text contains a keyword or the vibes include the hobby\n        return keywordMatch || hasHobbyVibe;\n      }\n\n      // Time filter\n      if (filterOption === 'today') {\n        const today = new Date();\n        const activityDate = new Date(activity.datetime);\n        return activityDate.toDateString() === today.toDateString();\n      }\n      if (filterOption === 'tomorrow') {\n        const tomorrow = new Date();\n        tomorrow.setDate(tomorrow.getDate() + 1);\n        const activityDate = new Date(activity.datetime);\n        return activityDate.toDateString() === tomorrow.toDateString();\n      }\n      if (filterOption === 'week') {\n        const weekFromNow = new Date();\n        weekFromNow.setDate(weekFromNow.getDate() + 7);\n        const activityDate = new Date(activity.datetime);\n        return activityDate <= weekFromNow;\n      }\n\n      // Location filter\n      if (locationFilter && !activity.location.toLowerCase().includes(locationFilter.toLowerCase())) {\n        return false;\n      }\n\n      return true;\n    })\n    .sort((a, b) => {\n      switch (sortBy) {\n        case 'date':\n          return new Date(a.datetime).getTime() - new Date(b.datetime).getTime();\n        case 'popularity':\n          return (b.currentParticipants || 0) - (a.currentParticipants || 0);\n        case 'spots':\n          return (a.maxParticipants - (a.currentParticipants || 0)) - (b.maxParticipants - (b.currentParticipants || 0));\n        default:\n          return 0;\n      }\n    });\n\n  const handleFilterClick = (filterType: FilterType) => {\n    setActiveFilter(activeFilter === filterType ? null : filterType);\n  };\n\n  const handleHobbyClick = (hobby: HobbyType) => {\n    const newHobby = selectedHobby === hobby ? null : hobby;\n    console.log('Selected hobby:', newHobby);\n    console.log('All activities count:', sampleActivities.length);\n    \n    // Log all activities with their vibes for debugging\n    console.log('All activities with vibes:');\n    sampleActivities.forEach(activity => {\n      console.log(`Activity: ${activity.title}, Vibes:`, activity.vibes);\n    });\n    \n    // Check which activities match the selected hobby\n    const matchingActivities = sampleActivities.filter(activity => {\n      if (!newHobby) return true;\n      \n      const hobbyKeywords = {\n        reading: ['book', 'reading', 'study', 'library', 'cafe', 'literary', 'poetry', 'novel', 'literature'],\n        studying: ['study', 'academic', 'library', 'cafe', 'coffee'],\n        coffee: ['coffee', 'cafe', 'roastery', 'espresso'],\n        sports: ['sport', 'fitness', 'gym', 'running', 'basketball'],\n        music: ['music', 'concert', 'band', 'guitar', 'piano', 'jazz', 'karaoke', 'song', 'singing'],\n        art: ['art', 'painting', 'gallery', 'museum', 'creative'],\n        food: ['food', 'restaurant', 'cooking', 'dining', 'lunch'],\n        travel: ['travel', 'hiking', 'adventure', 'explore', 'trip']\n      };\n      \n      const keywords = hobbyKeywords[newHobby];\n      const activityText = `${activity.title} ${activity.description}`.toLowerCase();\n      \n      // Check if the activity has the selected hobby in its vibes array\n      let hasHobbyVibe = false;\n      \n      if (activity.vibes && activity.vibes.length > 0) {\n        console.log(`Checking vibes for ${activity.title}:`, activity.vibes);\n        \n        // For Reading and Music, we need to be more inclusive with the matching\n        if (newHobby === 'reading') {\n          hasHobbyVibe = activity.vibes.some(vibe => {\n            const vibeText = vibe.toLowerCase();\n            return vibeText === 'reading' || \n                   vibe === 'Reading' || \n                   vibeText.includes('reading') || \n                   vibeText.includes('book') || \n                   vibeText.includes('literary') || \n                   vibeText.includes('poetry') || \n                   vibeText.includes('novel');\n          });\n          if (hasHobbyVibe) {\n            console.log(`Reading match found for ${activity.title} with vibes`, activity.vibes);\n          }\n        } else if (newHobby === 'music') {\n          hasHobbyVibe = activity.vibes.some(vibe => {\n            const vibeText = vibe.toLowerCase();\n            return vibeText === 'music' || \n                   vibe === 'Music' || \n                   vibeText.includes('music') || \n                   vibeText.includes('jazz') || \n                   vibeText.includes('band') || \n                   vibeText.includes('guitar') ||\n                   vibeText.includes('song') ||\n                   vibeText.includes('hip-hop') ||\n                   vibeText.includes('karaoke');\n          });\n          if (hasHobbyVibe) {\n            console.log(`Music match found for ${activity.title} with vibes`, activity.vibes);\n          }\n        } else if (newHobby === 'coffee') {\n          hasHobbyVibe = activity.vibes.some(vibe => {\n            const vibeText = vibe.toLowerCase();\n            return vibeText === 'coffee' || vibe === 'Coffee' || vibeText.includes('coffee') || vibeText.includes('cafe');\n          });\n          if (hasHobbyVibe) {\n            console.log(`Coffee match found for ${activity.title} with vibes`, activity.vibes);\n          }\n        } else {\n          // For other hobbies, use the original logic\n          for (const vibe of activity.vibes) {\n            const vibeText = vibe.toLowerCase();\n            const selectedHobbyLower = newHobby.toLowerCase();\n            \n            console.log(`Comparing vibe '${vibe}' with hobby '${newHobby}'`);\n            \n            // Direct match with hobby name\n            if (vibeText === selectedHobbyLower || vibeText.includes(selectedHobbyLower)) {\n              console.log(`Direct match found for ${activity.title} with vibe ${vibe}`);\n              hasHobbyVibe = true;\n              break;\n            }\n          }\n        }\n      }\n      \n      // Check if any keyword matches\n      const keywordMatch = keywords.some(keyword => activityText.includes(keyword));\n      if (keywordMatch) {\n        console.log(`Keyword match found for ${activity.title}`);\n      }\n      \n      // Return true if either the activity text contains a keyword or the vibes include the hobby\n      return keywordMatch || hasHobbyVibe;\n    });\n    \n    console.log('Matching activities count:', matchingActivities.length);\n    console.log('Matching activities:', matchingActivities.map(a => a.title));\n    \n    setSelectedHobby(newHobby);\n    setActiveFilter(null);\n  };\n\n  const handleFilterOptionClick = (option: FilterOption) => {\n    setFilterOption(filterOption === option ? null : option);\n    setActiveFilter(null);\n  };\n\n  const clearFilters = () => {\n    setSelectedHobby(null);\n    setFilterOption(null);\n    setDistanceFilter('');\n    setLocationFilter('');\n    setActiveFilter(null);\n  };\n\n  const [requestedActivities, setRequestedActivities] = useState<Set<string>>(new Set());\n\n  const requestToJoinMutation = useMutation({\n    mutationFn: async (activityId: string) => {\n      const response = await apiRequest('POST', `/api/activities/${activityId}/request`);\n      return await response.json();\n    },\n    onSuccess: (_, activityId) => {\n      // State is already updated in handleRequestToJoin, just show success toast\n      toast({ title: \"Request sent!\", description: \"The host will review your request.\" });\n    },\n    onError: (error: any) => {\n      // If request fails, remove from requested activities\n      setRequestedActivities(prev => {\n        const newSet = new Set(Array.from(prev));\n        newSet.delete(error.activityId || 'unknown');\n        return newSet;\n      });\n      \n      toast({ \n        title: \"Request failed\", \n        description: error.message || \"Could not send request\",\n        variant: \"destructive\" \n      });\n    },\n  });\n\n  const handleRequestToJoin = (activityId: string) => {\n    // Always update local state to show \"Requested\"\n    setRequestedActivities(prev => new Set(Array.from(prev).concat(activityId)));\n  };\n\n  const handleHostClick = (host: User) => {\n    toast({ \n      title: `${host.name}'s Profile`, \n      description: `Email: ${host.email}\\nMember since: ${host.createdAt ? new Date(host.createdAt).toLocaleDateString() : 'Unknown'}` \n    });\n  };\n\n  const handleAttendeesClick = (activityId: string) => {\n    setShowAttendeesDropdown(showAttendeesDropdown === activityId ? null : activityId);\n  };\n\n  const formatDateTime = (datetime: string | Date) => {\n    const date = new Date(datetime);\n    const now = new Date();\n    const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n    const tomorrow = new Date(today);\n    tomorrow.setDate(tomorrow.getDate() + 1);\n    const activityDate = new Date(date.getFullYear(), date.getMonth(), date.getDate());\n\n    let dayLabel = '';\n    if (activityDate.getTime() === today.getTime()) {\n      dayLabel = 'Today';\n    } else if (activityDate.getTime() === tomorrow.getTime()) {\n      dayLabel = 'Tomorrow';\n    } else {\n      dayLabel = date.toLocaleDateString('en-US', { weekday: 'long' });\n    }\n\n    const timeLabel = date.toLocaleTimeString('en-US', { \n      hour: 'numeric', \n      minute: '2-digit',\n      hour12: true \n    });\n\n    return `${dayLabel}, ${timeLabel}`;\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"p-4 overflow-y-auto bg-unalon-50\">\n        <div className=\"space-y-6\">\n          {[1, 2, 3].map((i) => (\n            <div key={i} className=\"bg-white rounded-2xl p-4 border border-unalon-200 animate-pulse shadow-sm\">\n              <div className=\"flex items-start justify-between\">\n                <div className=\"flex-1\">\n                  <div className=\"h-6 bg-unalon-200 rounded mb-2\"></div>\n                  <div className=\"h-4 bg-unalon-200 rounded mb-2 w-3/4\"></div>\n                  <div className=\"h-4 bg-unalon-200 rounded w-1/2\"></div>\n                </div>\n                <div className=\"w-24 h-24 bg-unalon-200 rounded-xl ml-4\"></div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n\n  // Log filtered activities for debugging\n  console.log('Rendering with filtered activities:', filteredAndSortedActivities);\n  \n  return (\n    <div className=\"p-4 overflow-y-auto bg-unalon-50 min-h-screen\">\n      {/* Filter Buttons */}\n      <div className=\"flex space-x-2 mb-6 overflow-x-auto pb-2 scrollbar-hide\">\n        <button \n          onClick={() => handleHobbyClick('reading')}\n          className={`px-4 py-2 rounded-full whitespace-nowrap transition-all duration-300 cubic-bezier(0.4, 0, 0.2, 1) border hover:scale-105 active:scale-95 ${\n            selectedHobby === 'reading' \n              ? 'bg-unalon-500 text-white border-unalon-500' \n              : 'bg-white text-unalon-700 border-unalon-300 hover:bg-unalon-100'\n          }`}\n        >\n          📚 Reading\n        </button>\n        <button \n          onClick={() => handleHobbyClick('coffee')}\n          className={`px-4 py-2 rounded-full whitespace-nowrap transition-all duration-300 cubic-bezier(0.4, 0, 0.2, 1) border hover:scale-105 active:scale-95 ${\n            selectedHobby === 'coffee' \n              ? 'bg-unalon-500 text-white border-unalon-500' \n              : 'bg-white text-unalon-700 border-unalon-300 hover:bg-unalon-100'\n          }`}\n        >\n          ☕ Coffee\n        </button>\n        <button \n          onClick={() => handleHobbyClick('music')}\n          className={`px-4 py-2 rounded-full whitespace-nowrap transition-all duration-300 cubic-bezier(0.4, 0, 0.2, 1) border hover:scale-105 active:scale-95 ${\n            selectedHobby === 'music' \n              ? 'bg-unalon-500 text-white border-unalon-500' \n              : 'bg-white text-unalon-700 border-unalon-300 hover:bg-unalon-100'\n          }`}\n        >\n          🎵 Music\n        </button>\n        <button \n          onClick={() => handleFilterClick('filter')}\n          className={`flex items-center space-x-1 px-4 py-2 rounded-full whitespace-nowrap transition-all duration-300 cubic-bezier(0.4, 0, 0.2, 1) border hover:scale-105 active:scale-95 ${\n            activeFilter === 'filter' \n              ? 'bg-unalon-500 text-white border-unalon-500' \n              : 'bg-white text-unalon-700 border-unalon-300 hover:bg-unalon-100'\n          }`}\n        >\n          <span className=\"material-icons text-sm\">filter_list</span>\n          <span className=\"font-medium\">Filter by</span>\n          <span className=\"material-icons text-sm\">expand_more</span>\n        </button>\n\n        {(selectedHobby || filterOption || distanceFilter || locationFilter) && (\n          <button \n            onClick={clearFilters}\n            className=\"px-4 py-2 rounded-full whitespace-nowrap transition-all duration-300 cubic-bezier(0.4, 0, 0.2, 1) border hover:scale-105 active:scale-95 bg-unalon-100 text-unalon-700 border-unalon-300 hover:bg-unalon-200\"\n          >\n            Clear\n          </button>\n        )}\n      </div>\n\n      {/* Filter Dropdowns */}\n      {activeFilter === 'hobbies' && (\n        <div className=\"mb-4 p-4 bg-white rounded-2xl shadow-lg border border-unalon-200\">\n          <div className=\"grid grid-cols-2 gap-2\">\n            {(['reading', 'studying', 'coffee', 'sports', 'music', 'art', 'food', 'travel'] as HobbyType[]).map((hobby) => (\n              <button\n                key={hobby}\n                onClick={() => handleHobbyClick(hobby)}\n                className={`p-3 rounded-xl text-sm font-medium transition-all duration-200 ${\n                  selectedHobby === hobby\n                    ? 'bg-unalon-500 text-white'\n                    : 'bg-unalon-50 text-unalon-700 hover:bg-unalon-100'\n                }`}\n              >\n                {hobby.charAt(0).toUpperCase() + hobby.slice(1)}\n              </button>\n            ))}\n          </div>\n        </div>\n      )}\n\n             {activeFilter === 'filter' && (\n         <div className=\"mb-4 p-4 bg-white rounded-2xl shadow-lg border border-unalon-200\">\n           <div className=\"space-y-3\">\n             <div>\n               <h3 className=\"text-sm font-medium text-unalon-700 mb-2\">Time</h3>\n               <div className=\"flex space-x-2\">\n                 {(['today', 'tomorrow', 'week'] as FilterOption[]).map((option) => (\n                   <button\n                     key={option}\n                     onClick={() => handleFilterOptionClick(option)}\n                     className={`px-3 py-2 rounded-lg text-sm transition-all duration-200 ${\n                       filterOption === option\n                         ? 'bg-unalon-500 text-white'\n                         : 'bg-unalon-50 text-unalon-700 hover:bg-unalon-100'\n                     }`}\n                   >\n                     {option.charAt(0).toUpperCase() + option.slice(1)}\n                   </button>\n                 ))}\n               </div>\n             </div>\n                         <div>\n              <div className=\"flex justify-between items-center mb-2\">\n                <h3 className=\"text-sm font-medium text-unalon-700\">Distance</h3>\n                <span className=\"text-sm text-unalon-600\">{distanceFilter || '10'}km</span>\n              </div>\n              <div className=\"space-y-2\">\n                <input\n                  type=\"range\"\n                  min=\"0\"\n                  max=\"50\"\n                  value={distanceFilter || '10'}\n                  onChange={(e) => setDistanceFilter(e.target.value)}\n                  className=\"w-full h-2 bg-unalon-200 rounded-lg appearance-none cursor-pointer slider\"\n                />\n                <div className=\"flex justify-between text-xs text-unalon-500\">\n                  <span>0km</span>\n                  <span>50km</span>\n                </div>\n              </div>\n            </div>\n             <div>\n               <h3 className=\"text-sm font-medium text-unalon-700 mb-2\">Location</h3>\n               <input\n                 type=\"text\"\n                 placeholder=\"Enter location\"\n                 value={locationFilter}\n                 onChange={(e) => setLocationFilter(e.target.value)}\n                 className=\"w-full px-3 py-2 border border-unalon-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-unalon-400\"\n               />\n             </div>\n           </div>\n         </div>\n       )}\n\n\n\n              {/* Activities List */}\n        <div className=\"space-y-4\">\n          {filteredAndSortedActivities.length === 0 ? (\n            <div className=\"bg-white rounded-2xl p-6 border border-unalon-200 shadow-sm text-center\">\n              <h3 className=\"text-lg font-semibold text-unalon-700 mb-2\">No activities found</h3>\n              <p className=\"text-unalon-600\">Try adjusting your filters or search criteria</p>\n            </div>\n          ) : (\n            filteredAndSortedActivities.map((activity) => (\n            <div \n              key={activity.id} \n              className=\"bg-white rounded-2xl p-4 border border-unalon-200 shadow-sm card-hover hover-lift transition-all duration-300 cursor-pointer\"\n              onClick={() => {\n                // Pass event data through URL state\n                const eventData = encodeURIComponent(JSON.stringify(activity));\n                setLocation(`/event/${activity.id}?data=${eventData}`);\n              }}\n            >\n            <div className=\"flex items-start justify-between mb-4\">\n              <div className=\"flex-1\">\n                <h2 className=\"text-lg font-semibold text-unalon-900 mb-2\">{activity.title}</h2>\n                <p className=\"text-unalon-600 mb-2\">{activity.description}</p>\n                <div className=\"flex items-center text-sm text-unalon-500\">\n                  <span className=\"material-icons text-sm mr-1\">schedule</span>\n                  {formatDateTime(activity.datetime)}\n                </div>\n                <div className=\"flex items-center text-sm text-unalon-500 mt-1\">\n                  <span className=\"material-icons text-sm mr-1\">location_on</span>\n                  {activity.location}\n                </div>\n                \n                {/* Vibes */}\n                {activity.vibes && activity.vibes.length > 0 && (\n                  <div className=\"flex space-x-2 mt-3 overflow-x-auto scrollbar-hide\">\n                    {activity.vibes.map((vibe, index) => (\n                      <span key={index} className=\"bg-unalon-100 text-unalon-600 text-sm px-3 py-1 rounded-full border border-unalon-200 whitespace-nowrap\">\n                        {vibe}\n                      </span>\n                    ))}\n                  </div>\n                )}\n              </div>\n              \n              {/* Location Image */}\n              <div className=\"w-24 h-24 rounded-xl ml-4 flex-shrink-0 border border-unalon-200 overflow-hidden bg-unalon-100\">\n                <img \n                  alt={`${activity.title} location`}\n                  className=\"w-full h-full object-cover\"\n                  src={activity.image || \"https://images.unsplash.com/photo-1511920170104-daa98f68f26b?auto=format&fit=crop&w=400&h=400\"}\n                  onError={(e) => {\n                    const target = e.target as HTMLImageElement;\n                    target.src = \"https://images.unsplash.com/photo-1511920170104-daa98f68f26b?auto=format&fit=crop&w=400&h=400\";\n                  }}\n                />\n              </div>\n            </div>\n\n            {/* Host and Attendees - Moved below description */}\n            <div className=\"flex items-center justify-between mb-4\">\n              <div className=\"flex items-center space-x-3\">\n                <div className=\"relative\">\n                  <img\n                    src={activity.host?.avatar || 'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=150&h=150&fit=crop&crop=face'}\n                    alt={activity.host?.name || 'Host'}\n                    className=\"w-12 h-12 rounded-full object-cover cursor-pointer hover:scale-105 transition-transform duration-200\"\n                    onClick={() => activity.host && handleHostClick(activity.host)}\n                    onError={(e) => {\n                      const target = e.target as HTMLImageElement;\n                      target.src = 'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=150&h=150&fit=crop&crop=face';\n                    }}\n                  />\n                </div>\n                <div>\n                  <h3 className=\"font-semibold text-unalon-900 cursor-pointer hover:text-unalon-700 transition-colors duration-200\" onClick={() => activity.host && handleHostClick(activity.host)}>\n                    Hosted by {activity.host?.name || 'Unknown'}\n                  </h3>\n                  <p className=\"text-sm text-unalon-600\">\n                    {activity.maxParticipants - (activity.currentParticipants || 0)} spots open\n                  </p>\n                </div>\n              </div>\n              \n              {/* Attendees */}\n              <div className=\"relative\">\n                <div className=\"flex -space-x-2 cursor-pointer\" onClick={() => handleAttendeesClick(activity.id)}>\n                  {sampleAttendees.slice(0, 3).map((attendee, i) => (\n                    <div key={attendee.id} className=\"w-8 h-8 rounded-full border-2 border-white overflow-hidden\">\n                      <img\n                        src={attendee.avatar}\n                        alt={attendee.name}\n                        className=\"w-full h-full object-cover\"\n                        onError={(e) => {\n                          const target = e.target as HTMLImageElement;\n                          target.style.display = 'none';\n                          target.nextElementSibling?.classList.remove('hidden');\n                        }}\n                      />\n                      <div className=\"w-full h-full bg-unalon-100 flex items-center justify-center text-unalon-600 text-xs font-medium hidden\">\n                        {attendee.name.charAt(0)}\n                      </div>\n                    </div>\n                  ))}\n                  {sampleAttendees.length > 3 && (\n                    <div className=\"w-8 h-8 rounded-full bg-unalon-100 border-2 border-white flex items-center justify-center text-unalon-600 text-xs font-medium\">\n                      +{sampleAttendees.length - 3}\n                    </div>\n                  )}\n                </div>\n                \n                {/* Attendees Dropdown */}\n                {showAttendeesDropdown === activity.id && (\n                  <div className=\"absolute right-0 top-full mt-2 w-64 bg-white rounded-xl shadow-lg border border-unalon-200 z-10\">\n                    <div className=\"p-3\">\n                      <h4 className=\"text-sm font-medium text-unalon-700 mb-2\">Attendees</h4>\n                      <div className=\"space-y-2\">\n                        {sampleAttendees.map((attendee) => (\n                          <div key={attendee.id} className=\"flex items-center space-x-2\">\n                            <img\n                              src={attendee.avatar}\n                              alt={attendee.name}\n                              className=\"w-8 h-8 rounded-full object-cover\"\n                              onError={(e) => {\n                                const target = e.target as HTMLImageElement;\n                                target.style.display = 'none';\n                                target.nextElementSibling?.classList.remove('hidden');\n                              }}\n                            />\n                            <div className=\"w-8 h-8 rounded-full bg-unalon-100 flex items-center justify-center text-unalon-600 text-xs font-medium hidden\">\n                              {attendee.name.charAt(0)}\n                            </div>\n                            <span className=\"text-sm text-unalon-700\">{attendee.name}</span>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  </div>\n                )}\n              </div>\n            </div>\n\n            <button\n              onClick={() => handleRequestToJoin(activity.id)}\n              disabled={requestedActivities.has(activity.id) || (activity.userRequested ?? false)}\n              className={`w-full py-3 rounded-xl font-medium transition-all duration-300 ${\n                requestedActivities.has(activity.id) || (activity.userRequested ?? false)\n                  ? 'bg-unalon-accent-500 text-white cursor-not-allowed'\n                  : 'bg-unalon-accent-500 text-white hover:bg-unalon-accent-600 active:scale-95'\n              }`}\n            >\n              {requestedActivities.has(activity.id) || (activity.userRequested ?? false) ? 'Requested' : 'Request to Join'}\n            </button>\n          </div>\n        )))\n      }\n      </div>\n    </div>\n  );\n}\n","size_bytes":65210},"client/src/pages/LoginPage.tsx":{"content":"import { useState } from 'react';\nimport { useAuth } from '@/context/AuthContext';\nimport { useToast } from '@/hooks/use-toast';\n\nexport default function LoginPage() {\n  const [isLogin, setIsLogin] = useState(true);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [name, setName] = useState('');\n  const [username, setUsername] = useState('');\n  const { login } = useAuth();\n  const { toast } = useToast();\n\n  const handleSubmit = async () => {\n    try {\n      if (isLogin) {\n        await login(email, password);\n      } else {\n        // For demo purposes, auto-login after registration\n        // In real app, would register then login\n        await login(email, password);\n      }\n      toast({ title: \"Welcome to Unalon!\" });\n    } catch (error) {\n      toast({ \n        title: \"Authentication failed\", \n        description: \"Please check your credentials and try again.\",\n        variant: \"destructive\" \n      });\n    }\n  };\n\n  const handleDemoLogin = async (demoEmail: string) => {\n    try {\n      await login(demoEmail, 'demo');\n      toast({ title: \"Welcome to Unalon!\" });\n    } catch (error) {\n      toast({ \n        title: \"Demo login failed\", \n        description: \"Please try again.\",\n        variant: \"destructive\" \n      });\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-unalon-50 to-unalon-100 flex flex-col\">\n      {/* Header Section */}\n      <div className=\"flex-1 flex flex-col items-center justify-center px-6 pt-16 pb-8\">\n        <div className=\"text-center space-y-4\">\n          <h1 className=\"text-5xl md:text-6xl font-black text-unalon-900 unalon-logo leading-tight\">\n            unalon\n          </h1>\n          <p className=\"text-unalon-600 text-sm font-medium tracking-widest uppercase\">\n            Never do it alone\n          </p>\n        </div>\n      </div>\n\n      {/* Login Section */}\n      <div className=\"px-6 pb-8 space-y-4\">\n        <div className=\"space-y-3\">\n          <button\n            onClick={() => handleDemoLogin('ethan@example.com')}\n            className=\"w-full h-14 bg-unalon-900 text-white rounded-2xl font-semibold text-base transition-all duration-200 active:scale-95 shadow-lg\"\n          >\n            Continue as Ethan\n          </button>\n          <button\n            onClick={() => handleDemoLogin('sarah@example.com')}\n            className=\"w-full h-14 bg-unalon-accent-400 text-white rounded-2xl font-semibold text-base transition-all duration-200 active:scale-95 shadow-lg\"\n          >\n            Continue as Sarah\n          </button>\n          <button\n            onClick={() => handleDemoLogin('marcus@example.com')}\n            className=\"w-full h-14 bg-unalon-700 text-white rounded-2xl font-semibold text-base transition-all duration-200 active:scale-95 shadow-lg\"\n          >\n            Continue as Marcus\n          </button>\n        </div>\n        \n        <p className=\"text-unalon-500 text-xs text-center pt-2\">\n          By continuing, you agree to our Terms and Conditions\n        </p>\n      </div>\n    </div>\n  );\n}\n","size_bytes":3075},"client/src/pages/MyPlansPage.tsx":{"content":"import { useState } from 'react';\nimport { useQuery } from '@tanstack/react-query';\nimport type { Activity, User } from '@shared/schema';\n\ninterface ActivityWithHost extends Activity {\n  host: User | null;\n}\n\ninterface MyPlansData {\n  upcoming: ActivityWithHost[];\n  past: ActivityWithHost[];\n}\n\nexport default function MyPlansPage() {\n  const [activeTab, setActiveTab] = useState<'upcoming' | 'past'>('upcoming');\n\n  const { data, isLoading } = useQuery<MyPlansData>({\n    queryKey: ['/api/my-plans'],\n  });\n\n  const formatDateTime = (datetime: string | Date) => {\n    const date = new Date(datetime);\n    const now = new Date();\n    const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n    const tomorrow = new Date(today);\n    tomorrow.setDate(tomorrow.getDate() + 1);\n    const activityDate = new Date(date.getFullYear(), date.getMonth(), date.getDate());\n\n    let dayLabel = '';\n    if (activityDate.getTime() === today.getTime()) {\n      dayLabel = 'Today';\n    } else if (activityDate.getTime() === tomorrow.getTime()) {\n      dayLabel = 'Tomorrow';\n    } else if (activityDate > now) {\n      dayLabel = date.toLocaleDateString('en-US', { weekday: 'long', month: 'short', day: 'numeric' });\n    } else {\n      dayLabel = date.toLocaleDateString('en-US', { month: 'short', day: 'numeric' });\n    }\n\n    const timeLabel = date.toLocaleTimeString('en-US', { \n      hour: 'numeric', \n      minute: '2-digit',\n      hour12: true \n    });\n\n    return `${timeLabel} · ${dayLabel}`;\n  };\n\n  const groupActivitiesByTime = (activities: ActivityWithHost[]) => {\n    const now = new Date();\n    const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n    const tomorrow = new Date(today);\n    tomorrow.setDate(tomorrow.getDate() + 1);\n    const thisWeek = new Date(today);\n    thisWeek.setDate(thisWeek.getDate() + 7);\n\n    const groups: { [key: string]: ActivityWithHost[] } = {\n      'Today': [],\n      'Tomorrow': [],\n      'This Week': [],\n      'Past': []\n    };\n\n    activities.forEach(activity => {\n      const activityDate = new Date(activity.datetime);\n      const activityDay = new Date(activityDate.getFullYear(), activityDate.getMonth(), activityDate.getDate());\n\n      if (activityDay.getTime() === today.getTime()) {\n        groups['Today'].push(activity);\n      } else if (activityDay.getTime() === tomorrow.getTime()) {\n        groups['Tomorrow'].push(activity);\n      } else if (activityDate > now && activityDate <= thisWeek) {\n        groups['This Week'].push(activity);\n      } else if (activityDate <= now) {\n        groups['Past'].push(activity);\n      }\n    });\n\n    return groups;\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"p-4 overflow-y-auto bg-unalon-100\">\n        <h1 className=\"text-xl font-bold text-unalon-900 mb-6\">My Plans</h1>\n        <div className=\"space-y-4\">\n          {[1, 2, 3].map((i) => (\n            <div key={i} className=\"bg-unalon-50 rounded-2xl p-3 border border-unalon-300 animate-pulse\">\n              <div className=\"flex items-center\">\n                <div className=\"w-16 h-16 bg-unalon-200 rounded-lg mr-3\"></div>\n                <div className=\"flex-1\">\n                  <div className=\"h-4 bg-unalon-200 rounded mb-2\"></div>\n                  <div className=\"h-3 bg-unalon-200 rounded w-2/3\"></div>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n\n  // Sample upcoming activities\n  const sampleUpcomingActivities: ActivityWithHost[] = [\n    {\n      id: 'upcoming1',\n      title: 'Hiking Adventure: Mount Tamalpais',\n      description: 'Join us for a scenic hike with breathtaking views of the Bay Area.',\n      datetime: new Date(Date.now() + 2 * 24 * 60 * 60 * 1000), // 2 days from now\n      location: 'Mount Tamalpais State Park',\n      maxParticipants: 10,\n      currentParticipants: 6,\n      vibes: ['Outdoors', 'Adventure', 'Nature'],\n      image: 'https://images.unsplash.com/photo-1551632811-561732d1e306?auto=format&fit=crop&w=400&h=400',\n      createdAt: new Date(),\n      duration: '240',\n      hostId: 'host4',\n      participantIds: ['10', '11', '12'],\n      host: {\n        id: 'host4',\n        name: 'Michael',\n        username: 'mike_hiker',\n        email: 'michael@example.com',\n        age: 29,\n        location: 'Marin County',\n        avatar: 'https://images.unsplash.com/photo-1500648767791-00dcc994a43e?w=150&h=150&fit=crop&crop=face',\n        unalonScore: 94,\n        interests: ['hiking', 'outdoors', 'photography'],\n        favoriteQuote: 'The mountains are calling and I must go.',\n        createdAt: new Date()\n      },\n      userRequested: true\n    },\n    {\n      id: 'upcoming2',\n      title: 'Pottery Workshop for Beginners',\n      description: 'Learn the basics of pottery in this hands-on workshop. All materials provided.',\n      datetime: new Date(Date.now() + 24 * 60 * 60 * 1000), // Tomorrow\n      location: 'Creative Arts Studio, Downtown',\n      maxParticipants: 8,\n      currentParticipants: 5,\n      vibes: ['Creative', 'Learning', 'Relaxed'],\n      image: 'https://images.unsplash.com/photo-1565122256212-41788ba4ca9e?auto=format&fit=crop&w=400&h=400',\n      createdAt: new Date(),\n      duration: '180',\n      hostId: 'host5',\n      participantIds: ['13', '14', '15'],\n      host: {\n        id: 'host5',\n        name: 'Olivia',\n        username: 'olivia_creates',\n        email: 'olivia@example.com',\n        age: 31,\n        location: 'San Francisco',\n        avatar: 'https://images.unsplash.com/photo-1544005313-94ddf0286df2?w=150&h=150&fit=crop&crop=face',\n        unalonScore: 89,\n        interests: ['pottery', 'art', 'crafts'],\n        favoriteQuote: 'Creativity takes courage.',\n        createdAt: new Date()\n      },\n      userRequested: true\n    },\n    {\n      id: 'upcoming3',\n      title: 'Sunset Beach Volleyball',\n      description: 'Casual beach volleyball game followed by a small bonfire. All skill levels welcome!',\n      datetime: new Date(Date.now() + 5 * 24 * 60 * 60 * 1000), // 5 days from now\n      location: 'Ocean Beach',\n      maxParticipants: 12,\n      currentParticipants: 8,\n      vibes: ['Active', 'Beach', 'Social'],\n      image: 'https://images.unsplash.com/photo-1612872087720-bb876e2e67d1?auto=format&fit=crop&w=400&h=400',\n      createdAt: new Date(),\n      duration: '180',\n      hostId: 'host6',\n      participantIds: ['16', '17', '18'],\n      host: {\n        id: 'host6',\n        name: 'Carlos',\n        username: 'carlos_beach',\n        email: 'carlos@example.com',\n        age: 27,\n        location: 'San Francisco',\n        avatar: 'https://images.unsplash.com/photo-1506794778202-cad84cf45f1d?w=150&h=150&fit=crop&crop=face',\n        unalonScore: 91,\n        interests: ['volleyball', 'beach', 'outdoor sports'],\n        favoriteQuote: 'Life\\'s a beach, enjoy the waves.',\n        createdAt: new Date()\n      },\n      userRequested: false\n    }\n  ];\n  \n  // Use sample data if no API data is available\n  const upcomingGroups = data?.upcoming ? groupActivitiesByTime(data.upcoming) : groupActivitiesByTime(sampleUpcomingActivities);\n  \n  // Sample past activities\n  const samplePastActivities: ActivityWithHost[] = [\n    {\n      id: 'past1',\n      title: 'Coffee & Code Meetup',\n      description: 'Great session learning about React hooks and state management.',\n      datetime: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000), // 7 days ago\n      location: 'Tech Hub Downtown',\n      maxParticipants: 15,\n      currentParticipants: 12,\n      vibes: ['Learning', 'Tech', 'Coffee'],\n      image: 'https://images.unsplash.com/photo-1495474472287-4d71bcdd2085?auto=format&fit=crop&w=400&h=400',\n      createdAt: new Date(),\n      duration: '120',\n      hostId: 'host1',\n      participantIds: ['1', '2', '3'],\n      host: {\n        id: 'host1',\n        name: 'Sarah',\n        username: 'sarah_dev',\n        email: 'sarah@example.com',\n        age: 26,\n        location: 'San Francisco',\n        avatar: 'https://images.unsplash.com/photo-1494790108755-2616b612b786?w=150&h=150&fit=crop&crop=face',\n        unalonScore: 92,\n        interests: ['JavaScript', 'web development', 'coffee'],\n        favoriteQuote: 'Code is like humor. When you have to explain it, it\\'s bad.',\n        createdAt: new Date()\n      },\n      userRequested: false\n    },\n    {\n      id: 'past2',\n      title: 'Book Club: Sci-Fi Night',\n      description: 'Amazing discussion about \"The Three-Body Problem\".',\n      datetime: new Date(Date.now() - 14 * 24 * 60 * 60 * 1000), // 14 days ago\n      location: 'Central Library',\n      maxParticipants: 12,\n      currentParticipants: 8,\n      vibes: ['Intellectual', 'Discussion', 'Books'],\n      image: 'https://images.unsplash.com/photo-1481627834876-b7833e8f5570?auto=format&fit=crop&w=400&h=400',\n      createdAt: new Date(),\n      duration: '90',\n      hostId: 'host2',\n      participantIds: ['4', '5', '6'],\n      host: {\n        id: 'host2',\n        name: 'David',\n        username: 'david_reader',\n        email: 'david@example.com',\n        age: 28,\n        location: 'Berkeley',\n        avatar: 'https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=150&h=150&fit=crop&crop=face',\n        unalonScore: 88,\n        interests: ['science fiction', 'reading', 'discussion'],\n        favoriteQuote: 'A reader lives a thousand lives before he dies.',\n        createdAt: new Date()\n      },\n      userRequested: false\n    },\n    {\n      id: 'past3',\n      title: 'Acoustic Guitar Jam',\n      description: 'Fun evening playing covers and original songs.',\n      datetime: new Date(Date.now() - 21 * 24 * 60 * 60 * 1000), // 21 days ago\n      location: 'Music Studio Downtown',\n      maxParticipants: 10,\n      currentParticipants: 6,\n      vibes: ['Creative', 'Music', 'Casual'],\n      image: 'https://images.unsplash.com/photo-1511379938547-c1f69419868d?auto=format&fit=crop&w=400&h=400',\n      createdAt: new Date(),\n      duration: '180',\n      hostId: 'host3',\n      participantIds: ['7', '8', '9'],\n      host: {\n        id: 'host3',\n        name: 'Emma',\n        username: 'emma_music',\n        email: 'emma@example.com',\n        age: 25,\n        location: 'Oakland',\n        avatar: 'https://images.unsplash.com/photo-1438761681033-6461ffad8d80?w=150&h=150&fit=crop&crop=face',\n        unalonScore: 85,\n        interests: ['music', 'guitar', 'acoustic'],\n        favoriteQuote: 'Music is the universal language of mankind.',\n        createdAt: new Date()\n      },\n      userRequested: false\n    }\n  ];\n  \n  // Force use sample data for past activities\n  const pastActivities = samplePastActivities;\n\n  return (\n    <div className=\"p-4 overflow-y-auto bg-unalon-100\">\n\n      {/* Tabs */}\n      <div className=\"flex border-b border-unalon-300 mb-6\">\n        <button \n          onClick={() => setActiveTab('upcoming')}\n          className={`flex-1 py-3 text-center font-semibold transition-colors duration-200 border-b-2 ${\n            activeTab === 'upcoming' \n              ? 'text-unalon-900 border-unalon-900' \n              : 'text-unalon-700 border-transparent hover:border-unalon-300'\n          }`}\n        >\n          Upcoming\n        </button>\n        <button \n          onClick={() => setActiveTab('past')}\n          className={`flex-1 py-3 text-center font-semibold transition-colors duration-200 border-b-2 ${\n            activeTab === 'past' \n              ? 'text-unalon-900 border-unalon-900' \n              : 'text-unalon-700 border-transparent hover:border-unalon-300'\n          }`}\n        >\n          Past\n        </button>\n      </div>\n\n      {/* Content */}\n      {activeTab === 'upcoming' && (\n        <div className=\"space-y-6\">\n          {Object.entries(upcomingGroups).map(([groupName, activities]) => {\n            if (activities.length === 0) return null;\n            \n            return (\n              <div key={groupName} className=\"space-y-4\">\n                <h2 className=\"text-lg font-bold text-unalon-900\">{groupName}</h2>\n                {activities.map((activity) => (\n                  <div key={activity.id} className=\"bg-unalon-50 rounded-2xl shadow-sm p-3 border border-unalon-300 flex items-center hover:shadow-md transition-shadow duration-200\">\n                    <img \n                      alt={`${activity.title} activity`}\n                      className=\"w-16 h-16 rounded-lg object-cover flex-shrink-0 mr-3\" \n                      src={activity.image || \"https://images.unsplash.com/photo-1511920170104-daa98f68f26b?auto=format&fit=crop&w=400&h=400\"}\n                    />\n                    <div>\n                      <h3 className=\"text-base font-semibold text-unalon-900\">\n                        {activity.hostId === activity.id ? 'My Hosted: ' : ''}{activity.title}\n                      </h3>\n                      <p className=\"text-xs text-unalon-700 mt-1\">\n                        {formatDateTime(activity.datetime)} · {activity.location}\n                      </p>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            );\n          })}\n\n          {Object.keys(upcomingGroups).length === 0 && (\n            <div className=\"text-center py-12\">\n              <p className=\"text-unalon-700 text-lg\">No upcoming plans</p>\n              <p className=\"text-unalon-500 text-sm mt-1\">Join some activities to see them here!</p>\n            </div>\n          )}\n        </div>\n      )}\n\n      {activeTab === 'past' && (\n        <div className=\"space-y-4\">\n          {pastActivities.map((activity) => (\n            <div key={activity.id} className=\"bg-unalon-50 rounded-2xl shadow-sm p-3 border border-unalon-300 flex items-center opacity-60\">\n              <img \n                alt={`${activity.title} activity`}\n                className=\"w-16 h-16 rounded-lg object-cover flex-shrink-0 mr-3\" \n                src={activity.image || \"https://images.unsplash.com/photo-1511920170104-daa98f68f26b?auto=format&fit=crop&w=400&h=400\"}\n              />\n              <div>\n                <h3 className=\"text-base font-semibold text-unalon-900\">{activity.title}</h3>\n                <p className=\"text-xs text-unalon-700 mt-1\">\n                  {formatDateTime(activity.datetime)} · {activity.location}\n                </p>\n              </div>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n","size_bytes":14312},"client/src/pages/NotificationsPage.tsx":{"content":"import { useState } from 'react';\n\ninterface Notification {\n  id: string;\n  type: 'friend_request' | 'event_invite' | 'accepted' | 'story_tag' | 'sponsored_ad';\n  title: string;\n  description: string;\n  timestamp: Date;\n  avatar?: string;\n  isRead: boolean;\n}\n\nexport default function NotificationsPage() {\n  const [notifications] = useState<Notification[]>([\n    {\n      id: '1',\n      type: 'friend_request',\n      title: 'Sarah wants to connect',\n      description: 'You have 3 mutual interests',\n      timestamp: new Date(Date.now() - 1000 * 60 * 30),\n      avatar: 'https://images.unsplash.com/photo-1494790108755-2616b612b5ff?auto=format&fit=crop&w=150&h=150',\n      isRead: false\n    },\n    {\n      id: '2',\n      type: 'event_invite',\n      title: 'Alex invited you to Board Game Night',\n      description: 'Tomorrow at 7:00 PM • Mission District',\n      timestamp: new Date(Date.now() - 1000 * 60 * 60 * 2),\n      avatar: 'https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?auto=format&fit=crop&w=150&h=150',\n      isRead: false\n    },\n    {\n      id: '3',\n      type: 'sponsored_ad',\n      title: '☕️ Abhay wants to study at Roastery Coffee',\n      description: 'Great spot for focused work sessions. Join him?',\n      timestamp: new Date(Date.now() - 1000 * 60 * 60 * 3),\n      avatar: 'https://images.unsplash.com/photo-1554118811-1e0d58224f24?auto=format&fit=crop&w=150&h=150',\n      isRead: true\n    },\n    {\n      id: '4',\n      type: 'accepted',\n      title: 'You\\'re in! Coffee Chat accepted',\n      description: 'Emma accepted your request to join',\n      timestamp: new Date(Date.now() - 1000 * 60 * 60 * 4),\n      avatar: 'https://images.unsplash.com/photo-1438761681033-6461ffad8d80?auto=format&fit=crop&w=150&h=150',\n      isRead: true\n    },\n    {\n      id: '5',\n      type: 'sponsored_ad',\n      title: '🍰 Riya just went to Mocha Mojo!',\n      description: 'Wanna join her next time? Perfect spot for coffee lovers',\n      timestamp: new Date(Date.now() - 1000 * 60 * 60 * 6),\n      avatar: 'https://images.unsplash.com/photo-1554118811-1e0d58224f24?auto=format&fit=crop&w=150&h=150',\n      isRead: true\n    },\n    {\n      id: '6',\n      type: 'story_tag',\n      title: 'Mike tagged you in their activity story',\n      description: 'Check out the memories from yesterday\\'s hike!',\n      timestamp: new Date(Date.now() - 1000 * 60 * 60 * 12),\n      avatar: 'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?auto=format&fit=crop&w=150&h=150',\n      isRead: true\n    },\n    {\n      id: '7',\n      type: 'sponsored_ad',\n      title: '🎨 Creativity Explored - New Art Workshop',\n      description: 'Join local artists for a fun painting session this weekend',\n      timestamp: new Date(Date.now() - 1000 * 60 * 60 * 18),\n      avatar: 'https://images.unsplash.com/photo-1460661419201-fd4cecdf8a8a?auto=format&fit=crop&w=150&h=150',\n      isRead: true\n    },\n    {\n      id: '8',\n      type: 'sponsored_ad',\n      title: '✨ Discover Golden Gate Park',\n      description: 'Perfect for your next outdoor activity. Book a picnic spot today!',\n      timestamp: new Date(Date.now() - 1000 * 60 * 60 * 24),\n      isRead: true\n    }\n  ]);\n\n  const formatTime = (timestamp: Date) => {\n    const now = new Date();\n    const diffMs = now.getTime() - timestamp.getTime();\n    const diffHours = Math.floor(diffMs / (1000 * 60 * 60));\n    const diffDays = Math.floor(diffHours / 24);\n\n    if (diffHours < 1) return 'Just now';\n    if (diffHours < 24) return `${diffHours}h ago`;\n    if (diffDays < 7) return `${diffDays}d ago`;\n    return timestamp.toLocaleDateString('en-US', { month: 'short', day: 'numeric' });\n  };\n\n  const getNotificationIcon = (type: string) => {\n    switch (type) {\n      case 'friend_request': return 'person_add';\n      case 'event_invite': return 'event';\n      case 'accepted': return 'check_circle';\n      case 'story_tag': return 'photo_camera';\n      case 'sponsored_ad': return 'local_offer';\n      default: return 'notifications';\n    }\n  };\n\n  const handleNotificationAction = (notificationId: string, action: string) => {\n    // Show feedback for the action\n    console.log(`${action} action for notification ${notificationId}`);\n    \n    // Here you would typically make an API call to handle the action\n    // For now, we'll just show a visual feedback\n    const notification = notifications.find(n => n.id === notificationId);\n    if (notification) {\n      switch (action) {\n        case 'accept_friend':\n          alert(`Accepted friend request from ${notification.title.split(' ')[0]}`);\n          break;\n        case 'decline_friend':\n          alert(`Declined friend request from ${notification.title.split(' ')[0]}`);\n          break;\n        case 'join_event':\n          alert(`Joined event: ${notification.title}`);\n          break;\n        case 'maybe_later':\n          alert(`Marked as maybe for: ${notification.title}`);\n          break;\n        case 'check_out':\n          alert(`Checking out: ${notification.title}`);\n          break;\n        case 'add_wishlist':\n          alert(`Added to wishlist: ${notification.title}`);\n          break;\n      }\n    }\n  };\n\n  const getActionButton = (notification: Notification) => {\n    switch (notification.type) {\n      case 'friend_request':\n        return (\n          <div className=\"flex gap-2 mt-2\">\n            <button \n              onClick={() => handleNotificationAction(notification.id, 'accept_friend')}\n              className=\"px-3 py-1 bg-unalon-accent-400 text-white text-xs rounded-full hover:bg-unalon-accent-500 transition-colors\"\n            >\n              Accept\n            </button>\n            <button \n              onClick={() => handleNotificationAction(notification.id, 'decline_friend')}\n              className=\"px-3 py-1 bg-unalon-200 text-unalon-700 text-xs rounded-full hover:bg-unalon-300 transition-colors\"\n            >\n              Decline\n            </button>\n          </div>\n        );\n      case 'event_invite':\n        return (\n          <div className=\"flex gap-2 mt-2\">\n            <button \n              onClick={() => handleNotificationAction(notification.id, 'join_event')}\n              className=\"px-3 py-1 bg-unalon-accent-400 text-white text-xs rounded-full hover:bg-unalon-accent-500 transition-colors\"\n            >\n              Join Event\n            </button>\n            <button \n              onClick={() => handleNotificationAction(notification.id, 'maybe_later')}\n              className=\"px-3 py-1 bg-unalon-200 text-unalon-700 text-xs rounded-full hover:bg-unalon-300 transition-colors\"\n            >\n              Maybe Later\n            </button>\n          </div>\n        );\n      case 'sponsored_ad':\n        return (\n          <div className=\"flex gap-2 mt-2\">\n            <button \n              onClick={() => handleNotificationAction(notification.id, 'check_out')}\n              className=\"px-3 py-1 bg-white border border-unalon-300 text-unalon-700 text-xs rounded-full hover:bg-unalon-100 transition-colors\"\n            >\n              Check it out\n            </button>\n            <button \n              onClick={() => handleNotificationAction(notification.id, 'add_wishlist')}\n              className=\"px-3 py-1 bg-white border border-unalon-300 text-unalon-700 text-xs rounded-full hover:bg-unalon-100 transition-colors\"\n            >\n              Add to wishlist\n            </button>\n          </div>\n        );\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <div className=\"p-4 overflow-y-auto bg-unalon-100\">\n      <h1 className=\"text-xl font-bold text-unalon-900 mb-6\">Notifications</h1>\n      \n      <div className=\"space-y-3\">\n        {notifications.map((notification) => (\n          <div \n            key={notification.id}\n            className={`bg-white rounded-xl p-4 border border-unalon-200 shadow-sm hover:shadow-md transition-shadow duration-200 ${\n              !notification.isRead ? 'border-unalon-accent-200 bg-unalon-accent-50' : ''\n            }`}\n          >\n            <div className=\"flex items-start gap-3\">\n              <div className=\"w-10 h-10 rounded-full bg-unalon-100 overflow-hidden flex items-center justify-center\">\n                {notification.avatar ? (\n                  <img \n                    src={notification.avatar}\n                    alt=\"Avatar\"\n                    className=\"w-full h-full object-cover\"\n                    onError={(e) => {\n                      const target = e.target as HTMLImageElement;\n                      target.style.display = 'none';\n                      target.nextElementSibling?.classList.remove('hidden');\n                    }}\n                  />\n                ) : null}\n                <div className={`w-full h-full flex items-center justify-center ${notification.avatar ? 'hidden' : ''}`}>\n                  <span className=\"material-icons text-unalon-600 text-sm\">\n                    {getNotificationIcon(notification.type)}\n                  </span>\n                </div>\n              </div>\n              \n              <div className=\"flex-1\">\n                <div className=\"flex justify-between items-start\">\n                  <div>\n                    <p className=\"text-sm font-medium text-unalon-900 mb-1\">\n                      {notification.title}\n                      {!notification.isRead && (\n                        <span className=\"inline-block w-2 h-2 bg-unalon-accent-400 rounded-full ml-2\"></span>\n                      )}\n                      {notification.type === 'sponsored_ad' && (\n                        <span className=\"inline-block text-xs text-unalon-500 italic ml-2\">✨ Sponsored</span>\n                      )}\n                    </p>\n                    <p className=\"text-xs text-unalon-600 mb-2\">\n                      {notification.description}\n                    </p>\n                  </div>\n                  <span className=\"text-xs text-unalon-500\">\n                    {formatTime(notification.timestamp)}\n                  </span>\n                </div>\n                \n                {getActionButton(notification)}\n              </div>\n            </div>\n          </div>\n        ))}\n\n        {notifications.length === 0 && (\n          <div className=\"text-center py-12\">\n            <span className=\"material-icons text-4xl text-unalon-400 mb-4\">notifications_none</span>\n            <p className=\"text-unalon-700 text-lg\">No notifications yet</p>\n            <p className=\"text-unalon-500 text-sm mt-1\">When you get notifications, they'll appear here</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}","size_bytes":10585},"client/src/pages/ProfilePage.tsx":{"content":"import { useAuth } from '@/context/AuthContext';\nimport { useToast } from '@/hooks/use-toast';\n\nexport default function ProfilePage() {\n  const { user, logout } = useAuth();\n  const { toast } = useToast();\n\n  const handleLogout = async () => {\n    try {\n      await logout();\n      toast({ title: \"Logged out successfully\" });\n    } catch (error) {\n      toast({ \n        title: \"Logout failed\", \n        description: \"Please try again\",\n        variant: \"destructive\" \n      });\n    }\n  };\n\n  if (!user) return null;\n\n  return (\n    <div className=\"flex-grow overflow-y-auto pb-20 bg-white\">\n      {/* Settings Header */}\n      <div className=\"flex items-center bg-white p-4 pb-2 justify-between\">\n        <div className=\"w-12\"></div>\n        <button\n          onClick={handleLogout}\n          className=\"flex w-12 items-center justify-end\"\n        >\n          <div className=\"flex max-w-[480px] cursor-pointer items-center justify-center overflow-hidden rounded-full h-12 bg-transparent text-black gap-2 text-base font-bold leading-normal tracking-[0.015em] min-w-0 p-0 hover:bg-black hover:text-white transition-colors duration-200\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24px\" height=\"24px\" fill=\"currentColor\" viewBox=\"0 0 256 256\">\n              <path d=\"M224,128a8,8,0,0,1-8,8H40a8,8,0,0,1,0-16H216A8,8,0,0,1,224,128ZM40,72H216a8,8,0,0,0,0-16H40a8,8,0,0,0,0,16ZM216,184H40a8,8,0,0,0,0,16H216a8,8,0,0,0,0-16Z\"></path>\n            </svg>\n          </div>\n        </button>\n      </div>\n\n      {/* Profile header */}\n      <section className=\"flex p-4\">\n        <div className=\"flex w-full flex-col gap-4 items-center\">\n          <div className=\"flex gap-4 flex-col items-center\">\n            {/* Profile avatar */}\n            <div\n              className=\"bg-center bg-no-repeat aspect-square bg-cover rounded-full min-h-32 w-32 shadow-md\"\n              style={{\n                backgroundImage: `url(\"${user.avatar || 'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?auto=format&fit=crop&w=400&h=400'}\")`,\n              }}\n            ></div>\n            {/* User info */}\n            <div className=\"flex flex-col items-center justify-center\">\n              <p className=\"text-black text-[22px] font-bold leading-tight tracking-[-0.015em] text-center\">\n                {user.name}\n              </p>\n              <p className=\"text-black text-base font-normal leading-normal text-center\">\n                {user.age ? `${user.age}, ` : ''}{user.location || 'Location not set'}\n              </p>\n              {/* Unalon Score */}\n              <div className=\"mt-2 px-4 py-1 bg-black text-white rounded-full shadow-md flex items-center gap-1\">\n                <span className=\"material-icons text-sm\">star</span>\n                <span className=\"text-sm font-semibold\">Unalon Score: {user.unalonScore || 0}</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Interests section */}\n      <section className=\"px-4 pb-4\">\n        <h3 className=\"text-black text-lg font-bold leading-tight tracking-[-0.015em] pb-2 pt-4\">\n          Interests\n        </h3>\n        <div className=\"flex gap-3 flex-wrap\">\n          {user.interests && user.interests.length > 0 ? (\n            user.interests.map((interest, index) => (\n              <div\n                key={index}\n                className=\"flex h-8 shrink-0 items-center justify-center gap-x-2 rounded-full bg-white px-4 text-black hover:bg-black hover:text-white transition-colors duration-200 active:scale-95 shadow-sm border border-unalon-300\"\n              >\n                <p className=\"text-sm font-medium leading-normal\">{interest}</p>\n              </div>\n            ))\n          ) : (\n            <p className=\"text-unalon-500 text-sm\">No interests added yet</p>\n          )}\n          {/* Add button */}\n          <button className=\"flex h-8 shrink-0 items-center justify-center gap-x-2 rounded-full bg-white px-4 text-black font-bold hover:bg-black hover:text-white transition-colors duration-200 active:scale-95 shadow-sm border border-unalon-300\">\n            <span className=\"material-icons text-sm\">add</span>\n            <p className=\"text-sm font-medium leading-normal\">Add</p>\n          </button>\n        </div>\n      </section>\n\n      {/* Favorite Quote section */}\n      <section className=\"px-4 pb-4\">\n        <h3 className=\"text-black text-lg font-bold leading-tight tracking-[-0.015em] pb-2 pt-4\">\n          Favorite Quote\n        </h3>\n        <p className=\"text-black text-base font-normal leading-normal pt-1\">\n          {user.favoriteQuote || '\"Add your favorite quote to inspire others!\"'}\n        </p>\n      </section>\n\n      {/* Linked Playlists section */}\n      <section className=\"pb-4\">\n        <h3 className=\"text-black text-lg font-bold leading-tight tracking-[-0.015em] px-4 pb-2 pt-4\">\n          Linked Playlists\n        </h3>\n        <div className=\"flex overflow-x-auto scrollbar-hide\">\n          <div className=\"flex items-stretch p-4 gap-3\">\n            {/* Sample playlists */}\n            <div className=\"flex h-full flex-1 flex-col gap-4 rounded-lg min-w-40 bg-white p-2 shadow-sm hover:shadow-md transition-shadow duration-200 border border-unalon-300\">\n              <div\n                className=\"w-full bg-center bg-no-repeat aspect-square bg-cover rounded-xl flex flex-col\"\n                style={{\n                  backgroundImage: 'url(\"https://images.unsplash.com/photo-1493225457124-a3eb161ffa5f?auto=format&fit=crop&w=400&h=400\")',\n                }}\n              ></div>\n              <p className=\"text-black text-base font-medium leading-normal\">Chill Vibes</p>\n            </div>\n            <div className=\"flex h-full flex-1 flex-col gap-4 rounded-lg min-w-40 bg-white p-2 shadow-sm hover:shadow-md transition-shadow duration-200 border border-unalon-300\">\n              <div\n                className=\"w-full bg-center bg-no-repeat aspect-square bg-cover rounded-xl flex flex-col\"\n                style={{\n                  backgroundImage: 'url(\"https://images.unsplash.com/photo-1506905925346-21bda4d32df4?auto=format&fit=crop&w=400&h=400\")',\n                }}\n              ></div>\n              <p className=\"text-black text-base font-medium leading-normal\">Road Trip</p>\n            </div>\n            <div className=\"flex h-full flex-1 flex-col gap-4 rounded-lg min-w-40 bg-white p-2 shadow-sm hover:shadow-md transition-shadow duration-200 border border-unalon-300\">\n              <div\n                className=\"w-full bg-center bg-no-repeat aspect-square bg-cover rounded-xl flex flex-col\"\n                style={{\n                  backgroundImage: 'url(\"https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?auto=format&fit=crop&w=400&h=400\")',\n                }}\n              ></div>\n              <p className=\"text-black text-base font-medium leading-normal\">Workout Mix</p>\n            </div>\n            {/* Add playlist button */}\n            <button className=\"flex h-full flex-1 flex-col gap-4 rounded-lg min-w-40 items-center justify-center bg-white text-black hover:bg-black hover:text-white transition-colors duration-300 ease-in-out shadow-md hover:shadow-lg border border-unalon-300\">\n              <span className=\"material-icons text-2xl\">add</span>\n              <p className=\"text-base font-medium leading-normal\">Add Playlist</p>\n            </button>\n          </div>\n        </div>\n      </section>\n\n      {/* Favorite Places section */}\n      <section className=\"px-4 pb-4\">\n        <h3 className=\"text-black text-lg font-bold leading-tight tracking-[-0.015em] pb-2 pt-4\">\n          Favorite Places\n        </h3>\n        \n        {/* Sample favorite places */}\n        <div className=\"space-y-3\">\n          <div className=\"flex items-center gap-4 bg-white px-4 py-3 rounded-lg shadow-sm hover:shadow-md transition-shadow duration-200 border border-unalon-300\">\n            <div\n              className=\"bg-center bg-no-repeat aspect-video bg-cover rounded-lg h-14 w-fit\"\n              style={{\n                backgroundImage: 'url(\"https://images.unsplash.com/photo-1554118811-1e0d58224f24?auto=format&fit=crop&w=400&h=300\")',\n              }}\n            ></div>\n            <div className=\"flex flex-col justify-center\">\n              <p className=\"text-black text-base font-medium leading-normal line-clamp-1\">\n                The Daily Grind\n              </p>\n              <p className=\"text-black text-sm font-normal leading-normal line-clamp-2\">\n                Coffee Shop\n              </p>\n            </div>\n          </div>\n\n          <div className=\"flex items-center gap-4 bg-white px-4 py-3 rounded-lg shadow-sm hover:shadow-md transition-shadow duration-200 border border-unalon-300\">\n            <div\n              className=\"bg-center bg-no-repeat aspect-video bg-cover rounded-lg h-14 w-fit\"\n              style={{\n                backgroundImage: 'url(\"https://images.unsplash.com/photo-1441974231531-c6227db76b6e?auto=format&fit=crop&w=400&h=300\")',\n              }}\n            ></div>\n            <div className=\"flex flex-col justify-center\">\n              <p className=\"text-black text-base font-medium leading-normal line-clamp-1\">\n                Golden Gate Park\n              </p>\n              <p className=\"text-black text-sm font-normal leading-normal line-clamp-2\">Park</p>\n            </div>\n          </div>\n\n          {/* Add place button */}\n          <button className=\"flex items-center justify-center gap-4 bg-white px-4 py-3 rounded-lg w-full text-black hover:bg-black hover:text-white transition-colors duration-300 ease-in-out shadow-md hover:shadow-lg border border-unalon-300\">\n            <span className=\"material-icons\">add</span>\n            <p className=\"text-base font-medium leading-normal\">Add Favorite Place</p>\n          </button>\n        </div>\n      </section>\n    </div>\n  );\n}\n","size_bytes":9889},"client/src/pages/not-found.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { AlertCircle } from \"lucide-react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gray-50\">\n      <Card className=\"w-full max-w-md mx-4\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex mb-4 gap-2\">\n            <AlertCircle className=\"h-8 w-8 text-red-500\" />\n            <h1 className=\"text-2xl font-bold text-gray-900\">404 Page Not Found</h1>\n          </div>\n\n          <p className=\"mt-4 text-sm text-gray-600\">\n            Did you forget to add the page to the router?\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":711},"client/src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"client/src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"client/src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"client/src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"client/src/components/ui/avatar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1419},"client/src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n","size_bytes":1128},"client/src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2712},"client/src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":1901},"client/src/components/ui/calendar.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","size_bytes":2695},"client/src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","size_bytes":1858},"client/src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"client/src/components/ui/chart.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10481},"client/src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"client/src/components/ui/collapsible.tsx":{"content":"\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":329},"client/src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4885},"client/src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7428},"client/src/components/ui/dialog.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3848},"client/src/components/ui/drawer.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3021},"client/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7609},"client/src/components/ui/form.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4120},"client/src/components/ui/hover-card.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1251},"client/src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"client/src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":791},"client/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"client/src/components/ui/menubar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":8605},"client/src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5128},"client/src/components/ui/pagination.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2751},"client/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1280},"client/src/components/ui/progress.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":791},"client/src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"client/src/components/ui/resizable.tsx":{"content":"\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1723},"client/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"client/src/components/ui/select.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5742},"client/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"client/src/components/ui/sheet.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","size_bytes":4281},"client/src/components/ui/sidebar.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { VariantProps, cva } from \"class-variance-authority\"\nimport { PanelLeft } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nconst SidebarProvider = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    defaultOpen?: boolean\n    open?: boolean\n    onOpenChange?: (open: boolean) => void\n  }\n>(\n  (\n    {\n      defaultOpen = true,\n      open: openProp,\n      onOpenChange: setOpenProp,\n      className,\n      style,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const isMobile = useIsMobile()\n    const [openMobile, setOpenMobile] = React.useState(false)\n\n    // This is the internal state of the sidebar.\n    // We use openProp and setOpenProp for control from outside the component.\n    const [_open, _setOpen] = React.useState(defaultOpen)\n    const open = openProp ?? _open\n    const setOpen = React.useCallback(\n      (value: boolean | ((value: boolean) => boolean)) => {\n        const openState = typeof value === \"function\" ? value(open) : value\n        if (setOpenProp) {\n          setOpenProp(openState)\n        } else {\n          _setOpen(openState)\n        }\n\n        // This sets the cookie to keep the sidebar state.\n        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n      },\n      [setOpenProp, open]\n    )\n\n    // Helper to toggle the sidebar.\n    const toggleSidebar = React.useCallback(() => {\n      return isMobile\n        ? setOpenMobile((open) => !open)\n        : setOpen((open) => !open)\n    }, [isMobile, setOpen, setOpenMobile])\n\n    // Adds a keyboard shortcut to toggle the sidebar.\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n          (event.metaKey || event.ctrlKey)\n        ) {\n          event.preventDefault()\n          toggleSidebar()\n        }\n      }\n\n      window.addEventListener(\"keydown\", handleKeyDown)\n      return () => window.removeEventListener(\"keydown\", handleKeyDown)\n    }, [toggleSidebar])\n\n    // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n    // This makes it easier to style the sidebar with Tailwind classes.\n    const state = open ? \"expanded\" : \"collapsed\"\n\n    const contextValue = React.useMemo<SidebarContextProps>(\n      () => ({\n        state,\n        open,\n        setOpen,\n        isMobile,\n        openMobile,\n        setOpenMobile,\n        toggleSidebar,\n      }),\n      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n    )\n\n    return (\n      <SidebarContext.Provider value={contextValue}>\n        <TooltipProvider delayDuration={0}>\n          <div\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH,\n                \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n                ...style,\n              } as React.CSSProperties\n            }\n            className={cn(\n              \"group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar\",\n              className\n            )}\n            ref={ref}\n            {...props}\n          >\n            {children}\n          </div>\n        </TooltipProvider>\n      </SidebarContext.Provider>\n    )\n  }\n)\nSidebarProvider.displayName = \"SidebarProvider\"\n\nconst Sidebar = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    side?: \"left\" | \"right\"\n    variant?: \"sidebar\" | \"floating\" | \"inset\"\n    collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n  }\n>(\n  (\n    {\n      side = \"left\",\n      variant = \"sidebar\",\n      collapsible = \"offcanvas\",\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n    if (collapsible === \"none\") {\n      return (\n        <div\n          className={cn(\n            \"flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground\",\n            className\n          )}\n          ref={ref}\n          {...props}\n        >\n          {children}\n        </div>\n      )\n    }\n\n    if (isMobile) {\n      return (\n        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n          <SheetContent\n            data-sidebar=\"sidebar\"\n            data-mobile=\"true\"\n            className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\"\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n              } as React.CSSProperties\n            }\n            side={side}\n          >\n            <SheetHeader className=\"sr-only\">\n              <SheetTitle>Sidebar</SheetTitle>\n              <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n            </SheetHeader>\n            <div className=\"flex h-full w-full flex-col\">{children}</div>\n          </SheetContent>\n        </Sheet>\n      )\n    }\n\n    return (\n      <div\n        ref={ref}\n        className=\"group peer hidden text-sidebar-foreground md:block\"\n        data-state={state}\n        data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n        data-variant={variant}\n        data-side={side}\n      >\n        {/* This is what handles the sidebar gap on desktop */}\n        <div\n          className={cn(\n            \"relative w-[--sidebar-width] bg-transparent transition-[width] duration-200 ease-linear\",\n            \"group-data-[collapsible=offcanvas]:w-0\",\n            \"group-data-[side=right]:rotate-180\",\n            variant === \"floating\" || variant === \"inset\"\n              ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon]\"\n          )}\n        />\n        <div\n          className={cn(\n            \"fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] duration-200 ease-linear md:flex\",\n            side === \"left\"\n              ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n              : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n            // Adjust the padding for floating and inset variants.\n            variant === \"floating\" || variant === \"inset\"\n              ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n            className\n          )}\n          {...props}\n        >\n          <div\n            data-sidebar=\"sidebar\"\n            className=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\"\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\nSidebar.displayName = \"Sidebar\"\n\nconst SidebarTrigger = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentProps<typeof Button>\n>(({ className, onClick, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      ref={ref}\n      data-sidebar=\"trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeft />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n})\nSidebarTrigger.displayName = \"SidebarTrigger\"\n\nconst SidebarRail = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\">\n>(({ className, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <button\n      ref={ref}\n      data-sidebar=\"rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex\",\n        \"[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarRail.displayName = \"SidebarRail\"\n\nconst SidebarInset = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"main\">\n>(({ className, ...props }, ref) => {\n  return (\n    <main\n      ref={ref}\n      className={cn(\n        \"relative flex w-full flex-1 flex-col bg-background\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInset.displayName = \"SidebarInset\"\n\nconst SidebarInput = React.forwardRef<\n  React.ElementRef<typeof Input>,\n  React.ComponentProps<typeof Input>\n>(({ className, ...props }, ref) => {\n  return (\n    <Input\n      ref={ref}\n      data-sidebar=\"input\"\n      className={cn(\n        \"h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInput.displayName = \"SidebarInput\"\n\nconst SidebarHeader = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarHeader.displayName = \"SidebarHeader\"\n\nconst SidebarFooter = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarFooter.displayName = \"SidebarFooter\"\n\nconst SidebarSeparator = React.forwardRef<\n  React.ElementRef<typeof Separator>,\n  React.ComponentProps<typeof Separator>\n>(({ className, ...props }, ref) => {\n  return (\n    <Separator\n      ref={ref}\n      data-sidebar=\"separator\"\n      className={cn(\"mx-2 w-auto bg-sidebar-border\", className)}\n      {...props}\n    />\n  )\n})\nSidebarSeparator.displayName = \"SidebarSeparator\"\n\nconst SidebarContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarContent.displayName = \"SidebarContent\"\n\nconst SidebarGroup = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarGroup.displayName = \"SidebarGroup\"\n\nconst SidebarGroupLabel = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupLabel.displayName = \"SidebarGroupLabel\"\n\nconst SidebarGroupAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupAction.displayName = \"SidebarGroupAction\"\n\nconst SidebarGroupContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"group-content\"\n    className={cn(\"w-full text-sm\", className)}\n    {...props}\n  />\n))\nSidebarGroupContent.displayName = \"SidebarGroupContent\"\n\nconst SidebarMenu = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu\"\n    className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n    {...props}\n  />\n))\nSidebarMenu.displayName = \"SidebarMenu\"\n\nconst SidebarMenuItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    data-sidebar=\"menu-item\"\n    className={cn(\"group/menu-item relative\", className)}\n    {...props}\n  />\n))\nSidebarMenuItem.displayName = \"SidebarMenuItem\"\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst SidebarMenuButton = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    isActive?: boolean\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>\n  } & VariantProps<typeof sidebarMenuButtonVariants>\n>(\n  (\n    {\n      asChild = false,\n      isActive = false,\n      variant = \"default\",\n      size = \"default\",\n      tooltip,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : \"button\"\n    const { isMobile, state } = useSidebar()\n\n    const button = (\n      <Comp\n        ref={ref}\n        data-sidebar=\"menu-button\"\n        data-size={size}\n        data-active={isActive}\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n        {...props}\n      />\n    )\n\n    if (!tooltip) {\n      return button\n    }\n\n    if (typeof tooltip === \"string\") {\n      tooltip = {\n        children: tooltip,\n      }\n    }\n\n    return (\n      <Tooltip>\n        <TooltipTrigger asChild>{button}</TooltipTrigger>\n        <TooltipContent\n          side=\"right\"\n          align=\"center\"\n          hidden={state !== \"collapsed\" || isMobile}\n          {...tooltip}\n        />\n      </Tooltip>\n    )\n  }\n)\nSidebarMenuButton.displayName = \"SidebarMenuButton\"\n\nconst SidebarMenuAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    showOnHover?: boolean\n  }\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuAction.displayName = \"SidebarMenuAction\"\n\nconst SidebarMenuBadge = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"menu-badge\"\n    className={cn(\n      \"pointer-events-none absolute right-1 flex h-5 min-w-5 select-none items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground\",\n      \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n      \"peer-data-[size=sm]/menu-button:top-1\",\n      \"peer-data-[size=default]/menu-button:top-1.5\",\n      \"peer-data-[size=lg]/menu-button:top-2.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuBadge.displayName = \"SidebarMenuBadge\"\n\nconst SidebarMenuSkeleton = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    showIcon?: boolean\n  }\n>(({ className, showIcon = false, ...props }, ref) => {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-[--skeleton-width] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n})\nSidebarMenuSkeleton.displayName = \"SidebarMenuSkeleton\"\n\nconst SidebarMenuSub = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu-sub\"\n    className={cn(\n      \"mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuSub.displayName = \"SidebarMenuSub\"\n\nconst SidebarMenuSubItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ ...props }, ref) => <li ref={ref} {...props} />)\nSidebarMenuSubItem.displayName = \"SidebarMenuSubItem\"\n\nconst SidebarMenuSubButton = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentProps<\"a\"> & {\n    asChild?: boolean\n    size?: \"sm\" | \"md\"\n    isActive?: boolean\n  }\n>(({ asChild = false, size = \"md\", isActive, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuSubButton.displayName = \"SidebarMenuSubButton\"\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":23567},"client/src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"client/src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"client/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"client/src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"client/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1883},"client/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":689},"client/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"client/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"client/src/components/ui/toggle-group.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1753},"client/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1527},"client/src/components/ui/tooltip.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1209}}}